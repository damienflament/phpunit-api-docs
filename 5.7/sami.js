
window.projectVersion = '5.7';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href=".html">[Global Namespace]</a>                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Exception.html">PHPUnit_Exception</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Extensions_GroupTestSuite" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Extensions_GroupTestSuite.html">PHPUnit_Extensions_GroupTestSuite</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Extensions_PhptTestCase" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Extensions_PhptTestCase.html">PHPUnit_Extensions_PhptTestCase</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Extensions_PhptTestSuite" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Extensions_PhptTestSuite.html">PHPUnit_Extensions_PhptTestSuite</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Extensions_RepeatedTest" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Extensions_RepeatedTest.html">PHPUnit_Extensions_RepeatedTest</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Extensions_TestDecorator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Extensions_TestDecorator.html">PHPUnit_Extensions_TestDecorator</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Extensions_TicketListener" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Extensions_TicketListener.html">PHPUnit_Extensions_TicketListener</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Assert" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Assert.html">PHPUnit_Framework_Assert</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_AssertionFailedError" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_AssertionFailedError.html">PHPUnit_Framework_AssertionFailedError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_BaseTestListener" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_BaseTestListener.html">PHPUnit_Framework_BaseTestListener</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_CodeCoverageException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_CodeCoverageException.html">PHPUnit_Framework_CodeCoverageException</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint.html">PHPUnit_Framework_Constraint</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_And" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_And.html">PHPUnit_Framework_Constraint_And</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ArrayHasKey" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ArrayHasKey.html">PHPUnit_Framework_Constraint_ArrayHasKey</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ArraySubset" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ArraySubset.html">PHPUnit_Framework_Constraint_ArraySubset</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Attribute" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Attribute.html">PHPUnit_Framework_Constraint_Attribute</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Callback" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Callback.html">PHPUnit_Framework_Constraint_Callback</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ClassHasAttribute" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ClassHasAttribute.html">PHPUnit_Framework_Constraint_ClassHasAttribute</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ClassHasStaticAttribute" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ClassHasStaticAttribute.html">PHPUnit_Framework_Constraint_ClassHasStaticAttribute</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Composite" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Composite.html">PHPUnit_Framework_Constraint_Composite</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Count" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Count.html">PHPUnit_Framework_Constraint_Count</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Exception.html">PHPUnit_Framework_Constraint_Exception</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ExceptionCode" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ExceptionCode.html">PHPUnit_Framework_Constraint_ExceptionCode</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ExceptionMessage" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ExceptionMessage.html">PHPUnit_Framework_Constraint_ExceptionMessage</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ExceptionMessageRegExp" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ExceptionMessageRegExp.html">PHPUnit_Framework_Constraint_ExceptionMessageRegExp</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_FileExists" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_FileExists.html">PHPUnit_Framework_Constraint_FileExists</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_GreaterThan" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_GreaterThan.html">PHPUnit_Framework_Constraint_GreaterThan</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsAnything" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsAnything.html">PHPUnit_Framework_Constraint_IsAnything</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsEmpty" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsEmpty.html">PHPUnit_Framework_Constraint_IsEmpty</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsEqual" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsEqual.html">PHPUnit_Framework_Constraint_IsEqual</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsFalse" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsFalse.html">PHPUnit_Framework_Constraint_IsFalse</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsIdentical" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsIdentical.html">PHPUnit_Framework_Constraint_IsIdentical</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsInstanceOf" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsInstanceOf.html">PHPUnit_Framework_Constraint_IsInstanceOf</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsJson" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsJson.html">PHPUnit_Framework_Constraint_IsJson</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsNull" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsNull.html">PHPUnit_Framework_Constraint_IsNull</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsTrue" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsTrue.html">PHPUnit_Framework_Constraint_IsTrue</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsType" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsType.html">PHPUnit_Framework_Constraint_IsType</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_JsonMatches" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_JsonMatches.html">PHPUnit_Framework_Constraint_JsonMatches</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider.html">PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_LessThan" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_LessThan.html">PHPUnit_Framework_Constraint_LessThan</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Not" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Not.html">PHPUnit_Framework_Constraint_Not</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ObjectHasAttribute" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ObjectHasAttribute.html">PHPUnit_Framework_Constraint_ObjectHasAttribute</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Or" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Or.html">PHPUnit_Framework_Constraint_Or</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_PCREMatch" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_PCREMatch.html">PHPUnit_Framework_Constraint_PCREMatch</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_SameSize" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_SameSize.html">PHPUnit_Framework_Constraint_SameSize</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_StringContains" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_StringContains.html">PHPUnit_Framework_Constraint_StringContains</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_StringEndsWith" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_StringEndsWith.html">PHPUnit_Framework_Constraint_StringEndsWith</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_StringMatches" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_StringMatches.html">PHPUnit_Framework_Constraint_StringMatches</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_StringStartsWith" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_StringStartsWith.html">PHPUnit_Framework_Constraint_StringStartsWith</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_TraversableContains" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_TraversableContains.html">PHPUnit_Framework_Constraint_TraversableContains</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_TraversableContainsOnly" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_TraversableContainsOnly.html">PHPUnit_Framework_Constraint_TraversableContainsOnly</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Xor" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Xor.html">PHPUnit_Framework_Constraint_Xor</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Error" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Error.html">PHPUnit_Framework_Error</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Error_Deprecated" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Error_Deprecated.html">PHPUnit_Framework_Error_Deprecated</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Error_Notice" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Error_Notice.html">PHPUnit_Framework_Error_Notice</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Error_Warning" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Error_Warning.html">PHPUnit_Framework_Error_Warning</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Exception.html">PHPUnit_Framework_Exception</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_ExceptionWrapper" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_ExceptionWrapper.html">PHPUnit_Framework_ExceptionWrapper</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_ExpectationFailedException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_ExpectationFailedException.html">PHPUnit_Framework_ExpectationFailedException</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_IncompleteTest" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_IncompleteTest.html">PHPUnit_Framework_IncompleteTest</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_IncompleteTestCase" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_IncompleteTestCase.html">PHPUnit_Framework_IncompleteTestCase</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_IncompleteTestError" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_IncompleteTestError.html">PHPUnit_Framework_IncompleteTestError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_InvalidCoversTargetError" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_InvalidCoversTargetError.html">PHPUnit_Framework_InvalidCoversTargetError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_InvalidCoversTargetException" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_InvalidCoversTargetException.html">PHPUnit_Framework_InvalidCoversTargetException</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_OutputError" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_OutputError.html">PHPUnit_Framework_OutputError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_RiskyTest" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_RiskyTest.html">PHPUnit_Framework_RiskyTest</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_RiskyTestError" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_RiskyTestError.html">PHPUnit_Framework_RiskyTestError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_SelfDescribing" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_SelfDescribing.html">PHPUnit_Framework_SelfDescribing</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_SkippedTest" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_SkippedTest.html">PHPUnit_Framework_SkippedTest</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_SkippedTestCase" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_SkippedTestCase.html">PHPUnit_Framework_SkippedTestCase</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_SkippedTestError" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_SkippedTestError.html">PHPUnit_Framework_SkippedTestError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_SkippedTestSuiteError" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_SkippedTestSuiteError.html">PHPUnit_Framework_SkippedTestSuiteError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_SyntheticError" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_SyntheticError.html">PHPUnit_Framework_SyntheticError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Test" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Test.html">PHPUnit_Framework_Test</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_TestCase" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_TestCase.html">PHPUnit_Framework_TestCase</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_TestFailure" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_TestFailure.html">PHPUnit_Framework_TestFailure</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_TestListener" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_TestListener.html">PHPUnit_Framework_TestListener</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_TestResult" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_TestResult.html">PHPUnit_Framework_TestResult</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_TestSuite" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_TestSuite.html">PHPUnit_Framework_TestSuite</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_TestSuite_DataProvider" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_TestSuite_DataProvider.html">PHPUnit_Framework_TestSuite_DataProvider</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_UnintentionallyCoveredCodeError" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_UnintentionallyCoveredCodeError.html">PHPUnit_Framework_UnintentionallyCoveredCodeError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Warning" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Framework_Warning.html">PHPUnit_Framework_Warning</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_BaseTestRunner" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Runner_BaseTestRunner.html">PHPUnit_Runner_BaseTestRunner</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Runner_Exception.html">PHPUnit_Runner_Exception</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_Filter_Factory" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Runner_Filter_Factory.html">PHPUnit_Runner_Filter_Factory</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_Filter_GroupFilterIterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Runner_Filter_GroupFilterIterator.html">PHPUnit_Runner_Filter_GroupFilterIterator</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_Filter_Group_Exclude" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Runner_Filter_Group_Exclude.html">PHPUnit_Runner_Filter_Group_Exclude</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_Filter_Group_Include" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Runner_Filter_Group_Include.html">PHPUnit_Runner_Filter_Group_Include</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_Filter_Test" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Runner_Filter_Test.html">PHPUnit_Runner_Filter_Test</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_StandardTestSuiteLoader" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Runner_StandardTestSuiteLoader.html">PHPUnit_Runner_StandardTestSuiteLoader</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_TestSuiteLoader" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Runner_TestSuiteLoader.html">PHPUnit_Runner_TestSuiteLoader</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_Version" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Runner_Version.html">PHPUnit_Runner_Version</a>                    </div>                </li>                            <li data-name="class:PHPUnit_TextUI_Command" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_TextUI_Command.html">PHPUnit_TextUI_Command</a>                    </div>                </li>                            <li data-name="class:PHPUnit_TextUI_ResultPrinter" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_TextUI_ResultPrinter.html">PHPUnit_TextUI_ResultPrinter</a>                    </div>                </li>                            <li data-name="class:PHPUnit_TextUI_TestRunner" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_TextUI_TestRunner.html">PHPUnit_TextUI_TestRunner</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Blacklist" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_Blacklist.html">PHPUnit_Util_Blacklist</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Configuration" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_Configuration.html">PHPUnit_Util_Configuration</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_ErrorHandler" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_ErrorHandler.html">PHPUnit_Util_ErrorHandler</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Fileloader" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_Fileloader.html">PHPUnit_Util_Fileloader</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Filesystem" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_Filesystem.html">PHPUnit_Util_Filesystem</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Filter" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_Filter.html">PHPUnit_Util_Filter</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Getopt" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_Getopt.html">PHPUnit_Util_Getopt</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_GlobalState" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_GlobalState.html">PHPUnit_Util_GlobalState</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_InvalidArgumentHelper" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_InvalidArgumentHelper.html">PHPUnit_Util_InvalidArgumentHelper</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Log_JSON" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_Log_JSON.html">PHPUnit_Util_Log_JSON</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Log_JUnit" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_Log_JUnit.html">PHPUnit_Util_Log_JUnit</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Log_TAP" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_Log_TAP.html">PHPUnit_Util_Log_TAP</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_PHP" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_PHP.html">PHPUnit_Util_PHP</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_PHP_Default" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_PHP_Default.html">PHPUnit_Util_PHP_Default</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_PHP_Windows" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_PHP_Windows.html">PHPUnit_Util_PHP_Windows</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Printer" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_Printer.html">PHPUnit_Util_Printer</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Regex" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_Regex.html">PHPUnit_Util_Regex</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_String" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_String.html">PHPUnit_Util_String</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Test" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_Test.html">PHPUnit_Util_Test</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_TestDox_NamePrettifier" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_TestDox_NamePrettifier.html">PHPUnit_Util_TestDox_NamePrettifier</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_TestDox_ResultPrinter" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_TestDox_ResultPrinter.html">PHPUnit_Util_TestDox_ResultPrinter</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_TestDox_ResultPrinter_HTML" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_TestDox_ResultPrinter_HTML.html">PHPUnit_Util_TestDox_ResultPrinter_HTML</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_TestDox_ResultPrinter_Text" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_TestDox_ResultPrinter_Text.html">PHPUnit_Util_TestDox_ResultPrinter_Text</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_TestSuiteIterator" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_TestSuiteIterator.html">PHPUnit_Util_TestSuiteIterator</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Type" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_Type.html">PHPUnit_Util_Type</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_XML" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Util_XML.html">PHPUnit_Util_XML</a>                    </div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": ".html", "name": "", "doc": "Namespace "},{"type": "Namespace", "link": "PHPUnit.html", "name": "PHPUnit", "doc": "Namespace PHPUnit"},{"type": "Namespace", "link": "PHPUnit/Framework.html", "name": "PHPUnit\\Framework", "doc": "Namespace PHPUnit\\Framework"},
            {"type": "Interface", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/TestListener.html", "name": "PHPUnit\\Framework\\TestListener", "doc": "&quot;&quot;"},
                    
            {"type": "Interface",  "link": "PHPUnit_Exception.html", "name": "PHPUnit_Exception", "doc": "&quot;Marker interface for PHPUnit exceptions.&quot;"},
                    
            {"type": "Interface",  "link": "PHPUnit_Framework_IncompleteTest.html", "name": "PHPUnit_Framework_IncompleteTest", "doc": "&quot;A marker interface for marking any exception\/error as result of an unit\ntest as incomplete implementation or currently not implemented.&quot;"},
                    
            {"type": "Interface",  "link": "PHPUnit_Framework_RiskyTest.html", "name": "PHPUnit_Framework_RiskyTest", "doc": "&quot;A marker interface for marking any exception\/error as result of an unit\ntest as risky.&quot;"},
                    
            {"type": "Interface",  "link": "PHPUnit_Framework_SelfDescribing.html", "name": "PHPUnit_Framework_SelfDescribing", "doc": "&quot;Interface for classes that can return a description of itself.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_SelfDescribing", "fromLink": "PHPUnit_Framework_SelfDescribing.html", "link": "PHPUnit_Framework_SelfDescribing.html#method_toString", "name": "PHPUnit_Framework_SelfDescribing::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_SkippedTest.html", "name": "PHPUnit_Framework_SkippedTest", "doc": "&quot;A marker interface for marking a unit test as being skipped.&quot;"},
                    
            {"type": "Interface",  "link": "PHPUnit_Framework_Test.html", "name": "PHPUnit_Framework_Test", "doc": "&quot;A Test can be run and collect its results.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Test", "fromLink": "PHPUnit_Framework_Test.html", "link": "PHPUnit_Framework_Test.html#method_run", "name": "PHPUnit_Framework_Test::run", "doc": "&quot;Runs a test and collects its result in a TestResult instance.&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Framework_TestListener.html", "name": "PHPUnit_Framework_TestListener", "doc": "&quot;A Listener for test progress.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_addError", "name": "PHPUnit_Framework_TestListener::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_addFailure", "name": "PHPUnit_Framework_TestListener::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_addIncompleteTest", "name": "PHPUnit_Framework_TestListener::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_addRiskyTest", "name": "PHPUnit_Framework_TestListener::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_addSkippedTest", "name": "PHPUnit_Framework_TestListener::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_startTestSuite", "name": "PHPUnit_Framework_TestListener::startTestSuite", "doc": "&quot;A test suite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_endTestSuite", "name": "PHPUnit_Framework_TestListener::endTestSuite", "doc": "&quot;A test suite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_startTest", "name": "PHPUnit_Framework_TestListener::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_endTest", "name": "PHPUnit_Framework_TestListener::endTest", "doc": "&quot;A test ended.&quot;"},
            
            {"type": "Interface",  "link": "PHPUnit_Runner_TestSuiteLoader.html", "name": "PHPUnit_Runner_TestSuiteLoader", "doc": "&quot;An interface to define how a test suite should be loaded.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Runner_TestSuiteLoader", "fromLink": "PHPUnit_Runner_TestSuiteLoader.html", "link": "PHPUnit_Runner_TestSuiteLoader.html#method_load", "name": "PHPUnit_Runner_TestSuiteLoader::load", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_TestSuiteLoader", "fromLink": "PHPUnit_Runner_TestSuiteLoader.html", "link": "PHPUnit_Runner_TestSuiteLoader.html#method_reload", "name": "PHPUnit_Runner_TestSuiteLoader::reload", "doc": "&quot;&quot;"},
            
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/Assert.html", "name": "PHPUnit\\Framework\\Assert", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/BaseTestListener.html", "name": "PHPUnit\\Framework\\BaseTestListener", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/TestCase.html", "name": "PHPUnit\\Framework\\TestCase", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/TestListener.html", "name": "PHPUnit\\Framework\\TestListener", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Exception.html", "name": "PHPUnit_Exception", "doc": "&quot;Marker interface for PHPUnit exceptions.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Extensions_GroupTestSuite.html", "name": "PHPUnit_Extensions_GroupTestSuite", "doc": "&quot;We have a TestSuite object A.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Extensions_GroupTestSuite", "fromLink": "PHPUnit_Extensions_GroupTestSuite.html", "link": "PHPUnit_Extensions_GroupTestSuite.html#method___construct", "name": "PHPUnit_Extensions_GroupTestSuite::__construct", "doc": "&quot;Constructs a new TestSuite:&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Extensions_PhptTestCase.html", "name": "PHPUnit_Extensions_PhptTestCase", "doc": "&quot;Runner for PHPT test cases.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Extensions_PhptTestCase", "fromLink": "PHPUnit_Extensions_PhptTestCase.html", "link": "PHPUnit_Extensions_PhptTestCase.html#method___construct", "name": "PHPUnit_Extensions_PhptTestCase::__construct", "doc": "&quot;Constructs a test case with the given filename.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_PhptTestCase", "fromLink": "PHPUnit_Extensions_PhptTestCase.html", "link": "PHPUnit_Extensions_PhptTestCase.html#method_count", "name": "PHPUnit_Extensions_PhptTestCase::count", "doc": "&quot;Counts the number of test cases executed by run(TestResult result).&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_PhptTestCase", "fromLink": "PHPUnit_Extensions_PhptTestCase.html", "link": "PHPUnit_Extensions_PhptTestCase.html#method_run", "name": "PHPUnit_Extensions_PhptTestCase::run", "doc": "&quot;Runs a test and collects its result in a TestResult instance.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_PhptTestCase", "fromLink": "PHPUnit_Extensions_PhptTestCase.html", "link": "PHPUnit_Extensions_PhptTestCase.html#method_getName", "name": "PHPUnit_Extensions_PhptTestCase::getName", "doc": "&quot;Returns the name of the test case.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_PhptTestCase", "fromLink": "PHPUnit_Extensions_PhptTestCase.html", "link": "PHPUnit_Extensions_PhptTestCase.html#method_toString", "name": "PHPUnit_Extensions_PhptTestCase::toString", "doc": "&quot;Returns a string representation of the test case.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_PhptTestCase", "fromLink": "PHPUnit_Extensions_PhptTestCase.html", "link": "PHPUnit_Extensions_PhptTestCase.html#method_parseIniSection", "name": "PHPUnit_Extensions_PhptTestCase::parseIniSection", "doc": "&quot;Parse --INI-- section key value pairs and return as array.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_PhptTestCase", "fromLink": "PHPUnit_Extensions_PhptTestCase.html", "link": "PHPUnit_Extensions_PhptTestCase.html#method_parseEnvSection", "name": "PHPUnit_Extensions_PhptTestCase::parseEnvSection", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Extensions_PhptTestSuite.html", "name": "PHPUnit_Extensions_PhptTestSuite", "doc": "&quot;Suite for .phpt test cases.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Extensions_PhptTestSuite", "fromLink": "PHPUnit_Extensions_PhptTestSuite.html", "link": "PHPUnit_Extensions_PhptTestSuite.html#method___construct", "name": "PHPUnit_Extensions_PhptTestSuite::__construct", "doc": "&quot;Constructs a new TestSuite:&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Extensions_RepeatedTest.html", "name": "PHPUnit_Extensions_RepeatedTest", "doc": "&quot;A Decorator that runs a test repeatedly.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Extensions_RepeatedTest", "fromLink": "PHPUnit_Extensions_RepeatedTest.html", "link": "PHPUnit_Extensions_RepeatedTest.html#method___construct", "name": "PHPUnit_Extensions_RepeatedTest::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_RepeatedTest", "fromLink": "PHPUnit_Extensions_RepeatedTest.html", "link": "PHPUnit_Extensions_RepeatedTest.html#method_count", "name": "PHPUnit_Extensions_RepeatedTest::count", "doc": "&quot;Counts the number of test cases that\nwill be run by this test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_RepeatedTest", "fromLink": "PHPUnit_Extensions_RepeatedTest.html", "link": "PHPUnit_Extensions_RepeatedTest.html#method_run", "name": "PHPUnit_Extensions_RepeatedTest::run", "doc": "&quot;Runs the decorated test and collects the\nresult in a TestResult.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Extensions_TestDecorator.html", "name": "PHPUnit_Extensions_TestDecorator", "doc": "&quot;A Decorator for Tests.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Extensions_TestDecorator", "fromLink": "PHPUnit_Extensions_TestDecorator.html", "link": "PHPUnit_Extensions_TestDecorator.html#method___construct", "name": "PHPUnit_Extensions_TestDecorator::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TestDecorator", "fromLink": "PHPUnit_Extensions_TestDecorator.html", "link": "PHPUnit_Extensions_TestDecorator.html#method_toString", "name": "PHPUnit_Extensions_TestDecorator::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TestDecorator", "fromLink": "PHPUnit_Extensions_TestDecorator.html", "link": "PHPUnit_Extensions_TestDecorator.html#method_basicRun", "name": "PHPUnit_Extensions_TestDecorator::basicRun", "doc": "&quot;Runs the test and collects the\nresult in a TestResult.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TestDecorator", "fromLink": "PHPUnit_Extensions_TestDecorator.html", "link": "PHPUnit_Extensions_TestDecorator.html#method_count", "name": "PHPUnit_Extensions_TestDecorator::count", "doc": "&quot;Counts the number of test cases that\nwill be run by this test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TestDecorator", "fromLink": "PHPUnit_Extensions_TestDecorator.html", "link": "PHPUnit_Extensions_TestDecorator.html#method_createResult", "name": "PHPUnit_Extensions_TestDecorator::createResult", "doc": "&quot;Creates a default TestResult object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TestDecorator", "fromLink": "PHPUnit_Extensions_TestDecorator.html", "link": "PHPUnit_Extensions_TestDecorator.html#method_getTest", "name": "PHPUnit_Extensions_TestDecorator::getTest", "doc": "&quot;Returns the test to be run.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TestDecorator", "fromLink": "PHPUnit_Extensions_TestDecorator.html", "link": "PHPUnit_Extensions_TestDecorator.html#method_run", "name": "PHPUnit_Extensions_TestDecorator::run", "doc": "&quot;Runs a test and collects its result in a TestResult instance.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Extensions_TicketListener.html", "name": "PHPUnit_Extensions_TicketListener", "doc": "&quot;Base class for test listeners that interact with an issue tracker.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Extensions_TicketListener", "fromLink": "PHPUnit_Extensions_TicketListener.html", "link": "PHPUnit_Extensions_TicketListener.html#method_addError", "name": "PHPUnit_Extensions_TicketListener::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TicketListener", "fromLink": "PHPUnit_Extensions_TicketListener.html", "link": "PHPUnit_Extensions_TicketListener.html#method_addFailure", "name": "PHPUnit_Extensions_TicketListener::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TicketListener", "fromLink": "PHPUnit_Extensions_TicketListener.html", "link": "PHPUnit_Extensions_TicketListener.html#method_addIncompleteTest", "name": "PHPUnit_Extensions_TicketListener::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TicketListener", "fromLink": "PHPUnit_Extensions_TicketListener.html", "link": "PHPUnit_Extensions_TicketListener.html#method_addRiskyTest", "name": "PHPUnit_Extensions_TicketListener::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TicketListener", "fromLink": "PHPUnit_Extensions_TicketListener.html", "link": "PHPUnit_Extensions_TicketListener.html#method_addSkippedTest", "name": "PHPUnit_Extensions_TicketListener::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TicketListener", "fromLink": "PHPUnit_Extensions_TicketListener.html", "link": "PHPUnit_Extensions_TicketListener.html#method_startTestSuite", "name": "PHPUnit_Extensions_TicketListener::startTestSuite", "doc": "&quot;A test suite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TicketListener", "fromLink": "PHPUnit_Extensions_TicketListener.html", "link": "PHPUnit_Extensions_TicketListener.html#method_endTestSuite", "name": "PHPUnit_Extensions_TicketListener::endTestSuite", "doc": "&quot;A test suite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TicketListener", "fromLink": "PHPUnit_Extensions_TicketListener.html", "link": "PHPUnit_Extensions_TicketListener.html#method_startTest", "name": "PHPUnit_Extensions_TicketListener::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TicketListener", "fromLink": "PHPUnit_Extensions_TicketListener.html", "link": "PHPUnit_Extensions_TicketListener.html#method_endTest", "name": "PHPUnit_Extensions_TicketListener::endTest", "doc": "&quot;A test ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TicketListener", "fromLink": "PHPUnit_Extensions_TicketListener.html", "link": "PHPUnit_Extensions_TicketListener.html#method_getTicketInfo", "name": "PHPUnit_Extensions_TicketListener::getTicketInfo", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Extensions_TicketListener", "fromLink": "PHPUnit_Extensions_TicketListener.html", "link": "PHPUnit_Extensions_TicketListener.html#method_updateTicket", "name": "PHPUnit_Extensions_TicketListener::updateTicket", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Assert.html", "name": "PHPUnit_Framework_Assert", "doc": "&quot;A set of assertion methods.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertArrayHasKey", "name": "PHPUnit_Framework_Assert::assertArrayHasKey", "doc": "&quot;Asserts that an array has a specified key.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertArraySubset", "name": "PHPUnit_Framework_Assert::assertArraySubset", "doc": "&quot;Asserts that an array has a specified subset.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertArrayNotHasKey", "name": "PHPUnit_Framework_Assert::assertArrayNotHasKey", "doc": "&quot;Asserts that an array does not have a specified key.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertContains", "name": "PHPUnit_Framework_Assert::assertContains", "doc": "&quot;Asserts that a haystack contains a needle.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeContains", "name": "PHPUnit_Framework_Assert::assertAttributeContains", "doc": "&quot;Asserts that a haystack that is stored in a static attribute of a class\nor an attribute of an object contains a needle.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotContains", "name": "PHPUnit_Framework_Assert::assertNotContains", "doc": "&quot;Asserts that a haystack does not contain a needle.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeNotContains", "name": "PHPUnit_Framework_Assert::assertAttributeNotContains", "doc": "&quot;Asserts that a haystack that is stored in a static attribute of a class\nor an attribute of an object does not contain a needle.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertContainsOnly", "name": "PHPUnit_Framework_Assert::assertContainsOnly", "doc": "&quot;Asserts that a haystack contains only values of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertContainsOnlyInstancesOf", "name": "PHPUnit_Framework_Assert::assertContainsOnlyInstancesOf", "doc": "&quot;Asserts that a haystack contains only instances of a given classname&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeContainsOnly", "name": "PHPUnit_Framework_Assert::assertAttributeContainsOnly", "doc": "&quot;Asserts that a haystack that is stored in a static attribute of a class\nor an attribute of an object contains only values of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotContainsOnly", "name": "PHPUnit_Framework_Assert::assertNotContainsOnly", "doc": "&quot;Asserts that a haystack does not contain only values of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeNotContainsOnly", "name": "PHPUnit_Framework_Assert::assertAttributeNotContainsOnly", "doc": "&quot;Asserts that a haystack that is stored in a static attribute of a class\nor an attribute of an object does not contain only values of a given\ntype.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertCount", "name": "PHPUnit_Framework_Assert::assertCount", "doc": "&quot;Asserts the number of elements of an array, Countable or Traversable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeCount", "name": "PHPUnit_Framework_Assert::assertAttributeCount", "doc": "&quot;Asserts the number of elements of an array, Countable or Traversable\nthat is stored in an attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotCount", "name": "PHPUnit_Framework_Assert::assertNotCount", "doc": "&quot;Asserts the number of elements of an array, Countable or Traversable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeNotCount", "name": "PHPUnit_Framework_Assert::assertAttributeNotCount", "doc": "&quot;Asserts the number of elements of an array, Countable or Traversable\nthat is stored in an attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertEquals", "name": "PHPUnit_Framework_Assert::assertEquals", "doc": "&quot;Asserts that two variables are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeEquals", "name": "PHPUnit_Framework_Assert::assertAttributeEquals", "doc": "&quot;Asserts that a variable is equal to an attribute of an object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotEquals", "name": "PHPUnit_Framework_Assert::assertNotEquals", "doc": "&quot;Asserts that two variables are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeNotEquals", "name": "PHPUnit_Framework_Assert::assertAttributeNotEquals", "doc": "&quot;Asserts that a variable is not equal to an attribute of an object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertEmpty", "name": "PHPUnit_Framework_Assert::assertEmpty", "doc": "&quot;Asserts that a variable is empty.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeEmpty", "name": "PHPUnit_Framework_Assert::assertAttributeEmpty", "doc": "&quot;Asserts that a static attribute of a class or an attribute of an object\nis empty.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotEmpty", "name": "PHPUnit_Framework_Assert::assertNotEmpty", "doc": "&quot;Asserts that a variable is not empty.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeNotEmpty", "name": "PHPUnit_Framework_Assert::assertAttributeNotEmpty", "doc": "&quot;Asserts that a static attribute of a class or an attribute of an object\nis not empty.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertGreaterThan", "name": "PHPUnit_Framework_Assert::assertGreaterThan", "doc": "&quot;Asserts that a value is greater than another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeGreaterThan", "name": "PHPUnit_Framework_Assert::assertAttributeGreaterThan", "doc": "&quot;Asserts that an attribute is greater than another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertGreaterThanOrEqual", "name": "PHPUnit_Framework_Assert::assertGreaterThanOrEqual", "doc": "&quot;Asserts that a value is greater than or equal to another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeGreaterThanOrEqual", "name": "PHPUnit_Framework_Assert::assertAttributeGreaterThanOrEqual", "doc": "&quot;Asserts that an attribute is greater than or equal to another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertLessThan", "name": "PHPUnit_Framework_Assert::assertLessThan", "doc": "&quot;Asserts that a value is smaller than another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeLessThan", "name": "PHPUnit_Framework_Assert::assertAttributeLessThan", "doc": "&quot;Asserts that an attribute is smaller than another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertLessThanOrEqual", "name": "PHPUnit_Framework_Assert::assertLessThanOrEqual", "doc": "&quot;Asserts that a value is smaller than or equal to another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeLessThanOrEqual", "name": "PHPUnit_Framework_Assert::assertAttributeLessThanOrEqual", "doc": "&quot;Asserts that an attribute is smaller than or equal to another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertFileEquals", "name": "PHPUnit_Framework_Assert::assertFileEquals", "doc": "&quot;Asserts that the contents of one file is equal to the contents of another\nfile.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertFileNotEquals", "name": "PHPUnit_Framework_Assert::assertFileNotEquals", "doc": "&quot;Asserts that the contents of one file is not equal to the contents of\nanother file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertStringEqualsFile", "name": "PHPUnit_Framework_Assert::assertStringEqualsFile", "doc": "&quot;Asserts that the contents of a string is equal\nto the contents of a file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertStringNotEqualsFile", "name": "PHPUnit_Framework_Assert::assertStringNotEqualsFile", "doc": "&quot;Asserts that the contents of a string is not equal\nto the contents of a file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertIsReadable", "name": "PHPUnit_Framework_Assert::assertIsReadable", "doc": "&quot;Asserts that a file\/dir is readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotIsReadable", "name": "PHPUnit_Framework_Assert::assertNotIsReadable", "doc": "&quot;Asserts that a file\/dir exists and is not readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertIsWritable", "name": "PHPUnit_Framework_Assert::assertIsWritable", "doc": "&quot;Asserts that a file\/dir exists and is writable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotIsWritable", "name": "PHPUnit_Framework_Assert::assertNotIsWritable", "doc": "&quot;Asserts that a file\/dir exists and is not writable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertDirectoryExists", "name": "PHPUnit_Framework_Assert::assertDirectoryExists", "doc": "&quot;Asserts that a directory exists.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertDirectoryNotExists", "name": "PHPUnit_Framework_Assert::assertDirectoryNotExists", "doc": "&quot;Asserts that a directory does not exist.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertDirectoryIsReadable", "name": "PHPUnit_Framework_Assert::assertDirectoryIsReadable", "doc": "&quot;Asserts that a directory exists and is readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertDirectoryNotIsReadable", "name": "PHPUnit_Framework_Assert::assertDirectoryNotIsReadable", "doc": "&quot;Asserts that a directory exists and is not readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertDirectoryIsWritable", "name": "PHPUnit_Framework_Assert::assertDirectoryIsWritable", "doc": "&quot;Asserts that a directory exists and is writable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertDirectoryNotIsWritable", "name": "PHPUnit_Framework_Assert::assertDirectoryNotIsWritable", "doc": "&quot;Asserts that a directory exists and is not writable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertFileExists", "name": "PHPUnit_Framework_Assert::assertFileExists", "doc": "&quot;Asserts that a file exists.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertFileNotExists", "name": "PHPUnit_Framework_Assert::assertFileNotExists", "doc": "&quot;Asserts that a file does not exist.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertFileIsReadable", "name": "PHPUnit_Framework_Assert::assertFileIsReadable", "doc": "&quot;Asserts that a file exists and is readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertFileNotIsReadable", "name": "PHPUnit_Framework_Assert::assertFileNotIsReadable", "doc": "&quot;Asserts that a file exists and is not readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertFileIsWritable", "name": "PHPUnit_Framework_Assert::assertFileIsWritable", "doc": "&quot;Asserts that a file exists and is writable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertFileNotIsWritable", "name": "PHPUnit_Framework_Assert::assertFileNotIsWritable", "doc": "&quot;Asserts that a file exists and is not writable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertTrue", "name": "PHPUnit_Framework_Assert::assertTrue", "doc": "&quot;Asserts that a condition is true.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotTrue", "name": "PHPUnit_Framework_Assert::assertNotTrue", "doc": "&quot;Asserts that a condition is not true.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertFalse", "name": "PHPUnit_Framework_Assert::assertFalse", "doc": "&quot;Asserts that a condition is false.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotFalse", "name": "PHPUnit_Framework_Assert::assertNotFalse", "doc": "&quot;Asserts that a condition is not false.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNull", "name": "PHPUnit_Framework_Assert::assertNull", "doc": "&quot;Asserts that a variable is null.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotNull", "name": "PHPUnit_Framework_Assert::assertNotNull", "doc": "&quot;Asserts that a variable is not null.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertFinite", "name": "PHPUnit_Framework_Assert::assertFinite", "doc": "&quot;Asserts that a variable is finite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertInfinite", "name": "PHPUnit_Framework_Assert::assertInfinite", "doc": "&quot;Asserts that a variable is infinite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNan", "name": "PHPUnit_Framework_Assert::assertNan", "doc": "&quot;Asserts that a variable is nan.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertClassHasAttribute", "name": "PHPUnit_Framework_Assert::assertClassHasAttribute", "doc": "&quot;Asserts that a class has a specified attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertClassNotHasAttribute", "name": "PHPUnit_Framework_Assert::assertClassNotHasAttribute", "doc": "&quot;Asserts that a class does not have a specified attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertClassHasStaticAttribute", "name": "PHPUnit_Framework_Assert::assertClassHasStaticAttribute", "doc": "&quot;Asserts that a class has a specified static attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertClassNotHasStaticAttribute", "name": "PHPUnit_Framework_Assert::assertClassNotHasStaticAttribute", "doc": "&quot;Asserts that a class does not have a specified static attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertObjectHasAttribute", "name": "PHPUnit_Framework_Assert::assertObjectHasAttribute", "doc": "&quot;Asserts that an object has a specified attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertObjectNotHasAttribute", "name": "PHPUnit_Framework_Assert::assertObjectNotHasAttribute", "doc": "&quot;Asserts that an object does not have a specified attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertSame", "name": "PHPUnit_Framework_Assert::assertSame", "doc": "&quot;Asserts that two variables have the same type and value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeSame", "name": "PHPUnit_Framework_Assert::assertAttributeSame", "doc": "&quot;Asserts that a variable and an attribute of an object have the same type\nand value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotSame", "name": "PHPUnit_Framework_Assert::assertNotSame", "doc": "&quot;Asserts that two variables do not have the same type and value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeNotSame", "name": "PHPUnit_Framework_Assert::assertAttributeNotSame", "doc": "&quot;Asserts that a variable and an attribute of an object do not have the\nsame type and value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertInstanceOf", "name": "PHPUnit_Framework_Assert::assertInstanceOf", "doc": "&quot;Asserts that a variable is of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeInstanceOf", "name": "PHPUnit_Framework_Assert::assertAttributeInstanceOf", "doc": "&quot;Asserts that an attribute is of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotInstanceOf", "name": "PHPUnit_Framework_Assert::assertNotInstanceOf", "doc": "&quot;Asserts that a variable is not of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeNotInstanceOf", "name": "PHPUnit_Framework_Assert::assertAttributeNotInstanceOf", "doc": "&quot;Asserts that an attribute is of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertInternalType", "name": "PHPUnit_Framework_Assert::assertInternalType", "doc": "&quot;Asserts that a variable is of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeInternalType", "name": "PHPUnit_Framework_Assert::assertAttributeInternalType", "doc": "&quot;Asserts that an attribute is of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotInternalType", "name": "PHPUnit_Framework_Assert::assertNotInternalType", "doc": "&quot;Asserts that a variable is not of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertAttributeNotInternalType", "name": "PHPUnit_Framework_Assert::assertAttributeNotInternalType", "doc": "&quot;Asserts that an attribute is of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertRegExp", "name": "PHPUnit_Framework_Assert::assertRegExp", "doc": "&quot;Asserts that a string matches a given regular expression.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotRegExp", "name": "PHPUnit_Framework_Assert::assertNotRegExp", "doc": "&quot;Asserts that a string does not match a given regular expression.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertSameSize", "name": "PHPUnit_Framework_Assert::assertSameSize", "doc": "&quot;Assert that the size of two arrays (or &lt;code&gt;Countable&lt;\/code&gt; or &lt;code&gt;Traversable&lt;\/code&gt; objects)\nis the same.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertNotSameSize", "name": "PHPUnit_Framework_Assert::assertNotSameSize", "doc": "&quot;Assert that the size of two arrays (or &lt;code&gt;Countable&lt;\/code&gt; or &lt;code&gt;Traversable&lt;\/code&gt; objects)\nis not the same.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertStringMatchesFormat", "name": "PHPUnit_Framework_Assert::assertStringMatchesFormat", "doc": "&quot;Asserts that a string matches a given format string.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertStringNotMatchesFormat", "name": "PHPUnit_Framework_Assert::assertStringNotMatchesFormat", "doc": "&quot;Asserts that a string does not match a given format string.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertStringMatchesFormatFile", "name": "PHPUnit_Framework_Assert::assertStringMatchesFormatFile", "doc": "&quot;Asserts that a string matches a given format file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertStringNotMatchesFormatFile", "name": "PHPUnit_Framework_Assert::assertStringNotMatchesFormatFile", "doc": "&quot;Asserts that a string does not match a given format string.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertStringStartsWith", "name": "PHPUnit_Framework_Assert::assertStringStartsWith", "doc": "&quot;Asserts that a string starts with a given prefix.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertStringStartsNotWith", "name": "PHPUnit_Framework_Assert::assertStringStartsNotWith", "doc": "&quot;Asserts that a string starts not with a given prefix.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertStringEndsWith", "name": "PHPUnit_Framework_Assert::assertStringEndsWith", "doc": "&quot;Asserts that a string ends with a given suffix.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertStringEndsNotWith", "name": "PHPUnit_Framework_Assert::assertStringEndsNotWith", "doc": "&quot;Asserts that a string ends not with a given suffix.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertXmlFileEqualsXmlFile", "name": "PHPUnit_Framework_Assert::assertXmlFileEqualsXmlFile", "doc": "&quot;Asserts that two XML files are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertXmlFileNotEqualsXmlFile", "name": "PHPUnit_Framework_Assert::assertXmlFileNotEqualsXmlFile", "doc": "&quot;Asserts that two XML files are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertXmlStringEqualsXmlFile", "name": "PHPUnit_Framework_Assert::assertXmlStringEqualsXmlFile", "doc": "&quot;Asserts that two XML documents are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertXmlStringNotEqualsXmlFile", "name": "PHPUnit_Framework_Assert::assertXmlStringNotEqualsXmlFile", "doc": "&quot;Asserts that two XML documents are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertXmlStringEqualsXmlString", "name": "PHPUnit_Framework_Assert::assertXmlStringEqualsXmlString", "doc": "&quot;Asserts that two XML documents are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertXmlStringNotEqualsXmlString", "name": "PHPUnit_Framework_Assert::assertXmlStringNotEqualsXmlString", "doc": "&quot;Asserts that two XML documents are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertEqualXMLStructure", "name": "PHPUnit_Framework_Assert::assertEqualXMLStructure", "doc": "&quot;Asserts that a hierarchy of DOMElements matches.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertThat", "name": "PHPUnit_Framework_Assert::assertThat", "doc": "&quot;Evaluates a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertJson", "name": "PHPUnit_Framework_Assert::assertJson", "doc": "&quot;Asserts that a string is a valid JSON string.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertJsonStringEqualsJsonString", "name": "PHPUnit_Framework_Assert::assertJsonStringEqualsJsonString", "doc": "&quot;Asserts that two given JSON encoded objects or arrays are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertJsonStringNotEqualsJsonString", "name": "PHPUnit_Framework_Assert::assertJsonStringNotEqualsJsonString", "doc": "&quot;Asserts that two given JSON encoded objects or arrays are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertJsonStringEqualsJsonFile", "name": "PHPUnit_Framework_Assert::assertJsonStringEqualsJsonFile", "doc": "&quot;Asserts that the generated JSON encoded object and the content of the given file are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertJsonStringNotEqualsJsonFile", "name": "PHPUnit_Framework_Assert::assertJsonStringNotEqualsJsonFile", "doc": "&quot;Asserts that the generated JSON encoded object and the content of the given file are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertJsonFileEqualsJsonFile", "name": "PHPUnit_Framework_Assert::assertJsonFileEqualsJsonFile", "doc": "&quot;Asserts that two JSON files are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_assertJsonFileNotEqualsJsonFile", "name": "PHPUnit_Framework_Assert::assertJsonFileNotEqualsJsonFile", "doc": "&quot;Asserts that two JSON files are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_logicalAnd", "name": "PHPUnit_Framework_Assert::logicalAnd", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_And matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_logicalOr", "name": "PHPUnit_Framework_Assert::logicalOr", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_Or matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_logicalNot", "name": "PHPUnit_Framework_Assert::logicalNot", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_Not matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_logicalXor", "name": "PHPUnit_Framework_Assert::logicalXor", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_Xor matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_anything", "name": "PHPUnit_Framework_Assert::anything", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsAnything matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_isTrue", "name": "PHPUnit_Framework_Assert::isTrue", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsTrue matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_callback", "name": "PHPUnit_Framework_Assert::callback", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_Callback matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_isFalse", "name": "PHPUnit_Framework_Assert::isFalse", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsFalse matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_isJson", "name": "PHPUnit_Framework_Assert::isJson", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsJson matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_isNull", "name": "PHPUnit_Framework_Assert::isNull", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsNull matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_isFinite", "name": "PHPUnit_Framework_Assert::isFinite", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsFinite matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_isInfinite", "name": "PHPUnit_Framework_Assert::isInfinite", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsInfinite matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_isNan", "name": "PHPUnit_Framework_Assert::isNan", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsNan matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_attribute", "name": "PHPUnit_Framework_Assert::attribute", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_Attribute matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_contains", "name": "PHPUnit_Framework_Assert::contains", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_TraversableContains matcher\nobject.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_containsOnly", "name": "PHPUnit_Framework_Assert::containsOnly", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_TraversableContainsOnly matcher\nobject.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_containsOnlyInstancesOf", "name": "PHPUnit_Framework_Assert::containsOnlyInstancesOf", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_TraversableContainsOnly matcher\nobject.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_arrayHasKey", "name": "PHPUnit_Framework_Assert::arrayHasKey", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_ArrayHasKey matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_equalTo", "name": "PHPUnit_Framework_Assert::equalTo", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsEqual matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_attributeEqualTo", "name": "PHPUnit_Framework_Assert::attributeEqualTo", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint&lt;em&gt;IsEqual matcher object\nthat is wrapped in a PHPUnit&lt;\/em&gt;Framework&lt;em&gt;Constraint&lt;\/em&gt;Attribute matcher\nobject.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_isEmpty", "name": "PHPUnit_Framework_Assert::isEmpty", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsEmpty matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_isWritable", "name": "PHPUnit_Framework_Assert::isWritable", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsWritable matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_isReadable", "name": "PHPUnit_Framework_Assert::isReadable", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsReadable matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_directoryExists", "name": "PHPUnit_Framework_Assert::directoryExists", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_DirectoryExists matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_fileExists", "name": "PHPUnit_Framework_Assert::fileExists", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_FileExists matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_greaterThan", "name": "PHPUnit_Framework_Assert::greaterThan", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_GreaterThan matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_greaterThanOrEqual", "name": "PHPUnit_Framework_Assert::greaterThanOrEqual", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint&lt;em&gt;Or matcher object that wraps\na PHPUnit&lt;\/em&gt;Framework&lt;em&gt;Constraint&lt;\/em&gt;IsEqual and a\nPHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_GreaterThan matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_classHasAttribute", "name": "PHPUnit_Framework_Assert::classHasAttribute", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_ClassHasAttribute matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_classHasStaticAttribute", "name": "PHPUnit_Framework_Assert::classHasStaticAttribute", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_ClassHasStaticAttribute matcher\nobject.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_objectHasAttribute", "name": "PHPUnit_Framework_Assert::objectHasAttribute", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_ObjectHasAttribute matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_identicalTo", "name": "PHPUnit_Framework_Assert::identicalTo", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsIdentical matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_isInstanceOf", "name": "PHPUnit_Framework_Assert::isInstanceOf", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsInstanceOf matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_isType", "name": "PHPUnit_Framework_Assert::isType", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsType matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_lessThan", "name": "PHPUnit_Framework_Assert::lessThan", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_LessThan matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_lessThanOrEqual", "name": "PHPUnit_Framework_Assert::lessThanOrEqual", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint&lt;em&gt;Or matcher object that wraps\na PHPUnit&lt;\/em&gt;Framework&lt;em&gt;Constraint&lt;\/em&gt;IsEqual and a\nPHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_LessThan matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_matchesRegularExpression", "name": "PHPUnit_Framework_Assert::matchesRegularExpression", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_PCREMatch matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_matches", "name": "PHPUnit_Framework_Assert::matches", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_StringMatches matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_stringStartsWith", "name": "PHPUnit_Framework_Assert::stringStartsWith", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_StringStartsWith matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_stringContains", "name": "PHPUnit_Framework_Assert::stringContains", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_StringContains matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_stringEndsWith", "name": "PHPUnit_Framework_Assert::stringEndsWith", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_StringEndsWith matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_countOf", "name": "PHPUnit_Framework_Assert::countOf", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_Count matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_fail", "name": "PHPUnit_Framework_Assert::fail", "doc": "&quot;Fails a test with the given message.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_readAttribute", "name": "PHPUnit_Framework_Assert::readAttribute", "doc": "&quot;Returns the value of an attribute of a class or an object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_getStaticAttribute", "name": "PHPUnit_Framework_Assert::getStaticAttribute", "doc": "&quot;Returns the value of a static attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_getObjectAttribute", "name": "PHPUnit_Framework_Assert::getObjectAttribute", "doc": "&quot;Returns the value of an object&#039;s attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_markTestIncomplete", "name": "PHPUnit_Framework_Assert::markTestIncomplete", "doc": "&quot;Mark the test as incomplete.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_markTestSkipped", "name": "PHPUnit_Framework_Assert::markTestSkipped", "doc": "&quot;Mark the test as skipped.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_getCount", "name": "PHPUnit_Framework_Assert::getCount", "doc": "&quot;Return the current assertion count.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Assert", "fromLink": "PHPUnit_Framework_Assert.html", "link": "PHPUnit_Framework_Assert.html#method_resetCount", "name": "PHPUnit_Framework_Assert::resetCount", "doc": "&quot;Reset the assertion counter.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_AssertionFailedError.html", "name": "PHPUnit_Framework_AssertionFailedError", "doc": "&quot;Thrown when an assertion failed.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_AssertionFailedError", "fromLink": "PHPUnit_Framework_AssertionFailedError.html", "link": "PHPUnit_Framework_AssertionFailedError.html#method_toString", "name": "PHPUnit_Framework_AssertionFailedError::toString", "doc": "&quot;Wrapper for getMessage() which is declared as final.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_BaseTestListener.html", "name": "PHPUnit_Framework_BaseTestListener", "doc": "&quot;An empty Listener that can be extended to implement TestListener\nwith just a few lines of code.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_BaseTestListener", "fromLink": "PHPUnit_Framework_BaseTestListener.html", "link": "PHPUnit_Framework_BaseTestListener.html#method_addError", "name": "PHPUnit_Framework_BaseTestListener::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_BaseTestListener", "fromLink": "PHPUnit_Framework_BaseTestListener.html", "link": "PHPUnit_Framework_BaseTestListener.html#method_addWarning", "name": "PHPUnit_Framework_BaseTestListener::addWarning", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_BaseTestListener", "fromLink": "PHPUnit_Framework_BaseTestListener.html", "link": "PHPUnit_Framework_BaseTestListener.html#method_addFailure", "name": "PHPUnit_Framework_BaseTestListener::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_BaseTestListener", "fromLink": "PHPUnit_Framework_BaseTestListener.html", "link": "PHPUnit_Framework_BaseTestListener.html#method_addIncompleteTest", "name": "PHPUnit_Framework_BaseTestListener::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_BaseTestListener", "fromLink": "PHPUnit_Framework_BaseTestListener.html", "link": "PHPUnit_Framework_BaseTestListener.html#method_addRiskyTest", "name": "PHPUnit_Framework_BaseTestListener::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_BaseTestListener", "fromLink": "PHPUnit_Framework_BaseTestListener.html", "link": "PHPUnit_Framework_BaseTestListener.html#method_addSkippedTest", "name": "PHPUnit_Framework_BaseTestListener::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_BaseTestListener", "fromLink": "PHPUnit_Framework_BaseTestListener.html", "link": "PHPUnit_Framework_BaseTestListener.html#method_startTestSuite", "name": "PHPUnit_Framework_BaseTestListener::startTestSuite", "doc": "&quot;A test suite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_BaseTestListener", "fromLink": "PHPUnit_Framework_BaseTestListener.html", "link": "PHPUnit_Framework_BaseTestListener.html#method_endTestSuite", "name": "PHPUnit_Framework_BaseTestListener::endTestSuite", "doc": "&quot;A test suite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_BaseTestListener", "fromLink": "PHPUnit_Framework_BaseTestListener.html", "link": "PHPUnit_Framework_BaseTestListener.html#method_startTest", "name": "PHPUnit_Framework_BaseTestListener::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_BaseTestListener", "fromLink": "PHPUnit_Framework_BaseTestListener.html", "link": "PHPUnit_Framework_BaseTestListener.html#method_endTest", "name": "PHPUnit_Framework_BaseTestListener::endTest", "doc": "&quot;A test ended.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_CodeCoverageException.html", "name": "PHPUnit_Framework_CodeCoverageException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint.html", "name": "PHPUnit_Framework_Constraint", "doc": "&quot;Abstract base class for constraints which can be applied to any value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint", "fromLink": "PHPUnit_Framework_Constraint.html", "link": "PHPUnit_Framework_Constraint.html#method___construct", "name": "PHPUnit_Framework_Constraint::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint", "fromLink": "PHPUnit_Framework_Constraint.html", "link": "PHPUnit_Framework_Constraint.html#method_evaluate", "name": "PHPUnit_Framework_Constraint::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint", "fromLink": "PHPUnit_Framework_Constraint.html", "link": "PHPUnit_Framework_Constraint.html#method_matches", "name": "PHPUnit_Framework_Constraint::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint", "fromLink": "PHPUnit_Framework_Constraint.html", "link": "PHPUnit_Framework_Constraint.html#method_count", "name": "PHPUnit_Framework_Constraint::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint", "fromLink": "PHPUnit_Framework_Constraint.html", "link": "PHPUnit_Framework_Constraint.html#method_fail", "name": "PHPUnit_Framework_Constraint::fail", "doc": "&quot;Throws an exception for the given compared value and test description&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint", "fromLink": "PHPUnit_Framework_Constraint.html", "link": "PHPUnit_Framework_Constraint.html#method_additionalFailureDescription", "name": "PHPUnit_Framework_Constraint::additionalFailureDescription", "doc": "&quot;Return additional failure description where needed&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint", "fromLink": "PHPUnit_Framework_Constraint.html", "link": "PHPUnit_Framework_Constraint.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_And.html", "name": "PHPUnit_Framework_Constraint_And", "doc": "&quot;Logical AND.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_And", "fromLink": "PHPUnit_Framework_Constraint_And.html", "link": "PHPUnit_Framework_Constraint_And.html#method_setConstraints", "name": "PHPUnit_Framework_Constraint_And::setConstraints", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_And", "fromLink": "PHPUnit_Framework_Constraint_And.html", "link": "PHPUnit_Framework_Constraint_And.html#method_evaluate", "name": "PHPUnit_Framework_Constraint_And::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_And", "fromLink": "PHPUnit_Framework_Constraint_And.html", "link": "PHPUnit_Framework_Constraint_And.html#method_toString", "name": "PHPUnit_Framework_Constraint_And::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_And", "fromLink": "PHPUnit_Framework_Constraint_And.html", "link": "PHPUnit_Framework_Constraint_And.html#method_count", "name": "PHPUnit_Framework_Constraint_And::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_ArrayHasKey.html", "name": "PHPUnit_Framework_Constraint_ArrayHasKey", "doc": "&quot;Constraint that asserts that the array it is evaluated for has a given key.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ArrayHasKey", "fromLink": "PHPUnit_Framework_Constraint_ArrayHasKey.html", "link": "PHPUnit_Framework_Constraint_ArrayHasKey.html#method___construct", "name": "PHPUnit_Framework_Constraint_ArrayHasKey::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ArrayHasKey", "fromLink": "PHPUnit_Framework_Constraint_ArrayHasKey.html", "link": "PHPUnit_Framework_Constraint_ArrayHasKey.html#method_matches", "name": "PHPUnit_Framework_Constraint_ArrayHasKey::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ArrayHasKey", "fromLink": "PHPUnit_Framework_Constraint_ArrayHasKey.html", "link": "PHPUnit_Framework_Constraint_ArrayHasKey.html#method_toString", "name": "PHPUnit_Framework_Constraint_ArrayHasKey::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ArrayHasKey", "fromLink": "PHPUnit_Framework_Constraint_ArrayHasKey.html", "link": "PHPUnit_Framework_Constraint_ArrayHasKey.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_ArrayHasKey::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_ArraySubset.html", "name": "PHPUnit_Framework_Constraint_ArraySubset", "doc": "&quot;Constraint that asserts that the array it is evaluated for has a specified subset.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ArraySubset", "fromLink": "PHPUnit_Framework_Constraint_ArraySubset.html", "link": "PHPUnit_Framework_Constraint_ArraySubset.html#method___construct", "name": "PHPUnit_Framework_Constraint_ArraySubset::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ArraySubset", "fromLink": "PHPUnit_Framework_Constraint_ArraySubset.html", "link": "PHPUnit_Framework_Constraint_ArraySubset.html#method_matches", "name": "PHPUnit_Framework_Constraint_ArraySubset::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ArraySubset", "fromLink": "PHPUnit_Framework_Constraint_ArraySubset.html", "link": "PHPUnit_Framework_Constraint_ArraySubset.html#method_toString", "name": "PHPUnit_Framework_Constraint_ArraySubset::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ArraySubset", "fromLink": "PHPUnit_Framework_Constraint_ArraySubset.html", "link": "PHPUnit_Framework_Constraint_ArraySubset.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_ArraySubset::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_Attribute.html", "name": "PHPUnit_Framework_Constraint_Attribute", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Attribute", "fromLink": "PHPUnit_Framework_Constraint_Attribute.html", "link": "PHPUnit_Framework_Constraint_Attribute.html#method___construct", "name": "PHPUnit_Framework_Constraint_Attribute::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Attribute", "fromLink": "PHPUnit_Framework_Constraint_Attribute.html", "link": "PHPUnit_Framework_Constraint_Attribute.html#method_evaluate", "name": "PHPUnit_Framework_Constraint_Attribute::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Attribute", "fromLink": "PHPUnit_Framework_Constraint_Attribute.html", "link": "PHPUnit_Framework_Constraint_Attribute.html#method_toString", "name": "PHPUnit_Framework_Constraint_Attribute::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Attribute", "fromLink": "PHPUnit_Framework_Constraint_Attribute.html", "link": "PHPUnit_Framework_Constraint_Attribute.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_Attribute::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_Callback.html", "name": "PHPUnit_Framework_Constraint_Callback", "doc": "&quot;Constraint that evaluates against a specified closure.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Callback", "fromLink": "PHPUnit_Framework_Constraint_Callback.html", "link": "PHPUnit_Framework_Constraint_Callback.html#method___construct", "name": "PHPUnit_Framework_Constraint_Callback::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Callback", "fromLink": "PHPUnit_Framework_Constraint_Callback.html", "link": "PHPUnit_Framework_Constraint_Callback.html#method_matches", "name": "PHPUnit_Framework_Constraint_Callback::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Callback", "fromLink": "PHPUnit_Framework_Constraint_Callback.html", "link": "PHPUnit_Framework_Constraint_Callback.html#method_toString", "name": "PHPUnit_Framework_Constraint_Callback::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_ClassHasAttribute.html", "name": "PHPUnit_Framework_Constraint_ClassHasAttribute", "doc": "&quot;Constraint that asserts that the class it is evaluated for has a given\nattribute.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ClassHasAttribute", "fromLink": "PHPUnit_Framework_Constraint_ClassHasAttribute.html", "link": "PHPUnit_Framework_Constraint_ClassHasAttribute.html#method___construct", "name": "PHPUnit_Framework_Constraint_ClassHasAttribute::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ClassHasAttribute", "fromLink": "PHPUnit_Framework_Constraint_ClassHasAttribute.html", "link": "PHPUnit_Framework_Constraint_ClassHasAttribute.html#method_matches", "name": "PHPUnit_Framework_Constraint_ClassHasAttribute::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ClassHasAttribute", "fromLink": "PHPUnit_Framework_Constraint_ClassHasAttribute.html", "link": "PHPUnit_Framework_Constraint_ClassHasAttribute.html#method_toString", "name": "PHPUnit_Framework_Constraint_ClassHasAttribute::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ClassHasAttribute", "fromLink": "PHPUnit_Framework_Constraint_ClassHasAttribute.html", "link": "PHPUnit_Framework_Constraint_ClassHasAttribute.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_ClassHasAttribute::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_ClassHasStaticAttribute.html", "name": "PHPUnit_Framework_Constraint_ClassHasStaticAttribute", "doc": "&quot;Constraint that asserts that the class it is evaluated for has a given\nstatic attribute.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ClassHasStaticAttribute", "fromLink": "PHPUnit_Framework_Constraint_ClassHasStaticAttribute.html", "link": "PHPUnit_Framework_Constraint_ClassHasStaticAttribute.html#method_matches", "name": "PHPUnit_Framework_Constraint_ClassHasStaticAttribute::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ClassHasStaticAttribute", "fromLink": "PHPUnit_Framework_Constraint_ClassHasStaticAttribute.html", "link": "PHPUnit_Framework_Constraint_ClassHasStaticAttribute.html#method_toString", "name": "PHPUnit_Framework_Constraint_ClassHasStaticAttribute::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_Composite.html", "name": "PHPUnit_Framework_Constraint_Composite", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Composite", "fromLink": "PHPUnit_Framework_Constraint_Composite.html", "link": "PHPUnit_Framework_Constraint_Composite.html#method___construct", "name": "PHPUnit_Framework_Constraint_Composite::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Composite", "fromLink": "PHPUnit_Framework_Constraint_Composite.html", "link": "PHPUnit_Framework_Constraint_Composite.html#method_evaluate", "name": "PHPUnit_Framework_Constraint_Composite::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Composite", "fromLink": "PHPUnit_Framework_Constraint_Composite.html", "link": "PHPUnit_Framework_Constraint_Composite.html#method_count", "name": "PHPUnit_Framework_Constraint_Composite::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_Count.html", "name": "PHPUnit_Framework_Constraint_Count", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Count", "fromLink": "PHPUnit_Framework_Constraint_Count.html", "link": "PHPUnit_Framework_Constraint_Count.html#method___construct", "name": "PHPUnit_Framework_Constraint_Count::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Count", "fromLink": "PHPUnit_Framework_Constraint_Count.html", "link": "PHPUnit_Framework_Constraint_Count.html#method_matches", "name": "PHPUnit_Framework_Constraint_Count::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Count", "fromLink": "PHPUnit_Framework_Constraint_Count.html", "link": "PHPUnit_Framework_Constraint_Count.html#method_getCountOf", "name": "PHPUnit_Framework_Constraint_Count::getCountOf", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Count", "fromLink": "PHPUnit_Framework_Constraint_Count.html", "link": "PHPUnit_Framework_Constraint_Count.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_Count::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Count", "fromLink": "PHPUnit_Framework_Constraint_Count.html", "link": "PHPUnit_Framework_Constraint_Count.html#method_toString", "name": "PHPUnit_Framework_Constraint_Count::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_DirectoryExists.html", "name": "PHPUnit_Framework_Constraint_DirectoryExists", "doc": "&quot;Constraint that checks if the directory(name) that it is evaluated for exists.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_DirectoryExists", "fromLink": "PHPUnit_Framework_Constraint_DirectoryExists.html", "link": "PHPUnit_Framework_Constraint_DirectoryExists.html#method_matches", "name": "PHPUnit_Framework_Constraint_DirectoryExists::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_DirectoryExists", "fromLink": "PHPUnit_Framework_Constraint_DirectoryExists.html", "link": "PHPUnit_Framework_Constraint_DirectoryExists.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_DirectoryExists::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_DirectoryExists", "fromLink": "PHPUnit_Framework_Constraint_DirectoryExists.html", "link": "PHPUnit_Framework_Constraint_DirectoryExists.html#method_toString", "name": "PHPUnit_Framework_Constraint_DirectoryExists::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_Exception.html", "name": "PHPUnit_Framework_Constraint_Exception", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Exception", "fromLink": "PHPUnit_Framework_Constraint_Exception.html", "link": "PHPUnit_Framework_Constraint_Exception.html#method___construct", "name": "PHPUnit_Framework_Constraint_Exception::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Exception", "fromLink": "PHPUnit_Framework_Constraint_Exception.html", "link": "PHPUnit_Framework_Constraint_Exception.html#method_matches", "name": "PHPUnit_Framework_Constraint_Exception::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Exception", "fromLink": "PHPUnit_Framework_Constraint_Exception.html", "link": "PHPUnit_Framework_Constraint_Exception.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_Exception::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Exception", "fromLink": "PHPUnit_Framework_Constraint_Exception.html", "link": "PHPUnit_Framework_Constraint_Exception.html#method_toString", "name": "PHPUnit_Framework_Constraint_Exception::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_ExceptionCode.html", "name": "PHPUnit_Framework_Constraint_ExceptionCode", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ExceptionCode", "fromLink": "PHPUnit_Framework_Constraint_ExceptionCode.html", "link": "PHPUnit_Framework_Constraint_ExceptionCode.html#method___construct", "name": "PHPUnit_Framework_Constraint_ExceptionCode::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ExceptionCode", "fromLink": "PHPUnit_Framework_Constraint_ExceptionCode.html", "link": "PHPUnit_Framework_Constraint_ExceptionCode.html#method_matches", "name": "PHPUnit_Framework_Constraint_ExceptionCode::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ExceptionCode", "fromLink": "PHPUnit_Framework_Constraint_ExceptionCode.html", "link": "PHPUnit_Framework_Constraint_ExceptionCode.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_ExceptionCode::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ExceptionCode", "fromLink": "PHPUnit_Framework_Constraint_ExceptionCode.html", "link": "PHPUnit_Framework_Constraint_ExceptionCode.html#method_toString", "name": "PHPUnit_Framework_Constraint_ExceptionCode::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_ExceptionMessage.html", "name": "PHPUnit_Framework_Constraint_ExceptionMessage", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ExceptionMessage", "fromLink": "PHPUnit_Framework_Constraint_ExceptionMessage.html", "link": "PHPUnit_Framework_Constraint_ExceptionMessage.html#method___construct", "name": "PHPUnit_Framework_Constraint_ExceptionMessage::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ExceptionMessage", "fromLink": "PHPUnit_Framework_Constraint_ExceptionMessage.html", "link": "PHPUnit_Framework_Constraint_ExceptionMessage.html#method_matches", "name": "PHPUnit_Framework_Constraint_ExceptionMessage::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ExceptionMessage", "fromLink": "PHPUnit_Framework_Constraint_ExceptionMessage.html", "link": "PHPUnit_Framework_Constraint_ExceptionMessage.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_ExceptionMessage::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ExceptionMessage", "fromLink": "PHPUnit_Framework_Constraint_ExceptionMessage.html", "link": "PHPUnit_Framework_Constraint_ExceptionMessage.html#method_toString", "name": "PHPUnit_Framework_Constraint_ExceptionMessage::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp.html", "name": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp", "fromLink": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp.html", "link": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp.html#method___construct", "name": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp", "fromLink": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp.html", "link": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp.html#method_matches", "name": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp", "fromLink": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp.html", "link": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp", "fromLink": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp.html", "link": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp.html#method_toString", "name": "PHPUnit_Framework_Constraint_ExceptionMessageRegExp::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_FileExists.html", "name": "PHPUnit_Framework_Constraint_FileExists", "doc": "&quot;Constraint that checks if the file(name) that it is evaluated for exists.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_FileExists", "fromLink": "PHPUnit_Framework_Constraint_FileExists.html", "link": "PHPUnit_Framework_Constraint_FileExists.html#method_matches", "name": "PHPUnit_Framework_Constraint_FileExists::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_FileExists", "fromLink": "PHPUnit_Framework_Constraint_FileExists.html", "link": "PHPUnit_Framework_Constraint_FileExists.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_FileExists::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_FileExists", "fromLink": "PHPUnit_Framework_Constraint_FileExists.html", "link": "PHPUnit_Framework_Constraint_FileExists.html#method_toString", "name": "PHPUnit_Framework_Constraint_FileExists::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_GreaterThan.html", "name": "PHPUnit_Framework_Constraint_GreaterThan", "doc": "&quot;Constraint that asserts that the value it is evaluated for is greater\nthan a given value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_GreaterThan", "fromLink": "PHPUnit_Framework_Constraint_GreaterThan.html", "link": "PHPUnit_Framework_Constraint_GreaterThan.html#method___construct", "name": "PHPUnit_Framework_Constraint_GreaterThan::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_GreaterThan", "fromLink": "PHPUnit_Framework_Constraint_GreaterThan.html", "link": "PHPUnit_Framework_Constraint_GreaterThan.html#method_matches", "name": "PHPUnit_Framework_Constraint_GreaterThan::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_GreaterThan", "fromLink": "PHPUnit_Framework_Constraint_GreaterThan.html", "link": "PHPUnit_Framework_Constraint_GreaterThan.html#method_toString", "name": "PHPUnit_Framework_Constraint_GreaterThan::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsAnything.html", "name": "PHPUnit_Framework_Constraint_IsAnything", "doc": "&quot;Constraint that accepts any input value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsAnything", "fromLink": "PHPUnit_Framework_Constraint_IsAnything.html", "link": "PHPUnit_Framework_Constraint_IsAnything.html#method_evaluate", "name": "PHPUnit_Framework_Constraint_IsAnything::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsAnything", "fromLink": "PHPUnit_Framework_Constraint_IsAnything.html", "link": "PHPUnit_Framework_Constraint_IsAnything.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsAnything::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsAnything", "fromLink": "PHPUnit_Framework_Constraint_IsAnything.html", "link": "PHPUnit_Framework_Constraint_IsAnything.html#method_count", "name": "PHPUnit_Framework_Constraint_IsAnything::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsEmpty.html", "name": "PHPUnit_Framework_Constraint_IsEmpty", "doc": "&quot;Constraint that checks whether a variable is empty().&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsEmpty", "fromLink": "PHPUnit_Framework_Constraint_IsEmpty.html", "link": "PHPUnit_Framework_Constraint_IsEmpty.html#method_matches", "name": "PHPUnit_Framework_Constraint_IsEmpty::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsEmpty", "fromLink": "PHPUnit_Framework_Constraint_IsEmpty.html", "link": "PHPUnit_Framework_Constraint_IsEmpty.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsEmpty::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsEmpty", "fromLink": "PHPUnit_Framework_Constraint_IsEmpty.html", "link": "PHPUnit_Framework_Constraint_IsEmpty.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_IsEmpty::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsEqual.html", "name": "PHPUnit_Framework_Constraint_IsEqual", "doc": "&quot;Constraint that checks if one value is equal to another.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsEqual", "fromLink": "PHPUnit_Framework_Constraint_IsEqual.html", "link": "PHPUnit_Framework_Constraint_IsEqual.html#method___construct", "name": "PHPUnit_Framework_Constraint_IsEqual::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsEqual", "fromLink": "PHPUnit_Framework_Constraint_IsEqual.html", "link": "PHPUnit_Framework_Constraint_IsEqual.html#method_evaluate", "name": "PHPUnit_Framework_Constraint_IsEqual::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsEqual", "fromLink": "PHPUnit_Framework_Constraint_IsEqual.html", "link": "PHPUnit_Framework_Constraint_IsEqual.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsEqual::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsFalse.html", "name": "PHPUnit_Framework_Constraint_IsFalse", "doc": "&quot;Constraint that accepts false.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsFalse", "fromLink": "PHPUnit_Framework_Constraint_IsFalse.html", "link": "PHPUnit_Framework_Constraint_IsFalse.html#method_matches", "name": "PHPUnit_Framework_Constraint_IsFalse::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsFalse", "fromLink": "PHPUnit_Framework_Constraint_IsFalse.html", "link": "PHPUnit_Framework_Constraint_IsFalse.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsFalse::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsFinite.html", "name": "PHPUnit_Framework_Constraint_IsFinite", "doc": "&quot;Constraint that accepts finite.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsFinite", "fromLink": "PHPUnit_Framework_Constraint_IsFinite.html", "link": "PHPUnit_Framework_Constraint_IsFinite.html#method_matches", "name": "PHPUnit_Framework_Constraint_IsFinite::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsFinite", "fromLink": "PHPUnit_Framework_Constraint_IsFinite.html", "link": "PHPUnit_Framework_Constraint_IsFinite.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsFinite::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsIdentical.html", "name": "PHPUnit_Framework_Constraint_IsIdentical", "doc": "&quot;Constraint that asserts that one value is identical to another.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsIdentical", "fromLink": "PHPUnit_Framework_Constraint_IsIdentical.html", "link": "PHPUnit_Framework_Constraint_IsIdentical.html#method___construct", "name": "PHPUnit_Framework_Constraint_IsIdentical::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsIdentical", "fromLink": "PHPUnit_Framework_Constraint_IsIdentical.html", "link": "PHPUnit_Framework_Constraint_IsIdentical.html#method_evaluate", "name": "PHPUnit_Framework_Constraint_IsIdentical::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsIdentical", "fromLink": "PHPUnit_Framework_Constraint_IsIdentical.html", "link": "PHPUnit_Framework_Constraint_IsIdentical.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_IsIdentical::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsIdentical", "fromLink": "PHPUnit_Framework_Constraint_IsIdentical.html", "link": "PHPUnit_Framework_Constraint_IsIdentical.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsIdentical::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsInfinite.html", "name": "PHPUnit_Framework_Constraint_IsInfinite", "doc": "&quot;Constraint that accepts infinite.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsInfinite", "fromLink": "PHPUnit_Framework_Constraint_IsInfinite.html", "link": "PHPUnit_Framework_Constraint_IsInfinite.html#method_matches", "name": "PHPUnit_Framework_Constraint_IsInfinite::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsInfinite", "fromLink": "PHPUnit_Framework_Constraint_IsInfinite.html", "link": "PHPUnit_Framework_Constraint_IsInfinite.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsInfinite::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsInstanceOf.html", "name": "PHPUnit_Framework_Constraint_IsInstanceOf", "doc": "&quot;Constraint that asserts that the object it is evaluated for is an instance\nof a given class.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsInstanceOf", "fromLink": "PHPUnit_Framework_Constraint_IsInstanceOf.html", "link": "PHPUnit_Framework_Constraint_IsInstanceOf.html#method___construct", "name": "PHPUnit_Framework_Constraint_IsInstanceOf::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsInstanceOf", "fromLink": "PHPUnit_Framework_Constraint_IsInstanceOf.html", "link": "PHPUnit_Framework_Constraint_IsInstanceOf.html#method_matches", "name": "PHPUnit_Framework_Constraint_IsInstanceOf::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsInstanceOf", "fromLink": "PHPUnit_Framework_Constraint_IsInstanceOf.html", "link": "PHPUnit_Framework_Constraint_IsInstanceOf.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_IsInstanceOf::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsInstanceOf", "fromLink": "PHPUnit_Framework_Constraint_IsInstanceOf.html", "link": "PHPUnit_Framework_Constraint_IsInstanceOf.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsInstanceOf::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsJson.html", "name": "PHPUnit_Framework_Constraint_IsJson", "doc": "&quot;Constraint that asserts that a string is valid JSON.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsJson", "fromLink": "PHPUnit_Framework_Constraint_IsJson.html", "link": "PHPUnit_Framework_Constraint_IsJson.html#method_matches", "name": "PHPUnit_Framework_Constraint_IsJson::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsJson", "fromLink": "PHPUnit_Framework_Constraint_IsJson.html", "link": "PHPUnit_Framework_Constraint_IsJson.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_IsJson::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsJson", "fromLink": "PHPUnit_Framework_Constraint_IsJson.html", "link": "PHPUnit_Framework_Constraint_IsJson.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsJson::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsNan.html", "name": "PHPUnit_Framework_Constraint_IsNan", "doc": "&quot;Constraint that accepts nan.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsNan", "fromLink": "PHPUnit_Framework_Constraint_IsNan.html", "link": "PHPUnit_Framework_Constraint_IsNan.html#method_matches", "name": "PHPUnit_Framework_Constraint_IsNan::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsNan", "fromLink": "PHPUnit_Framework_Constraint_IsNan.html", "link": "PHPUnit_Framework_Constraint_IsNan.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsNan::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsNull.html", "name": "PHPUnit_Framework_Constraint_IsNull", "doc": "&quot;Constraint that accepts null.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsNull", "fromLink": "PHPUnit_Framework_Constraint_IsNull.html", "link": "PHPUnit_Framework_Constraint_IsNull.html#method_matches", "name": "PHPUnit_Framework_Constraint_IsNull::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsNull", "fromLink": "PHPUnit_Framework_Constraint_IsNull.html", "link": "PHPUnit_Framework_Constraint_IsNull.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsNull::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsReadable.html", "name": "PHPUnit_Framework_Constraint_IsReadable", "doc": "&quot;Constraint that checks if the file\/dir(name) that it is evaluated for is readable.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsReadable", "fromLink": "PHPUnit_Framework_Constraint_IsReadable.html", "link": "PHPUnit_Framework_Constraint_IsReadable.html#method_matches", "name": "PHPUnit_Framework_Constraint_IsReadable::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsReadable", "fromLink": "PHPUnit_Framework_Constraint_IsReadable.html", "link": "PHPUnit_Framework_Constraint_IsReadable.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_IsReadable::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsReadable", "fromLink": "PHPUnit_Framework_Constraint_IsReadable.html", "link": "PHPUnit_Framework_Constraint_IsReadable.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsReadable::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsTrue.html", "name": "PHPUnit_Framework_Constraint_IsTrue", "doc": "&quot;Constraint that accepts true.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsTrue", "fromLink": "PHPUnit_Framework_Constraint_IsTrue.html", "link": "PHPUnit_Framework_Constraint_IsTrue.html#method_matches", "name": "PHPUnit_Framework_Constraint_IsTrue::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsTrue", "fromLink": "PHPUnit_Framework_Constraint_IsTrue.html", "link": "PHPUnit_Framework_Constraint_IsTrue.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsTrue::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsType.html", "name": "PHPUnit_Framework_Constraint_IsType", "doc": "&quot;Constraint that asserts that the value it is evaluated for is of a\nspecified type.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsType", "fromLink": "PHPUnit_Framework_Constraint_IsType.html", "link": "PHPUnit_Framework_Constraint_IsType.html#method___construct", "name": "PHPUnit_Framework_Constraint_IsType::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsType", "fromLink": "PHPUnit_Framework_Constraint_IsType.html", "link": "PHPUnit_Framework_Constraint_IsType.html#method_matches", "name": "PHPUnit_Framework_Constraint_IsType::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsType", "fromLink": "PHPUnit_Framework_Constraint_IsType.html", "link": "PHPUnit_Framework_Constraint_IsType.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsType::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_IsWritable.html", "name": "PHPUnit_Framework_Constraint_IsWritable", "doc": "&quot;Constraint that checks if the file\/dir(name) that it is evaluated for is writable.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsWritable", "fromLink": "PHPUnit_Framework_Constraint_IsWritable.html", "link": "PHPUnit_Framework_Constraint_IsWritable.html#method_matches", "name": "PHPUnit_Framework_Constraint_IsWritable::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsWritable", "fromLink": "PHPUnit_Framework_Constraint_IsWritable.html", "link": "PHPUnit_Framework_Constraint_IsWritable.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_IsWritable::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_IsWritable", "fromLink": "PHPUnit_Framework_Constraint_IsWritable.html", "link": "PHPUnit_Framework_Constraint_IsWritable.html#method_toString", "name": "PHPUnit_Framework_Constraint_IsWritable::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_JsonMatches.html", "name": "PHPUnit_Framework_Constraint_JsonMatches", "doc": "&quot;Asserts whether or not two JSON objects are equal.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_JsonMatches", "fromLink": "PHPUnit_Framework_Constraint_JsonMatches.html", "link": "PHPUnit_Framework_Constraint_JsonMatches.html#method___construct", "name": "PHPUnit_Framework_Constraint_JsonMatches::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_JsonMatches", "fromLink": "PHPUnit_Framework_Constraint_JsonMatches.html", "link": "PHPUnit_Framework_Constraint_JsonMatches.html#method_matches", "name": "PHPUnit_Framework_Constraint_JsonMatches::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_JsonMatches", "fromLink": "PHPUnit_Framework_Constraint_JsonMatches.html", "link": "PHPUnit_Framework_Constraint_JsonMatches.html#method_toString", "name": "PHPUnit_Framework_Constraint_JsonMatches::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider.html", "name": "PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider", "doc": "&quot;Provides human readable messages for each JSON error.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider", "fromLink": "PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider.html", "link": "PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider.html#method_determineJsonError", "name": "PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider::determineJsonError", "doc": "&quot;Translates JSON error to a human readable string.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider", "fromLink": "PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider.html", "link": "PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider.html#method_translateTypeToPrefix", "name": "PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider::translateTypeToPrefix", "doc": "&quot;Translates a given type to a human readable message prefix.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_LessThan.html", "name": "PHPUnit_Framework_Constraint_LessThan", "doc": "&quot;Constraint that asserts that the value it is evaluated for is less than\na given value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_LessThan", "fromLink": "PHPUnit_Framework_Constraint_LessThan.html", "link": "PHPUnit_Framework_Constraint_LessThan.html#method___construct", "name": "PHPUnit_Framework_Constraint_LessThan::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_LessThan", "fromLink": "PHPUnit_Framework_Constraint_LessThan.html", "link": "PHPUnit_Framework_Constraint_LessThan.html#method_matches", "name": "PHPUnit_Framework_Constraint_LessThan::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_LessThan", "fromLink": "PHPUnit_Framework_Constraint_LessThan.html", "link": "PHPUnit_Framework_Constraint_LessThan.html#method_toString", "name": "PHPUnit_Framework_Constraint_LessThan::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_Not.html", "name": "PHPUnit_Framework_Constraint_Not", "doc": "&quot;Logical NOT.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Not", "fromLink": "PHPUnit_Framework_Constraint_Not.html", "link": "PHPUnit_Framework_Constraint_Not.html#method___construct", "name": "PHPUnit_Framework_Constraint_Not::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Not", "fromLink": "PHPUnit_Framework_Constraint_Not.html", "link": "PHPUnit_Framework_Constraint_Not.html#method_negate", "name": "PHPUnit_Framework_Constraint_Not::negate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Not", "fromLink": "PHPUnit_Framework_Constraint_Not.html", "link": "PHPUnit_Framework_Constraint_Not.html#method_evaluate", "name": "PHPUnit_Framework_Constraint_Not::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Not", "fromLink": "PHPUnit_Framework_Constraint_Not.html", "link": "PHPUnit_Framework_Constraint_Not.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_Not::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Not", "fromLink": "PHPUnit_Framework_Constraint_Not.html", "link": "PHPUnit_Framework_Constraint_Not.html#method_toString", "name": "PHPUnit_Framework_Constraint_Not::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Not", "fromLink": "PHPUnit_Framework_Constraint_Not.html", "link": "PHPUnit_Framework_Constraint_Not.html#method_count", "name": "PHPUnit_Framework_Constraint_Not::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_ObjectHasAttribute.html", "name": "PHPUnit_Framework_Constraint_ObjectHasAttribute", "doc": "&quot;Constraint that asserts that the object it is evaluated for has a given\nattribute.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_ObjectHasAttribute", "fromLink": "PHPUnit_Framework_Constraint_ObjectHasAttribute.html", "link": "PHPUnit_Framework_Constraint_ObjectHasAttribute.html#method_matches", "name": "PHPUnit_Framework_Constraint_ObjectHasAttribute::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_Or.html", "name": "PHPUnit_Framework_Constraint_Or", "doc": "&quot;Logical OR.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Or", "fromLink": "PHPUnit_Framework_Constraint_Or.html", "link": "PHPUnit_Framework_Constraint_Or.html#method_setConstraints", "name": "PHPUnit_Framework_Constraint_Or::setConstraints", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Or", "fromLink": "PHPUnit_Framework_Constraint_Or.html", "link": "PHPUnit_Framework_Constraint_Or.html#method_evaluate", "name": "PHPUnit_Framework_Constraint_Or::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Or", "fromLink": "PHPUnit_Framework_Constraint_Or.html", "link": "PHPUnit_Framework_Constraint_Or.html#method_toString", "name": "PHPUnit_Framework_Constraint_Or::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Or", "fromLink": "PHPUnit_Framework_Constraint_Or.html", "link": "PHPUnit_Framework_Constraint_Or.html#method_count", "name": "PHPUnit_Framework_Constraint_Or::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_PCREMatch.html", "name": "PHPUnit_Framework_Constraint_PCREMatch", "doc": "&quot;Constraint that asserts that the string it is evaluated for matches\na regular expression.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_PCREMatch", "fromLink": "PHPUnit_Framework_Constraint_PCREMatch.html", "link": "PHPUnit_Framework_Constraint_PCREMatch.html#method___construct", "name": "PHPUnit_Framework_Constraint_PCREMatch::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_PCREMatch", "fromLink": "PHPUnit_Framework_Constraint_PCREMatch.html", "link": "PHPUnit_Framework_Constraint_PCREMatch.html#method_matches", "name": "PHPUnit_Framework_Constraint_PCREMatch::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_PCREMatch", "fromLink": "PHPUnit_Framework_Constraint_PCREMatch.html", "link": "PHPUnit_Framework_Constraint_PCREMatch.html#method_toString", "name": "PHPUnit_Framework_Constraint_PCREMatch::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_SameSize.html", "name": "PHPUnit_Framework_Constraint_SameSize", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_SameSize", "fromLink": "PHPUnit_Framework_Constraint_SameSize.html", "link": "PHPUnit_Framework_Constraint_SameSize.html#method___construct", "name": "PHPUnit_Framework_Constraint_SameSize::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_StringContains.html", "name": "PHPUnit_Framework_Constraint_StringContains", "doc": "&quot;Constraint that asserts that the string it is evaluated for contains\na given string.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_StringContains", "fromLink": "PHPUnit_Framework_Constraint_StringContains.html", "link": "PHPUnit_Framework_Constraint_StringContains.html#method___construct", "name": "PHPUnit_Framework_Constraint_StringContains::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_StringContains", "fromLink": "PHPUnit_Framework_Constraint_StringContains.html", "link": "PHPUnit_Framework_Constraint_StringContains.html#method_matches", "name": "PHPUnit_Framework_Constraint_StringContains::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_StringContains", "fromLink": "PHPUnit_Framework_Constraint_StringContains.html", "link": "PHPUnit_Framework_Constraint_StringContains.html#method_toString", "name": "PHPUnit_Framework_Constraint_StringContains::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_StringEndsWith.html", "name": "PHPUnit_Framework_Constraint_StringEndsWith", "doc": "&quot;Constraint that asserts that the string it is evaluated for ends with a given\nsuffix.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_StringEndsWith", "fromLink": "PHPUnit_Framework_Constraint_StringEndsWith.html", "link": "PHPUnit_Framework_Constraint_StringEndsWith.html#method___construct", "name": "PHPUnit_Framework_Constraint_StringEndsWith::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_StringEndsWith", "fromLink": "PHPUnit_Framework_Constraint_StringEndsWith.html", "link": "PHPUnit_Framework_Constraint_StringEndsWith.html#method_matches", "name": "PHPUnit_Framework_Constraint_StringEndsWith::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_StringEndsWith", "fromLink": "PHPUnit_Framework_Constraint_StringEndsWith.html", "link": "PHPUnit_Framework_Constraint_StringEndsWith.html#method_toString", "name": "PHPUnit_Framework_Constraint_StringEndsWith::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_StringMatches.html", "name": "PHPUnit_Framework_Constraint_StringMatches", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_StringMatches", "fromLink": "PHPUnit_Framework_Constraint_StringMatches.html", "link": "PHPUnit_Framework_Constraint_StringMatches.html#method___construct", "name": "PHPUnit_Framework_Constraint_StringMatches::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_StringMatches", "fromLink": "PHPUnit_Framework_Constraint_StringMatches.html", "link": "PHPUnit_Framework_Constraint_StringMatches.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_StringMatches::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_StringMatches", "fromLink": "PHPUnit_Framework_Constraint_StringMatches.html", "link": "PHPUnit_Framework_Constraint_StringMatches.html#method_additionalFailureDescription", "name": "PHPUnit_Framework_Constraint_StringMatches::additionalFailureDescription", "doc": "&quot;Return additional failure description where needed&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_StringMatches", "fromLink": "PHPUnit_Framework_Constraint_StringMatches.html", "link": "PHPUnit_Framework_Constraint_StringMatches.html#method_createPatternFromFormat", "name": "PHPUnit_Framework_Constraint_StringMatches::createPatternFromFormat", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_StringStartsWith.html", "name": "PHPUnit_Framework_Constraint_StringStartsWith", "doc": "&quot;Constraint that asserts that the string it is evaluated for begins with a\ngiven prefix.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_StringStartsWith", "fromLink": "PHPUnit_Framework_Constraint_StringStartsWith.html", "link": "PHPUnit_Framework_Constraint_StringStartsWith.html#method___construct", "name": "PHPUnit_Framework_Constraint_StringStartsWith::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_StringStartsWith", "fromLink": "PHPUnit_Framework_Constraint_StringStartsWith.html", "link": "PHPUnit_Framework_Constraint_StringStartsWith.html#method_matches", "name": "PHPUnit_Framework_Constraint_StringStartsWith::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_StringStartsWith", "fromLink": "PHPUnit_Framework_Constraint_StringStartsWith.html", "link": "PHPUnit_Framework_Constraint_StringStartsWith.html#method_toString", "name": "PHPUnit_Framework_Constraint_StringStartsWith::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_TraversableContains.html", "name": "PHPUnit_Framework_Constraint_TraversableContains", "doc": "&quot;Constraint that asserts that the Traversable it is applied to contains\na given value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_TraversableContains", "fromLink": "PHPUnit_Framework_Constraint_TraversableContains.html", "link": "PHPUnit_Framework_Constraint_TraversableContains.html#method___construct", "name": "PHPUnit_Framework_Constraint_TraversableContains::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_TraversableContains", "fromLink": "PHPUnit_Framework_Constraint_TraversableContains.html", "link": "PHPUnit_Framework_Constraint_TraversableContains.html#method_matches", "name": "PHPUnit_Framework_Constraint_TraversableContains::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_TraversableContains", "fromLink": "PHPUnit_Framework_Constraint_TraversableContains.html", "link": "PHPUnit_Framework_Constraint_TraversableContains.html#method_toString", "name": "PHPUnit_Framework_Constraint_TraversableContains::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_TraversableContains", "fromLink": "PHPUnit_Framework_Constraint_TraversableContains.html", "link": "PHPUnit_Framework_Constraint_TraversableContains.html#method_failureDescription", "name": "PHPUnit_Framework_Constraint_TraversableContains::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_TraversableContainsOnly.html", "name": "PHPUnit_Framework_Constraint_TraversableContainsOnly", "doc": "&quot;Constraint that asserts that the Traversable it is applied to contains\nonly values of a given type.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_TraversableContainsOnly", "fromLink": "PHPUnit_Framework_Constraint_TraversableContainsOnly.html", "link": "PHPUnit_Framework_Constraint_TraversableContainsOnly.html#method___construct", "name": "PHPUnit_Framework_Constraint_TraversableContainsOnly::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_TraversableContainsOnly", "fromLink": "PHPUnit_Framework_Constraint_TraversableContainsOnly.html", "link": "PHPUnit_Framework_Constraint_TraversableContainsOnly.html#method_evaluate", "name": "PHPUnit_Framework_Constraint_TraversableContainsOnly::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_TraversableContainsOnly", "fromLink": "PHPUnit_Framework_Constraint_TraversableContainsOnly.html", "link": "PHPUnit_Framework_Constraint_TraversableContainsOnly.html#method_toString", "name": "PHPUnit_Framework_Constraint_TraversableContainsOnly::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Constraint_Xor.html", "name": "PHPUnit_Framework_Constraint_Xor", "doc": "&quot;Logical XOR.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Xor", "fromLink": "PHPUnit_Framework_Constraint_Xor.html", "link": "PHPUnit_Framework_Constraint_Xor.html#method_setConstraints", "name": "PHPUnit_Framework_Constraint_Xor::setConstraints", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Xor", "fromLink": "PHPUnit_Framework_Constraint_Xor.html", "link": "PHPUnit_Framework_Constraint_Xor.html#method_evaluate", "name": "PHPUnit_Framework_Constraint_Xor::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Xor", "fromLink": "PHPUnit_Framework_Constraint_Xor.html", "link": "PHPUnit_Framework_Constraint_Xor.html#method_toString", "name": "PHPUnit_Framework_Constraint_Xor::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Constraint_Xor", "fromLink": "PHPUnit_Framework_Constraint_Xor.html", "link": "PHPUnit_Framework_Constraint_Xor.html#method_count", "name": "PHPUnit_Framework_Constraint_Xor::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_CoveredCodeNotExecutedException.html", "name": "PHPUnit_Framework_CoveredCodeNotExecutedException", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of a test that does not execute the code it wants to cover.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_Error.html", "name": "PHPUnit_Framework_Error", "doc": "&quot;Wrapper for PHP errors.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Error", "fromLink": "PHPUnit_Framework_Error.html", "link": "PHPUnit_Framework_Error.html#method___construct", "name": "PHPUnit_Framework_Error::__construct", "doc": "&quot;Constructor.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Error_Deprecated.html", "name": "PHPUnit_Framework_Error_Deprecated", "doc": "&quot;Wrapper for PHP deprecated errors.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_Error_Notice.html", "name": "PHPUnit_Framework_Error_Notice", "doc": "&quot;Wrapper for PHP notices.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_Error_Warning.html", "name": "PHPUnit_Framework_Error_Warning", "doc": "&quot;Wrapper for PHP warnings.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_Exception.html", "name": "PHPUnit_Framework_Exception", "doc": "&quot;Base class for all PHPUnit Framework exceptions.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Exception", "fromLink": "PHPUnit_Framework_Exception.html", "link": "PHPUnit_Framework_Exception.html#method___construct", "name": "PHPUnit_Framework_Exception::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Exception", "fromLink": "PHPUnit_Framework_Exception.html", "link": "PHPUnit_Framework_Exception.html#method_getSerializableTrace", "name": "PHPUnit_Framework_Exception::getSerializableTrace", "doc": "&quot;Returns the serializable trace (without &#039;args&#039;).&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Exception", "fromLink": "PHPUnit_Framework_Exception.html", "link": "PHPUnit_Framework_Exception.html#method___toString", "name": "PHPUnit_Framework_Exception::__toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_Exception", "fromLink": "PHPUnit_Framework_Exception.html", "link": "PHPUnit_Framework_Exception.html#method___sleep", "name": "PHPUnit_Framework_Exception::__sleep", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_ExceptionWrapper.html", "name": "PHPUnit_Framework_ExceptionWrapper", "doc": "&quot;Wraps Exceptions thrown by code under test.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_ExceptionWrapper", "fromLink": "PHPUnit_Framework_ExceptionWrapper.html", "link": "PHPUnit_Framework_ExceptionWrapper.html#method___construct", "name": "PHPUnit_Framework_ExceptionWrapper::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_ExceptionWrapper", "fromLink": "PHPUnit_Framework_ExceptionWrapper.html", "link": "PHPUnit_Framework_ExceptionWrapper.html#method_getClassName", "name": "PHPUnit_Framework_ExceptionWrapper::getClassName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_ExceptionWrapper", "fromLink": "PHPUnit_Framework_ExceptionWrapper.html", "link": "PHPUnit_Framework_ExceptionWrapper.html#method_getPreviousWrapped", "name": "PHPUnit_Framework_ExceptionWrapper::getPreviousWrapped", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_ExceptionWrapper", "fromLink": "PHPUnit_Framework_ExceptionWrapper.html", "link": "PHPUnit_Framework_ExceptionWrapper.html#method___toString", "name": "PHPUnit_Framework_ExceptionWrapper::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_ExpectationFailedException.html", "name": "PHPUnit_Framework_ExpectationFailedException", "doc": "&quot;Exception for expectations which failed their check.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_ExpectationFailedException", "fromLink": "PHPUnit_Framework_ExpectationFailedException.html", "link": "PHPUnit_Framework_ExpectationFailedException.html#method___construct", "name": "PHPUnit_Framework_ExpectationFailedException::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_ExpectationFailedException", "fromLink": "PHPUnit_Framework_ExpectationFailedException.html", "link": "PHPUnit_Framework_ExpectationFailedException.html#method_getComparisonFailure", "name": "PHPUnit_Framework_ExpectationFailedException::getComparisonFailure", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_IncompleteTest.html", "name": "PHPUnit_Framework_IncompleteTest", "doc": "&quot;A marker interface for marking any exception\/error as result of an unit\ntest as incomplete implementation or currently not implemented.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_IncompleteTestCase.html", "name": "PHPUnit_Framework_IncompleteTestCase", "doc": "&quot;An incomplete test case&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_IncompleteTestCase", "fromLink": "PHPUnit_Framework_IncompleteTestCase.html", "link": "PHPUnit_Framework_IncompleteTestCase.html#method___construct", "name": "PHPUnit_Framework_IncompleteTestCase::__construct", "doc": "&quot;Constructs a test case with the given name.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_IncompleteTestCase", "fromLink": "PHPUnit_Framework_IncompleteTestCase.html", "link": "PHPUnit_Framework_IncompleteTestCase.html#method_runTest", "name": "PHPUnit_Framework_IncompleteTestCase::runTest", "doc": "&quot;Override to run the test and assert its state.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_IncompleteTestCase", "fromLink": "PHPUnit_Framework_IncompleteTestCase.html", "link": "PHPUnit_Framework_IncompleteTestCase.html#method_getMessage", "name": "PHPUnit_Framework_IncompleteTestCase::getMessage", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_IncompleteTestCase", "fromLink": "PHPUnit_Framework_IncompleteTestCase.html", "link": "PHPUnit_Framework_IncompleteTestCase.html#method_toString", "name": "PHPUnit_Framework_IncompleteTestCase::toString", "doc": "&quot;Returns a string representation of the test case.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_IncompleteTestError.html", "name": "PHPUnit_Framework_IncompleteTestError", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of an incomplete test.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_InvalidCoversTargetException.html", "name": "PHPUnit_Framework_InvalidCoversTargetException", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_MissingCoversAnnotationException.html", "name": "PHPUnit_Framework_MissingCoversAnnotationException", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark a test as risky\nwhen it does not have a @covers annotation but is expected to have one.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_OutputError.html", "name": "PHPUnit_Framework_OutputError", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of a test that printed output.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_RiskyTest.html", "name": "PHPUnit_Framework_RiskyTest", "doc": "&quot;A marker interface for marking any exception\/error as result of an unit\ntest as risky.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_RiskyTestError.html", "name": "PHPUnit_Framework_RiskyTestError", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of a risky test.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_SelfDescribing.html", "name": "PHPUnit_Framework_SelfDescribing", "doc": "&quot;Interface for classes that can return a description of itself.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_SelfDescribing", "fromLink": "PHPUnit_Framework_SelfDescribing.html", "link": "PHPUnit_Framework_SelfDescribing.html#method_toString", "name": "PHPUnit_Framework_SelfDescribing::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_SkippedTest.html", "name": "PHPUnit_Framework_SkippedTest", "doc": "&quot;A marker interface for marking a unit test as being skipped.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_SkippedTestCase.html", "name": "PHPUnit_Framework_SkippedTestCase", "doc": "&quot;A skipped test case&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_SkippedTestCase", "fromLink": "PHPUnit_Framework_SkippedTestCase.html", "link": "PHPUnit_Framework_SkippedTestCase.html#method___construct", "name": "PHPUnit_Framework_SkippedTestCase::__construct", "doc": "&quot;Constructs a test case with the given name.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_SkippedTestCase", "fromLink": "PHPUnit_Framework_SkippedTestCase.html", "link": "PHPUnit_Framework_SkippedTestCase.html#method_runTest", "name": "PHPUnit_Framework_SkippedTestCase::runTest", "doc": "&quot;Override to run the test and assert its state.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_SkippedTestCase", "fromLink": "PHPUnit_Framework_SkippedTestCase.html", "link": "PHPUnit_Framework_SkippedTestCase.html#method_getMessage", "name": "PHPUnit_Framework_SkippedTestCase::getMessage", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_SkippedTestCase", "fromLink": "PHPUnit_Framework_SkippedTestCase.html", "link": "PHPUnit_Framework_SkippedTestCase.html#method_toString", "name": "PHPUnit_Framework_SkippedTestCase::toString", "doc": "&quot;Returns a string representation of the test case.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_SkippedTestError.html", "name": "PHPUnit_Framework_SkippedTestError", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of a skipped test.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_SkippedTestSuiteError.html", "name": "PHPUnit_Framework_SkippedTestSuiteError", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of a skipped test suite.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_SyntheticError.html", "name": "PHPUnit_Framework_SyntheticError", "doc": "&quot;Creates a synthetic failed assertion.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_SyntheticError", "fromLink": "PHPUnit_Framework_SyntheticError.html", "link": "PHPUnit_Framework_SyntheticError.html#method___construct", "name": "PHPUnit_Framework_SyntheticError::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_SyntheticError", "fromLink": "PHPUnit_Framework_SyntheticError.html", "link": "PHPUnit_Framework_SyntheticError.html#method_getSyntheticFile", "name": "PHPUnit_Framework_SyntheticError::getSyntheticFile", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_SyntheticError", "fromLink": "PHPUnit_Framework_SyntheticError.html", "link": "PHPUnit_Framework_SyntheticError.html#method_getSyntheticLine", "name": "PHPUnit_Framework_SyntheticError::getSyntheticLine", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_SyntheticError", "fromLink": "PHPUnit_Framework_SyntheticError.html", "link": "PHPUnit_Framework_SyntheticError.html#method_getSyntheticTrace", "name": "PHPUnit_Framework_SyntheticError::getSyntheticTrace", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_Test.html", "name": "PHPUnit_Framework_Test", "doc": "&quot;A Test can be run and collect its results.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Test", "fromLink": "PHPUnit_Framework_Test.html", "link": "PHPUnit_Framework_Test.html#method_run", "name": "PHPUnit_Framework_Test::run", "doc": "&quot;Runs a test and collects its result in a TestResult instance.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_TestCase.html", "name": "PHPUnit_Framework_TestCase", "doc": "&quot;A TestCase defines the fixture to run multiple tests.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method___construct", "name": "PHPUnit_Framework_TestCase::__construct", "doc": "&quot;Constructs a test case with the given name.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_toString", "name": "PHPUnit_Framework_TestCase::toString", "doc": "&quot;Returns a string representation of the test case.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_count", "name": "PHPUnit_Framework_TestCase::count", "doc": "&quot;Counts the number of test cases executed by run(TestResult result).&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getGroups", "name": "PHPUnit_Framework_TestCase::getGroups", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setGroups", "name": "PHPUnit_Framework_TestCase::setGroups", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getAnnotations", "name": "PHPUnit_Framework_TestCase::getAnnotations", "doc": "&quot;Returns the annotations for this test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getName", "name": "PHPUnit_Framework_TestCase::getName", "doc": "&quot;Gets the name of a TestCase.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getSize", "name": "PHPUnit_Framework_TestCase::getSize", "doc": "&quot;Returns the size of the test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_hasSize", "name": "PHPUnit_Framework_TestCase::hasSize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_isSmall", "name": "PHPUnit_Framework_TestCase::isSmall", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_isMedium", "name": "PHPUnit_Framework_TestCase::isMedium", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_isLarge", "name": "PHPUnit_Framework_TestCase::isLarge", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getActualOutput", "name": "PHPUnit_Framework_TestCase::getActualOutput", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_hasOutput", "name": "PHPUnit_Framework_TestCase::hasOutput", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_doesNotPerformAssertions", "name": "PHPUnit_Framework_TestCase::doesNotPerformAssertions", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_expectOutputRegex", "name": "PHPUnit_Framework_TestCase::expectOutputRegex", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_expectOutputString", "name": "PHPUnit_Framework_TestCase::expectOutputString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_hasPerformedExpectationsOnOutput", "name": "PHPUnit_Framework_TestCase::hasPerformedExpectationsOnOutput", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_hasExpectationOnOutput", "name": "PHPUnit_Framework_TestCase::hasExpectationOnOutput", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getExpectedException", "name": "PHPUnit_Framework_TestCase::getExpectedException", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setExpectedException", "name": "PHPUnit_Framework_TestCase::setExpectedException", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setExpectedExceptionRegExp", "name": "PHPUnit_Framework_TestCase::setExpectedExceptionRegExp", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_expectException", "name": "PHPUnit_Framework_TestCase::expectException", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_expectExceptionCode", "name": "PHPUnit_Framework_TestCase::expectExceptionCode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_expectExceptionMessage", "name": "PHPUnit_Framework_TestCase::expectExceptionMessage", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_expectExceptionMessageRegExp", "name": "PHPUnit_Framework_TestCase::expectExceptionMessageRegExp", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setRegisterMockObjectsFromTestArgumentsRecursively", "name": "PHPUnit_Framework_TestCase::setRegisterMockObjectsFromTestArgumentsRecursively", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setExpectedExceptionFromAnnotation", "name": "PHPUnit_Framework_TestCase::setExpectedExceptionFromAnnotation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setUseErrorHandler", "name": "PHPUnit_Framework_TestCase::setUseErrorHandler", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setUseErrorHandlerFromAnnotation", "name": "PHPUnit_Framework_TestCase::setUseErrorHandlerFromAnnotation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_checkRequirements", "name": "PHPUnit_Framework_TestCase::checkRequirements", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getStatus", "name": "PHPUnit_Framework_TestCase::getStatus", "doc": "&quot;Returns the status of this test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_markAsRisky", "name": "PHPUnit_Framework_TestCase::markAsRisky", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getStatusMessage", "name": "PHPUnit_Framework_TestCase::getStatusMessage", "doc": "&quot;Returns the status message of this test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_hasFailed", "name": "PHPUnit_Framework_TestCase::hasFailed", "doc": "&quot;Returns whether or not this test has failed.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_run", "name": "PHPUnit_Framework_TestCase::run", "doc": "&quot;Runs the test case and collects the results in a TestResult object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_runBare", "name": "PHPUnit_Framework_TestCase::runBare", "doc": "&quot;Runs the bare test sequence.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_runTest", "name": "PHPUnit_Framework_TestCase::runTest", "doc": "&quot;Override to run the test and assert its state.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_verifyMockObjects", "name": "PHPUnit_Framework_TestCase::verifyMockObjects", "doc": "&quot;Verifies the mock object expectations.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setName", "name": "PHPUnit_Framework_TestCase::setName", "doc": "&quot;Sets the name of a TestCase.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setDependencies", "name": "PHPUnit_Framework_TestCase::setDependencies", "doc": "&quot;Sets the dependencies of a TestCase.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_hasDependencies", "name": "PHPUnit_Framework_TestCase::hasDependencies", "doc": "&quot;Returns true if the tests has dependencies&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setDependencyInput", "name": "PHPUnit_Framework_TestCase::setDependencyInput", "doc": "&quot;Sets&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setBeStrictAboutChangesToGlobalState", "name": "PHPUnit_Framework_TestCase::setBeStrictAboutChangesToGlobalState", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setBackupGlobals", "name": "PHPUnit_Framework_TestCase::setBackupGlobals", "doc": "&quot;Calling this method in setUp() has no effect!&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setBackupStaticAttributes", "name": "PHPUnit_Framework_TestCase::setBackupStaticAttributes", "doc": "&quot;Calling this method in setUp() has no effect!&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setRunTestInSeparateProcess", "name": "PHPUnit_Framework_TestCase::setRunTestInSeparateProcess", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setPreserveGlobalState", "name": "PHPUnit_Framework_TestCase::setPreserveGlobalState", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setInIsolation", "name": "PHPUnit_Framework_TestCase::setInIsolation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_isInIsolation", "name": "PHPUnit_Framework_TestCase::isInIsolation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getResult", "name": "PHPUnit_Framework_TestCase::getResult", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setResult", "name": "PHPUnit_Framework_TestCase::setResult", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setOutputCallback", "name": "PHPUnit_Framework_TestCase::setOutputCallback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getTestResultObject", "name": "PHPUnit_Framework_TestCase::getTestResultObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setTestResultObject", "name": "PHPUnit_Framework_TestCase::setTestResultObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_registerMockObject", "name": "PHPUnit_Framework_TestCase::registerMockObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_iniSet", "name": "PHPUnit_Framework_TestCase::iniSet", "doc": "&quot;This method is a wrapper for the ini_set() function that automatically\nresets the modified php.ini setting to its original value after the\ntest is run.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setLocale", "name": "PHPUnit_Framework_TestCase::setLocale", "doc": "&quot;This method is a wrapper for the setlocale() function that automatically\nresets the locale to its original value after the test is run.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getMockBuilder", "name": "PHPUnit_Framework_TestCase::getMockBuilder", "doc": "&quot;Returns a builder object to create mock objects using a fluent interface.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_createMock", "name": "PHPUnit_Framework_TestCase::createMock", "doc": "&quot;Returns a test double for the specified class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_createConfiguredMock", "name": "PHPUnit_Framework_TestCase::createConfiguredMock", "doc": "&quot;Returns a configured test double for the specified class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_createPartialMock", "name": "PHPUnit_Framework_TestCase::createPartialMock", "doc": "&quot;Returns a partial test double for the specified class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getMock", "name": "PHPUnit_Framework_TestCase::getMock", "doc": "&quot;Returns a mock object for the specified class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getMockWithoutInvokingTheOriginalConstructor", "name": "PHPUnit_Framework_TestCase::getMockWithoutInvokingTheOriginalConstructor", "doc": "&quot;Returns a mock with disabled constructor object for the specified class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getMockClass", "name": "PHPUnit_Framework_TestCase::getMockClass", "doc": "&quot;Mocks the specified class and returns the name of the mocked class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getMockForAbstractClass", "name": "PHPUnit_Framework_TestCase::getMockForAbstractClass", "doc": "&quot;Returns a mock object for the specified abstract class with all abstract\nmethods of the class mocked. Concrete methods are not mocked by default.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getMockFromWsdl", "name": "PHPUnit_Framework_TestCase::getMockFromWsdl", "doc": "&quot;Returns a mock object based on the given WSDL file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getMockForTrait", "name": "PHPUnit_Framework_TestCase::getMockForTrait", "doc": "&quot;Returns a mock object for the specified trait with all abstract methods\nof the trait mocked. Concrete methods to mock can be specified with the\n&lt;code&gt;$mockedMethods&lt;\/code&gt; parameter.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getObjectForTrait", "name": "PHPUnit_Framework_TestCase::getObjectForTrait", "doc": "&quot;Returns an object for the specified trait.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_prophesize", "name": "PHPUnit_Framework_TestCase::prophesize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_addToAssertionCount", "name": "PHPUnit_Framework_TestCase::addToAssertionCount", "doc": "&quot;Adds a value to the assertion counter.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getNumAssertions", "name": "PHPUnit_Framework_TestCase::getNumAssertions", "doc": "&quot;Returns the number of assertions performed by this test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_any", "name": "PHPUnit_Framework_TestCase::any", "doc": "&quot;Returns a matcher that matches when the method is executed\nzero or more times.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_never", "name": "PHPUnit_Framework_TestCase::never", "doc": "&quot;Returns a matcher that matches when the method is never executed.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_atLeast", "name": "PHPUnit_Framework_TestCase::atLeast", "doc": "&quot;Returns a matcher that matches when the method is executed\nat least N times.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_atLeastOnce", "name": "PHPUnit_Framework_TestCase::atLeastOnce", "doc": "&quot;Returns a matcher that matches when the method is executed at least once.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_once", "name": "PHPUnit_Framework_TestCase::once", "doc": "&quot;Returns a matcher that matches when the method is executed exactly once.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_exactly", "name": "PHPUnit_Framework_TestCase::exactly", "doc": "&quot;Returns a matcher that matches when the method is executed\nexactly $count times.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_atMost", "name": "PHPUnit_Framework_TestCase::atMost", "doc": "&quot;Returns a matcher that matches when the method is executed\nat most N times.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_at", "name": "PHPUnit_Framework_TestCase::at", "doc": "&quot;Returns a matcher that matches when the method is executed\nat the given index.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_returnValue", "name": "PHPUnit_Framework_TestCase::returnValue", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_returnValueMap", "name": "PHPUnit_Framework_TestCase::returnValueMap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_returnArgument", "name": "PHPUnit_Framework_TestCase::returnArgument", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_returnCallback", "name": "PHPUnit_Framework_TestCase::returnCallback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_returnSelf", "name": "PHPUnit_Framework_TestCase::returnSelf", "doc": "&quot;Returns the current object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_throwException", "name": "PHPUnit_Framework_TestCase::throwException", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_onConsecutiveCalls", "name": "PHPUnit_Framework_TestCase::onConsecutiveCalls", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_usesDataProvider", "name": "PHPUnit_Framework_TestCase::usesDataProvider", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_dataDescription", "name": "PHPUnit_Framework_TestCase::dataDescription", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getDataSetAsString", "name": "PHPUnit_Framework_TestCase::getDataSetAsString", "doc": "&quot;Gets the data set description of a TestCase.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getProvidedData", "name": "PHPUnit_Framework_TestCase::getProvidedData", "doc": "&quot;Gets the data set of a TestCase.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_createResult", "name": "PHPUnit_Framework_TestCase::createResult", "doc": "&quot;Creates a default TestResult object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_handleDependencies", "name": "PHPUnit_Framework_TestCase::handleDependencies", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setUpBeforeClass", "name": "PHPUnit_Framework_TestCase::setUpBeforeClass", "doc": "&quot;This method is called before the first test of this test class is run.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_setUp", "name": "PHPUnit_Framework_TestCase::setUp", "doc": "&quot;Sets up the fixture, for example, open a network connection.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_assertPreConditions", "name": "PHPUnit_Framework_TestCase::assertPreConditions", "doc": "&quot;Performs assertions shared by all tests of a test case.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_assertPostConditions", "name": "PHPUnit_Framework_TestCase::assertPostConditions", "doc": "&quot;Performs assertions shared by all tests of a test case.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_tearDown", "name": "PHPUnit_Framework_TestCase::tearDown", "doc": "&quot;Tears down the fixture, for example, close a network connection.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_tearDownAfterClass", "name": "PHPUnit_Framework_TestCase::tearDownAfterClass", "doc": "&quot;This method is called after the last test of this test class is run.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_onNotSuccessfulTest", "name": "PHPUnit_Framework_TestCase::onNotSuccessfulTest", "doc": "&quot;This method is called when a test method did not execute successfully.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_prepareTemplate", "name": "PHPUnit_Framework_TestCase::prepareTemplate", "doc": "&quot;Performs custom preparations on the process isolation template.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestCase", "fromLink": "PHPUnit_Framework_TestCase.html", "link": "PHPUnit_Framework_TestCase.html#method_getMockObjectGenerator", "name": "PHPUnit_Framework_TestCase::getMockObjectGenerator", "doc": "&quot;Get the mock object generator, creating it if it doesn&#039;t exist.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_TestFailure.html", "name": "PHPUnit_Framework_TestFailure", "doc": "&quot;A TestFailure collects a failed test together with the caught exception.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_TestFailure", "fromLink": "PHPUnit_Framework_TestFailure.html", "link": "PHPUnit_Framework_TestFailure.html#method___construct", "name": "PHPUnit_Framework_TestFailure::__construct", "doc": "&quot;Constructs a TestFailure with the given test and exception.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestFailure", "fromLink": "PHPUnit_Framework_TestFailure.html", "link": "PHPUnit_Framework_TestFailure.html#method_toString", "name": "PHPUnit_Framework_TestFailure::toString", "doc": "&quot;Returns a short description of the failure.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestFailure", "fromLink": "PHPUnit_Framework_TestFailure.html", "link": "PHPUnit_Framework_TestFailure.html#method_getExceptionAsString", "name": "PHPUnit_Framework_TestFailure::getExceptionAsString", "doc": "&quot;Returns a description for the thrown exception.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestFailure", "fromLink": "PHPUnit_Framework_TestFailure.html", "link": "PHPUnit_Framework_TestFailure.html#method_exceptionToString", "name": "PHPUnit_Framework_TestFailure::exceptionToString", "doc": "&quot;Returns a description for an exception.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestFailure", "fromLink": "PHPUnit_Framework_TestFailure.html", "link": "PHPUnit_Framework_TestFailure.html#method_getTestName", "name": "PHPUnit_Framework_TestFailure::getTestName", "doc": "&quot;Returns the name of the failing test (including data set, if any).&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestFailure", "fromLink": "PHPUnit_Framework_TestFailure.html", "link": "PHPUnit_Framework_TestFailure.html#method_failedTest", "name": "PHPUnit_Framework_TestFailure::failedTest", "doc": "&quot;Returns the failing test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestFailure", "fromLink": "PHPUnit_Framework_TestFailure.html", "link": "PHPUnit_Framework_TestFailure.html#method_thrownException", "name": "PHPUnit_Framework_TestFailure::thrownException", "doc": "&quot;Gets the thrown exception.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestFailure", "fromLink": "PHPUnit_Framework_TestFailure.html", "link": "PHPUnit_Framework_TestFailure.html#method_exceptionMessage", "name": "PHPUnit_Framework_TestFailure::exceptionMessage", "doc": "&quot;Returns the exception&#039;s message.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestFailure", "fromLink": "PHPUnit_Framework_TestFailure.html", "link": "PHPUnit_Framework_TestFailure.html#method_isFailure", "name": "PHPUnit_Framework_TestFailure::isFailure", "doc": "&quot;Returns true if the thrown exception\nis of type AssertionFailedError.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_TestListener.html", "name": "PHPUnit_Framework_TestListener", "doc": "&quot;A Listener for test progress.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_addError", "name": "PHPUnit_Framework_TestListener::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_addFailure", "name": "PHPUnit_Framework_TestListener::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_addIncompleteTest", "name": "PHPUnit_Framework_TestListener::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_addRiskyTest", "name": "PHPUnit_Framework_TestListener::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_addSkippedTest", "name": "PHPUnit_Framework_TestListener::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_startTestSuite", "name": "PHPUnit_Framework_TestListener::startTestSuite", "doc": "&quot;A test suite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_endTestSuite", "name": "PHPUnit_Framework_TestListener::endTestSuite", "doc": "&quot;A test suite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_startTest", "name": "PHPUnit_Framework_TestListener::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestListener", "fromLink": "PHPUnit_Framework_TestListener.html", "link": "PHPUnit_Framework_TestListener.html#method_endTest", "name": "PHPUnit_Framework_TestListener::endTest", "doc": "&quot;A test ended.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_TestResult.html", "name": "PHPUnit_Framework_TestResult", "doc": "&quot;A TestResult collects the results of executing a test case.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_addListener", "name": "PHPUnit_Framework_TestResult::addListener", "doc": "&quot;Registers a TestListener.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_removeListener", "name": "PHPUnit_Framework_TestResult::removeListener", "doc": "&quot;Unregisters a TestListener.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_flushListeners", "name": "PHPUnit_Framework_TestResult::flushListeners", "doc": "&quot;Flushes all flushable TestListeners.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_addError", "name": "PHPUnit_Framework_TestResult::addError", "doc": "&quot;Adds an error to the list of errors.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_addWarning", "name": "PHPUnit_Framework_TestResult::addWarning", "doc": "&quot;Adds a warning to the list of warnings.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_addFailure", "name": "PHPUnit_Framework_TestResult::addFailure", "doc": "&quot;Adds a failure to the list of failures.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_startTestSuite", "name": "PHPUnit_Framework_TestResult::startTestSuite", "doc": "&quot;Informs the result that a testsuite will be started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_endTestSuite", "name": "PHPUnit_Framework_TestResult::endTestSuite", "doc": "&quot;Informs the result that a testsuite was completed.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_startTest", "name": "PHPUnit_Framework_TestResult::startTest", "doc": "&quot;Informs the result that a test will be started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_endTest", "name": "PHPUnit_Framework_TestResult::endTest", "doc": "&quot;Informs the result that a test was completed.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_allHarmless", "name": "PHPUnit_Framework_TestResult::allHarmless", "doc": "&quot;Returns true if no risky test occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_riskyCount", "name": "PHPUnit_Framework_TestResult::riskyCount", "doc": "&quot;Gets the number of risky tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_allCompletelyImplemented", "name": "PHPUnit_Framework_TestResult::allCompletelyImplemented", "doc": "&quot;Returns true if no incomplete test occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_notImplementedCount", "name": "PHPUnit_Framework_TestResult::notImplementedCount", "doc": "&quot;Gets the number of incomplete tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_risky", "name": "PHPUnit_Framework_TestResult::risky", "doc": "&quot;Returns an Enumeration for the risky tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_notImplemented", "name": "PHPUnit_Framework_TestResult::notImplemented", "doc": "&quot;Returns an Enumeration for the incomplete tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_noneSkipped", "name": "PHPUnit_Framework_TestResult::noneSkipped", "doc": "&quot;Returns true if no test has been skipped.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_skippedCount", "name": "PHPUnit_Framework_TestResult::skippedCount", "doc": "&quot;Gets the number of skipped tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_skipped", "name": "PHPUnit_Framework_TestResult::skipped", "doc": "&quot;Returns an Enumeration for the skipped tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_errorCount", "name": "PHPUnit_Framework_TestResult::errorCount", "doc": "&quot;Gets the number of detected errors.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_errors", "name": "PHPUnit_Framework_TestResult::errors", "doc": "&quot;Returns an Enumeration for the errors.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_failureCount", "name": "PHPUnit_Framework_TestResult::failureCount", "doc": "&quot;Gets the number of detected failures.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_failures", "name": "PHPUnit_Framework_TestResult::failures", "doc": "&quot;Returns an Enumeration for the failures.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_warningCount", "name": "PHPUnit_Framework_TestResult::warningCount", "doc": "&quot;Gets the number of detected warnings.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_warnings", "name": "PHPUnit_Framework_TestResult::warnings", "doc": "&quot;Returns an Enumeration for the warnings.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_passed", "name": "PHPUnit_Framework_TestResult::passed", "doc": "&quot;Returns the names of the tests that have passed.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_topTestSuite", "name": "PHPUnit_Framework_TestResult::topTestSuite", "doc": "&quot;Returns the (top) test suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_getCollectCodeCoverageInformation", "name": "PHPUnit_Framework_TestResult::getCollectCodeCoverageInformation", "doc": "&quot;Returns whether code coverage information should be collected.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_run", "name": "PHPUnit_Framework_TestResult::run", "doc": "&quot;Runs a TestCase.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_count", "name": "PHPUnit_Framework_TestResult::count", "doc": "&quot;Gets the number of run tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_shouldStop", "name": "PHPUnit_Framework_TestResult::shouldStop", "doc": "&quot;Checks whether the test run should stop.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_stop", "name": "PHPUnit_Framework_TestResult::stop", "doc": "&quot;Marks that the test run should stop.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_getCodeCoverage", "name": "PHPUnit_Framework_TestResult::getCodeCoverage", "doc": "&quot;Returns the code coverage object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_setCodeCoverage", "name": "PHPUnit_Framework_TestResult::setCodeCoverage", "doc": "&quot;Sets the code coverage object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_convertErrorsToExceptions", "name": "PHPUnit_Framework_TestResult::convertErrorsToExceptions", "doc": "&quot;Enables or disables the error-to-exception conversion.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_getConvertErrorsToExceptions", "name": "PHPUnit_Framework_TestResult::getConvertErrorsToExceptions", "doc": "&quot;Returns the error-to-exception conversion setting.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_stopOnError", "name": "PHPUnit_Framework_TestResult::stopOnError", "doc": "&quot;Enables or disables the stopping when an error occurs.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_stopOnFailure", "name": "PHPUnit_Framework_TestResult::stopOnFailure", "doc": "&quot;Enables or disables the stopping when a failure occurs.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_stopOnWarning", "name": "PHPUnit_Framework_TestResult::stopOnWarning", "doc": "&quot;Enables or disables the stopping when a warning occurs.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_beStrictAboutTestsThatDoNotTestAnything", "name": "PHPUnit_Framework_TestResult::beStrictAboutTestsThatDoNotTestAnything", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_isStrictAboutTestsThatDoNotTestAnything", "name": "PHPUnit_Framework_TestResult::isStrictAboutTestsThatDoNotTestAnything", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_beStrictAboutOutputDuringTests", "name": "PHPUnit_Framework_TestResult::beStrictAboutOutputDuringTests", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_isStrictAboutOutputDuringTests", "name": "PHPUnit_Framework_TestResult::isStrictAboutOutputDuringTests", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_beStrictAboutResourceUsageDuringSmallTests", "name": "PHPUnit_Framework_TestResult::beStrictAboutResourceUsageDuringSmallTests", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_isStrictAboutResourceUsageDuringSmallTests", "name": "PHPUnit_Framework_TestResult::isStrictAboutResourceUsageDuringSmallTests", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_enforceTimeLimit", "name": "PHPUnit_Framework_TestResult::enforceTimeLimit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_enforcesTimeLimit", "name": "PHPUnit_Framework_TestResult::enforcesTimeLimit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_beStrictAboutTodoAnnotatedTests", "name": "PHPUnit_Framework_TestResult::beStrictAboutTodoAnnotatedTests", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_isStrictAboutTodoAnnotatedTests", "name": "PHPUnit_Framework_TestResult::isStrictAboutTodoAnnotatedTests", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_stopOnRisky", "name": "PHPUnit_Framework_TestResult::stopOnRisky", "doc": "&quot;Enables or disables the stopping for risky tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_stopOnIncomplete", "name": "PHPUnit_Framework_TestResult::stopOnIncomplete", "doc": "&quot;Enables or disables the stopping for incomplete tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_stopOnSkipped", "name": "PHPUnit_Framework_TestResult::stopOnSkipped", "doc": "&quot;Enables or disables the stopping for skipped tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_time", "name": "PHPUnit_Framework_TestResult::time", "doc": "&quot;Returns the time spent running the tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_wasSuccessful", "name": "PHPUnit_Framework_TestResult::wasSuccessful", "doc": "&quot;Returns whether the entire test was successful or not.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_setTimeoutForSmallTests", "name": "PHPUnit_Framework_TestResult::setTimeoutForSmallTests", "doc": "&quot;Sets the timeout for small tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_setTimeoutForMediumTests", "name": "PHPUnit_Framework_TestResult::setTimeoutForMediumTests", "doc": "&quot;Sets the timeout for medium tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_setTimeoutForLargeTests", "name": "PHPUnit_Framework_TestResult::setTimeoutForLargeTests", "doc": "&quot;Sets the timeout for large tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_getTimeoutForLargeTests", "name": "PHPUnit_Framework_TestResult::getTimeoutForLargeTests", "doc": "&quot;Returns the set timeout for large tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_setRegisterMockObjectsFromTestArgumentsRecursively", "name": "PHPUnit_Framework_TestResult::setRegisterMockObjectsFromTestArgumentsRecursively", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestResult", "fromLink": "PHPUnit_Framework_TestResult.html", "link": "PHPUnit_Framework_TestResult.html#method_getHierarchy", "name": "PHPUnit_Framework_TestResult::getHierarchy", "doc": "&quot;Returns the class hierarchy for a given class.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_TestSuite.html", "name": "PHPUnit_Framework_TestSuite", "doc": "&quot;A TestSuite is a composite of Tests. It runs a collection of test cases.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method___construct", "name": "PHPUnit_Framework_TestSuite::__construct", "doc": "&quot;Constructs a new TestSuite:&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_toString", "name": "PHPUnit_Framework_TestSuite::toString", "doc": "&quot;Returns a string representation of the test suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_addTest", "name": "PHPUnit_Framework_TestSuite::addTest", "doc": "&quot;Adds a test to the suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_addTestSuite", "name": "PHPUnit_Framework_TestSuite::addTestSuite", "doc": "&quot;Adds the tests from the given class to the suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_addTestFile", "name": "PHPUnit_Framework_TestSuite::addTestFile", "doc": "&quot;Wraps both &lt;code&gt;addTest()&lt;\/code&gt; and &lt;code&gt;addTestSuite&lt;\/code&gt;\nas well as the separate import statements for the user&#039;s convenience.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_addTestFiles", "name": "PHPUnit_Framework_TestSuite::addTestFiles", "doc": "&quot;Wrapper for addTestFile() that adds multiple test files.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_count", "name": "PHPUnit_Framework_TestSuite::count", "doc": "&quot;Counts the number of test cases that will be run by this test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_createTest", "name": "PHPUnit_Framework_TestSuite::createTest", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_createResult", "name": "PHPUnit_Framework_TestSuite::createResult", "doc": "&quot;Creates a default TestResult object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_getName", "name": "PHPUnit_Framework_TestSuite::getName", "doc": "&quot;Returns the name of the suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_getGroups", "name": "PHPUnit_Framework_TestSuite::getGroups", "doc": "&quot;Returns the test groups of the suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_getGroupDetails", "name": "PHPUnit_Framework_TestSuite::getGroupDetails", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_setGroupDetails", "name": "PHPUnit_Framework_TestSuite::setGroupDetails", "doc": "&quot;Set tests groups of the test case&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_run", "name": "PHPUnit_Framework_TestSuite::run", "doc": "&quot;Runs the tests and collects their result in a TestResult.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_setRunTestInSeparateProcess", "name": "PHPUnit_Framework_TestSuite::setRunTestInSeparateProcess", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_runTest", "name": "PHPUnit_Framework_TestSuite::runTest", "doc": "&quot;Runs a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_setName", "name": "PHPUnit_Framework_TestSuite::setName", "doc": "&quot;Sets the name of the suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_testAt", "name": "PHPUnit_Framework_TestSuite::testAt", "doc": "&quot;Returns the test at the given index.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_tests", "name": "PHPUnit_Framework_TestSuite::tests", "doc": "&quot;Returns the tests as an enumeration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_setTests", "name": "PHPUnit_Framework_TestSuite::setTests", "doc": "&quot;Set tests of the test suite&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_markTestSuiteSkipped", "name": "PHPUnit_Framework_TestSuite::markTestSuiteSkipped", "doc": "&quot;Mark the test suite as skipped.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_addTestMethod", "name": "PHPUnit_Framework_TestSuite::addTestMethod", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_isTestMethod", "name": "PHPUnit_Framework_TestSuite::isTestMethod", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_warning", "name": "PHPUnit_Framework_TestSuite::warning", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_skipTest", "name": "PHPUnit_Framework_TestSuite::skipTest", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_incompleteTest", "name": "PHPUnit_Framework_TestSuite::incompleteTest", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_setbeStrictAboutChangesToGlobalState", "name": "PHPUnit_Framework_TestSuite::setbeStrictAboutChangesToGlobalState", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_setBackupGlobals", "name": "PHPUnit_Framework_TestSuite::setBackupGlobals", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_setBackupStaticAttributes", "name": "PHPUnit_Framework_TestSuite::setBackupStaticAttributes", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_getIterator", "name": "PHPUnit_Framework_TestSuite::getIterator", "doc": "&quot;Returns an iterator for this test suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_injectFilter", "name": "PHPUnit_Framework_TestSuite::injectFilter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_setUp", "name": "PHPUnit_Framework_TestSuite::setUp", "doc": "&quot;Template Method that is called before the tests\nof this test suite are run.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite", "fromLink": "PHPUnit_Framework_TestSuite.html", "link": "PHPUnit_Framework_TestSuite.html#method_tearDown", "name": "PHPUnit_Framework_TestSuite::tearDown", "doc": "&quot;Template Method that is called after the tests\nof this test suite have finished running.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_TestSuite_DataProvider.html", "name": "PHPUnit_Framework_TestSuite_DataProvider", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_TestSuite_DataProvider", "fromLink": "PHPUnit_Framework_TestSuite_DataProvider.html", "link": "PHPUnit_Framework_TestSuite_DataProvider.html#method_setDependencies", "name": "PHPUnit_Framework_TestSuite_DataProvider::setDependencies", "doc": "&quot;Sets the dependencies of a TestCase.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_UnintentionallyCoveredCodeError.html", "name": "PHPUnit_Framework_UnintentionallyCoveredCodeError", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of a test that unintentionally covers code.&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Framework_Warning.html", "name": "PHPUnit_Framework_Warning", "doc": "&quot;Thrown when an there is a warning.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_Warning", "fromLink": "PHPUnit_Framework_Warning.html", "link": "PHPUnit_Framework_Warning.html#method_toString", "name": "PHPUnit_Framework_Warning::toString", "doc": "&quot;Wrapper for getMessage() which is declared as final.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Framework_WarningTestCase.html", "name": "PHPUnit_Framework_WarningTestCase", "doc": "&quot;A warning.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Framework_WarningTestCase", "fromLink": "PHPUnit_Framework_WarningTestCase.html", "link": "PHPUnit_Framework_WarningTestCase.html#method___construct", "name": "PHPUnit_Framework_WarningTestCase::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_WarningTestCase", "fromLink": "PHPUnit_Framework_WarningTestCase.html", "link": "PHPUnit_Framework_WarningTestCase.html#method_runTest", "name": "PHPUnit_Framework_WarningTestCase::runTest", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_WarningTestCase", "fromLink": "PHPUnit_Framework_WarningTestCase.html", "link": "PHPUnit_Framework_WarningTestCase.html#method_getMessage", "name": "PHPUnit_Framework_WarningTestCase::getMessage", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Framework_WarningTestCase", "fromLink": "PHPUnit_Framework_WarningTestCase.html", "link": "PHPUnit_Framework_WarningTestCase.html#method_toString", "name": "PHPUnit_Framework_WarningTestCase::toString", "doc": "&quot;Returns a string representation of the test case.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Runner_BaseTestRunner.html", "name": "PHPUnit_Runner_BaseTestRunner", "doc": "&quot;Base class for all test runners.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Runner_BaseTestRunner", "fromLink": "PHPUnit_Runner_BaseTestRunner.html", "link": "PHPUnit_Runner_BaseTestRunner.html#method_getLoader", "name": "PHPUnit_Runner_BaseTestRunner::getLoader", "doc": "&quot;Returns the loader to be used.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_BaseTestRunner", "fromLink": "PHPUnit_Runner_BaseTestRunner.html", "link": "PHPUnit_Runner_BaseTestRunner.html#method_getTest", "name": "PHPUnit_Runner_BaseTestRunner::getTest", "doc": "&quot;Returns the Test corresponding to the given suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_BaseTestRunner", "fromLink": "PHPUnit_Runner_BaseTestRunner.html", "link": "PHPUnit_Runner_BaseTestRunner.html#method_loadSuiteClass", "name": "PHPUnit_Runner_BaseTestRunner::loadSuiteClass", "doc": "&quot;Returns the loaded ReflectionClass for a suite name.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_BaseTestRunner", "fromLink": "PHPUnit_Runner_BaseTestRunner.html", "link": "PHPUnit_Runner_BaseTestRunner.html#method_clearStatus", "name": "PHPUnit_Runner_BaseTestRunner::clearStatus", "doc": "&quot;Clears the status message.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_BaseTestRunner", "fromLink": "PHPUnit_Runner_BaseTestRunner.html", "link": "PHPUnit_Runner_BaseTestRunner.html#method_runFailed", "name": "PHPUnit_Runner_BaseTestRunner::runFailed", "doc": "&quot;Override to define how to handle a failed loading of\na test suite.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Runner_Exception.html", "name": "PHPUnit_Runner_Exception", "doc": "&quot;&quot;"},
                    
            {"type": "Class",  "link": "PHPUnit_Runner_Filter_Factory.html", "name": "PHPUnit_Runner_Filter_Factory", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Runner_Filter_Factory", "fromLink": "PHPUnit_Runner_Filter_Factory.html", "link": "PHPUnit_Runner_Filter_Factory.html#method_addFilter", "name": "PHPUnit_Runner_Filter_Factory::addFilter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_Filter_Factory", "fromLink": "PHPUnit_Runner_Filter_Factory.html", "link": "PHPUnit_Runner_Filter_Factory.html#method_factory", "name": "PHPUnit_Runner_Filter_Factory::factory", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Runner_Filter_GroupFilterIterator.html", "name": "PHPUnit_Runner_Filter_GroupFilterIterator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Runner_Filter_GroupFilterIterator", "fromLink": "PHPUnit_Runner_Filter_GroupFilterIterator.html", "link": "PHPUnit_Runner_Filter_GroupFilterIterator.html#method___construct", "name": "PHPUnit_Runner_Filter_GroupFilterIterator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_Filter_GroupFilterIterator", "fromLink": "PHPUnit_Runner_Filter_GroupFilterIterator.html", "link": "PHPUnit_Runner_Filter_GroupFilterIterator.html#method_accept", "name": "PHPUnit_Runner_Filter_GroupFilterIterator::accept", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_Filter_GroupFilterIterator", "fromLink": "PHPUnit_Runner_Filter_GroupFilterIterator.html", "link": "PHPUnit_Runner_Filter_GroupFilterIterator.html#method_doAccept", "name": "PHPUnit_Runner_Filter_GroupFilterIterator::doAccept", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Runner_Filter_Group_Exclude.html", "name": "PHPUnit_Runner_Filter_Group_Exclude", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Runner_Filter_Group_Exclude", "fromLink": "PHPUnit_Runner_Filter_Group_Exclude.html", "link": "PHPUnit_Runner_Filter_Group_Exclude.html#method_doAccept", "name": "PHPUnit_Runner_Filter_Group_Exclude::doAccept", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Runner_Filter_Group_Include.html", "name": "PHPUnit_Runner_Filter_Group_Include", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Runner_Filter_Group_Include", "fromLink": "PHPUnit_Runner_Filter_Group_Include.html", "link": "PHPUnit_Runner_Filter_Group_Include.html#method_doAccept", "name": "PHPUnit_Runner_Filter_Group_Include::doAccept", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Runner_Filter_Test.html", "name": "PHPUnit_Runner_Filter_Test", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Runner_Filter_Test", "fromLink": "PHPUnit_Runner_Filter_Test.html", "link": "PHPUnit_Runner_Filter_Test.html#method___construct", "name": "PHPUnit_Runner_Filter_Test::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_Filter_Test", "fromLink": "PHPUnit_Runner_Filter_Test.html", "link": "PHPUnit_Runner_Filter_Test.html#method_setFilter", "name": "PHPUnit_Runner_Filter_Test::setFilter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_Filter_Test", "fromLink": "PHPUnit_Runner_Filter_Test.html", "link": "PHPUnit_Runner_Filter_Test.html#method_accept", "name": "PHPUnit_Runner_Filter_Test::accept", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Runner_StandardTestSuiteLoader.html", "name": "PHPUnit_Runner_StandardTestSuiteLoader", "doc": "&quot;The standard test suite loader.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Runner_StandardTestSuiteLoader", "fromLink": "PHPUnit_Runner_StandardTestSuiteLoader.html", "link": "PHPUnit_Runner_StandardTestSuiteLoader.html#method_load", "name": "PHPUnit_Runner_StandardTestSuiteLoader::load", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_StandardTestSuiteLoader", "fromLink": "PHPUnit_Runner_StandardTestSuiteLoader.html", "link": "PHPUnit_Runner_StandardTestSuiteLoader.html#method_reload", "name": "PHPUnit_Runner_StandardTestSuiteLoader::reload", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Runner_TestSuiteLoader.html", "name": "PHPUnit_Runner_TestSuiteLoader", "doc": "&quot;An interface to define how a test suite should be loaded.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Runner_TestSuiteLoader", "fromLink": "PHPUnit_Runner_TestSuiteLoader.html", "link": "PHPUnit_Runner_TestSuiteLoader.html#method_load", "name": "PHPUnit_Runner_TestSuiteLoader::load", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_TestSuiteLoader", "fromLink": "PHPUnit_Runner_TestSuiteLoader.html", "link": "PHPUnit_Runner_TestSuiteLoader.html#method_reload", "name": "PHPUnit_Runner_TestSuiteLoader::reload", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Runner_Version.html", "name": "PHPUnit_Runner_Version", "doc": "&quot;This class defines the current version of PHPUnit.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Runner_Version", "fromLink": "PHPUnit_Runner_Version.html", "link": "PHPUnit_Runner_Version.html#method_id", "name": "PHPUnit_Runner_Version::id", "doc": "&quot;Returns the current version of PHPUnit.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_Version", "fromLink": "PHPUnit_Runner_Version.html", "link": "PHPUnit_Runner_Version.html#method_series", "name": "PHPUnit_Runner_Version::series", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_Version", "fromLink": "PHPUnit_Runner_Version.html", "link": "PHPUnit_Runner_Version.html#method_getVersionString", "name": "PHPUnit_Runner_Version::getVersionString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Runner_Version", "fromLink": "PHPUnit_Runner_Version.html", "link": "PHPUnit_Runner_Version.html#method_getReleaseChannel", "name": "PHPUnit_Runner_Version::getReleaseChannel", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_TextUI_Command.html", "name": "PHPUnit_TextUI_Command", "doc": "&quot;A TestRunner for the Command Line Interface (CLI)\nPHP SAPI Module.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_TextUI_Command", "fromLink": "PHPUnit_TextUI_Command.html", "link": "PHPUnit_TextUI_Command.html#method_main", "name": "PHPUnit_TextUI_Command::main", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_Command", "fromLink": "PHPUnit_TextUI_Command.html", "link": "PHPUnit_TextUI_Command.html#method_run", "name": "PHPUnit_TextUI_Command::run", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_Command", "fromLink": "PHPUnit_TextUI_Command.html", "link": "PHPUnit_TextUI_Command.html#method_createRunner", "name": "PHPUnit_TextUI_Command::createRunner", "doc": "&quot;Create a TestRunner, override in subclasses.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_Command", "fromLink": "PHPUnit_TextUI_Command.html", "link": "PHPUnit_TextUI_Command.html#method_handleArguments", "name": "PHPUnit_TextUI_Command::handleArguments", "doc": "&quot;Handles the command-line arguments.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_Command", "fromLink": "PHPUnit_TextUI_Command.html", "link": "PHPUnit_TextUI_Command.html#method_handleLoader", "name": "PHPUnit_TextUI_Command::handleLoader", "doc": "&quot;Handles the loading of the PHPUnit&lt;em&gt;Runner&lt;\/em&gt;TestSuiteLoader implementation.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_Command", "fromLink": "PHPUnit_TextUI_Command.html", "link": "PHPUnit_TextUI_Command.html#method_handlePrinter", "name": "PHPUnit_TextUI_Command::handlePrinter", "doc": "&quot;Handles the loading of the PHPUnit&lt;em&gt;Util&lt;\/em&gt;Printer implementation.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_Command", "fromLink": "PHPUnit_TextUI_Command.html", "link": "PHPUnit_TextUI_Command.html#method_handleBootstrap", "name": "PHPUnit_TextUI_Command::handleBootstrap", "doc": "&quot;Loads a bootstrap file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_Command", "fromLink": "PHPUnit_TextUI_Command.html", "link": "PHPUnit_TextUI_Command.html#method_handleSelfUpdate", "name": "PHPUnit_TextUI_Command::handleSelfUpdate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_Command", "fromLink": "PHPUnit_TextUI_Command.html", "link": "PHPUnit_TextUI_Command.html#method_handleVersionCheck", "name": "PHPUnit_TextUI_Command::handleVersionCheck", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_Command", "fromLink": "PHPUnit_TextUI_Command.html", "link": "PHPUnit_TextUI_Command.html#method_showHelp", "name": "PHPUnit_TextUI_Command::showHelp", "doc": "&quot;Show the help message.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_Command", "fromLink": "PHPUnit_TextUI_Command.html", "link": "PHPUnit_TextUI_Command.html#method_handleCustomTestSuite", "name": "PHPUnit_TextUI_Command::handleCustomTestSuite", "doc": "&quot;Custom callback for test suite discovery.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_TextUI_ResultPrinter.html", "name": "PHPUnit_TextUI_ResultPrinter", "doc": "&quot;Prints the result of a TextUI TestRunner run.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method___construct", "name": "PHPUnit_TextUI_ResultPrinter::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printResult", "name": "PHPUnit_TextUI_ResultPrinter::printResult", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printDefects", "name": "PHPUnit_TextUI_ResultPrinter::printDefects", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printDefect", "name": "PHPUnit_TextUI_ResultPrinter::printDefect", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printDefectHeader", "name": "PHPUnit_TextUI_ResultPrinter::printDefectHeader", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printDefectTrace", "name": "PHPUnit_TextUI_ResultPrinter::printDefectTrace", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printErrors", "name": "PHPUnit_TextUI_ResultPrinter::printErrors", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printFailures", "name": "PHPUnit_TextUI_ResultPrinter::printFailures", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printWarnings", "name": "PHPUnit_TextUI_ResultPrinter::printWarnings", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printIncompletes", "name": "PHPUnit_TextUI_ResultPrinter::printIncompletes", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printRisky", "name": "PHPUnit_TextUI_ResultPrinter::printRisky", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printSkipped", "name": "PHPUnit_TextUI_ResultPrinter::printSkipped", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printHeader", "name": "PHPUnit_TextUI_ResultPrinter::printHeader", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printFooter", "name": "PHPUnit_TextUI_ResultPrinter::printFooter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_printWaitPrompt", "name": "PHPUnit_TextUI_ResultPrinter::printWaitPrompt", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_addError", "name": "PHPUnit_TextUI_ResultPrinter::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_addFailure", "name": "PHPUnit_TextUI_ResultPrinter::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_addWarning", "name": "PHPUnit_TextUI_ResultPrinter::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_addIncompleteTest", "name": "PHPUnit_TextUI_ResultPrinter::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_addRiskyTest", "name": "PHPUnit_TextUI_ResultPrinter::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_addSkippedTest", "name": "PHPUnit_TextUI_ResultPrinter::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_startTestSuite", "name": "PHPUnit_TextUI_ResultPrinter::startTestSuite", "doc": "&quot;A testsuite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_endTestSuite", "name": "PHPUnit_TextUI_ResultPrinter::endTestSuite", "doc": "&quot;A testsuite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_startTest", "name": "PHPUnit_TextUI_ResultPrinter::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_endTest", "name": "PHPUnit_TextUI_ResultPrinter::endTest", "doc": "&quot;A test ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_writeProgress", "name": "PHPUnit_TextUI_ResultPrinter::writeProgress", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_writeNewLine", "name": "PHPUnit_TextUI_ResultPrinter::writeNewLine", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_formatWithColor", "name": "PHPUnit_TextUI_ResultPrinter::formatWithColor", "doc": "&quot;Formats a buffer with a specified ANSI color sequence if colors are\nenabled.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_writeWithColor", "name": "PHPUnit_TextUI_ResultPrinter::writeWithColor", "doc": "&quot;Writes a buffer out with a color sequence if colors are enabled.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_ResultPrinter", "fromLink": "PHPUnit_TextUI_ResultPrinter.html", "link": "PHPUnit_TextUI_ResultPrinter.html#method_writeProgressWithColor", "name": "PHPUnit_TextUI_ResultPrinter::writeProgressWithColor", "doc": "&quot;Writes progress with a color sequence if colors are enabled.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_TextUI_TestRunner.html", "name": "PHPUnit_TextUI_TestRunner", "doc": "&quot;A TestRunner for the Command Line Interface (CLI)\nPHP SAPI Module.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_TextUI_TestRunner", "fromLink": "PHPUnit_TextUI_TestRunner.html", "link": "PHPUnit_TextUI_TestRunner.html#method___construct", "name": "PHPUnit_TextUI_TestRunner::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_TestRunner", "fromLink": "PHPUnit_TextUI_TestRunner.html", "link": "PHPUnit_TextUI_TestRunner.html#method_run", "name": "PHPUnit_TextUI_TestRunner::run", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_TestRunner", "fromLink": "PHPUnit_TextUI_TestRunner.html", "link": "PHPUnit_TextUI_TestRunner.html#method_createTestResult", "name": "PHPUnit_TextUI_TestRunner::createTestResult", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_TestRunner", "fromLink": "PHPUnit_TextUI_TestRunner.html", "link": "PHPUnit_TextUI_TestRunner.html#method_doRun", "name": "PHPUnit_TextUI_TestRunner::doRun", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_TestRunner", "fromLink": "PHPUnit_TextUI_TestRunner.html", "link": "PHPUnit_TextUI_TestRunner.html#method_setPrinter", "name": "PHPUnit_TextUI_TestRunner::setPrinter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_TestRunner", "fromLink": "PHPUnit_TextUI_TestRunner.html", "link": "PHPUnit_TextUI_TestRunner.html#method_runFailed", "name": "PHPUnit_TextUI_TestRunner::runFailed", "doc": "&quot;Override to define how to handle a failed loading of\na test suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_TestRunner", "fromLink": "PHPUnit_TextUI_TestRunner.html", "link": "PHPUnit_TextUI_TestRunner.html#method_write", "name": "PHPUnit_TextUI_TestRunner::write", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_TestRunner", "fromLink": "PHPUnit_TextUI_TestRunner.html", "link": "PHPUnit_TextUI_TestRunner.html#method_getLoader", "name": "PHPUnit_TextUI_TestRunner::getLoader", "doc": "&quot;Returns the loader to be used.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_TextUI_TestRunner", "fromLink": "PHPUnit_TextUI_TestRunner.html", "link": "PHPUnit_TextUI_TestRunner.html#method_handleConfiguration", "name": "PHPUnit_TextUI_TestRunner::handleConfiguration", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Blacklist.html", "name": "PHPUnit_Util_Blacklist", "doc": "&quot;Utility class for blacklisting PHPUnit&#039;s own source code files.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Blacklist", "fromLink": "PHPUnit_Util_Blacklist.html", "link": "PHPUnit_Util_Blacklist.html#method_getBlacklistedDirectories", "name": "PHPUnit_Util_Blacklist::getBlacklistedDirectories", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Blacklist", "fromLink": "PHPUnit_Util_Blacklist.html", "link": "PHPUnit_Util_Blacklist.html#method_isBlacklisted", "name": "PHPUnit_Util_Blacklist::isBlacklisted", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Configuration.html", "name": "PHPUnit_Util_Configuration", "doc": "&quot;Wrapper for the PHPUnit XML configuration file.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method___construct", "name": "PHPUnit_Util_Configuration::__construct", "doc": "&quot;Loads a PHPUnit configuration file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getInstance", "name": "PHPUnit_Util_Configuration::getInstance", "doc": "&quot;Returns a PHPUnit configuration object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getFilename", "name": "PHPUnit_Util_Configuration::getFilename", "doc": "&quot;Returns the realpath to the configuration file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getFilterConfiguration", "name": "PHPUnit_Util_Configuration::getFilterConfiguration", "doc": "&quot;Returns the configuration for SUT filtering.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getGroupConfiguration", "name": "PHPUnit_Util_Configuration::getGroupConfiguration", "doc": "&quot;Returns the configuration for groups.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getTestdoxGroupConfiguration", "name": "PHPUnit_Util_Configuration::getTestdoxGroupConfiguration", "doc": "&quot;Returns the configuration for testdox groups.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getListenerConfiguration", "name": "PHPUnit_Util_Configuration::getListenerConfiguration", "doc": "&quot;Returns the configuration for listeners.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getLoggingConfiguration", "name": "PHPUnit_Util_Configuration::getLoggingConfiguration", "doc": "&quot;Returns the logging configuration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getPHPConfiguration", "name": "PHPUnit_Util_Configuration::getPHPConfiguration", "doc": "&quot;Returns the PHP configuration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_handlePHPConfiguration", "name": "PHPUnit_Util_Configuration::handlePHPConfiguration", "doc": "&quot;Handles the PHP configuration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getPHPUnitConfiguration", "name": "PHPUnit_Util_Configuration::getPHPUnitConfiguration", "doc": "&quot;Returns the PHPUnit configuration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getTestSuiteConfiguration", "name": "PHPUnit_Util_Configuration::getTestSuiteConfiguration", "doc": "&quot;Returns the test suite configuration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getTestSuiteNames", "name": "PHPUnit_Util_Configuration::getTestSuiteNames", "doc": "&quot;Returns the test suite names from the configuration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getTestSuite", "name": "PHPUnit_Util_Configuration::getTestSuite", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getBoolean", "name": "PHPUnit_Util_Configuration::getBoolean", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_getInteger", "name": "PHPUnit_Util_Configuration::getInteger", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_readFilterDirectories", "name": "PHPUnit_Util_Configuration::readFilterDirectories", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_readFilterFiles", "name": "PHPUnit_Util_Configuration::readFilterFiles", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Configuration", "fromLink": "PHPUnit_Util_Configuration.html", "link": "PHPUnit_Util_Configuration.html#method_toAbsolutePath", "name": "PHPUnit_Util_Configuration::toAbsolutePath", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_ConfigurationGenerator.html", "name": "PHPUnit_Util_ConfigurationGenerator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_ConfigurationGenerator", "fromLink": "PHPUnit_Util_ConfigurationGenerator.html", "link": "PHPUnit_Util_ConfigurationGenerator.html#method_generateDefaultConfiguration", "name": "PHPUnit_Util_ConfigurationGenerator::generateDefaultConfiguration", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_ErrorHandler.html", "name": "PHPUnit_Util_ErrorHandler", "doc": "&quot;Error handler that converts PHP errors and warnings to exceptions.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_ErrorHandler", "fromLink": "PHPUnit_Util_ErrorHandler.html", "link": "PHPUnit_Util_ErrorHandler.html#method_getErrorStack", "name": "PHPUnit_Util_ErrorHandler::getErrorStack", "doc": "&quot;Returns the error stack.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_ErrorHandler", "fromLink": "PHPUnit_Util_ErrorHandler.html", "link": "PHPUnit_Util_ErrorHandler.html#method_handleError", "name": "PHPUnit_Util_ErrorHandler::handleError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_ErrorHandler", "fromLink": "PHPUnit_Util_ErrorHandler.html", "link": "PHPUnit_Util_ErrorHandler.html#method_handleErrorOnce", "name": "PHPUnit_Util_ErrorHandler::handleErrorOnce", "doc": "&quot;Registers an error handler and returns a function that will restore\nthe previous handler when invoked&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Fileloader.html", "name": "PHPUnit_Util_Fileloader", "doc": "&quot;Utility methods to load PHP sourcefiles.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Fileloader", "fromLink": "PHPUnit_Util_Fileloader.html", "link": "PHPUnit_Util_Fileloader.html#method_checkAndLoad", "name": "PHPUnit_Util_Fileloader::checkAndLoad", "doc": "&quot;Checks if a PHP sourcefile is readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Fileloader", "fromLink": "PHPUnit_Util_Fileloader.html", "link": "PHPUnit_Util_Fileloader.html#method_load", "name": "PHPUnit_Util_Fileloader::load", "doc": "&quot;Loads a PHP sourcefile.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Filesystem.html", "name": "PHPUnit_Util_Filesystem", "doc": "&quot;Filesystem helpers.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Filesystem", "fromLink": "PHPUnit_Util_Filesystem.html", "link": "PHPUnit_Util_Filesystem.html#method_classNameToFilename", "name": "PHPUnit_Util_Filesystem::classNameToFilename", "doc": "&quot;Maps class names to source file names:\n  - PEAR CS:   Foo&lt;em&gt;Bar&lt;\/em&gt;Baz -&gt; Foo\/Bar\/Baz.php\n  - Namespace: Foo\\Bar\\Baz -&gt; Foo\/Bar\/Baz.php&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Filter.html", "name": "PHPUnit_Util_Filter", "doc": "&quot;Utility class for code filtering.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Filter", "fromLink": "PHPUnit_Util_Filter.html", "link": "PHPUnit_Util_Filter.html#method_getFilteredStacktrace", "name": "PHPUnit_Util_Filter::getFilteredStacktrace", "doc": "&quot;Filters stack frames from PHPUnit classes.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Getopt.html", "name": "PHPUnit_Util_Getopt", "doc": "&quot;Command-line options parsing class.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Getopt", "fromLink": "PHPUnit_Util_Getopt.html", "link": "PHPUnit_Util_Getopt.html#method_getopt", "name": "PHPUnit_Util_Getopt::getopt", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Getopt", "fromLink": "PHPUnit_Util_Getopt.html", "link": "PHPUnit_Util_Getopt.html#method_parseShortOption", "name": "PHPUnit_Util_Getopt::parseShortOption", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Getopt", "fromLink": "PHPUnit_Util_Getopt.html", "link": "PHPUnit_Util_Getopt.html#method_parseLongOption", "name": "PHPUnit_Util_Getopt::parseLongOption", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_GlobalState.html", "name": "PHPUnit_Util_GlobalState", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_GlobalState", "fromLink": "PHPUnit_Util_GlobalState.html", "link": "PHPUnit_Util_GlobalState.html#method_getIncludedFilesAsString", "name": "PHPUnit_Util_GlobalState::getIncludedFilesAsString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_GlobalState", "fromLink": "PHPUnit_Util_GlobalState.html", "link": "PHPUnit_Util_GlobalState.html#method_processIncludedFilesAsString", "name": "PHPUnit_Util_GlobalState::processIncludedFilesAsString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_GlobalState", "fromLink": "PHPUnit_Util_GlobalState.html", "link": "PHPUnit_Util_GlobalState.html#method_getIniSettingsAsString", "name": "PHPUnit_Util_GlobalState::getIniSettingsAsString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_GlobalState", "fromLink": "PHPUnit_Util_GlobalState.html", "link": "PHPUnit_Util_GlobalState.html#method_getConstantsAsString", "name": "PHPUnit_Util_GlobalState::getConstantsAsString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_GlobalState", "fromLink": "PHPUnit_Util_GlobalState.html", "link": "PHPUnit_Util_GlobalState.html#method_getGlobalsAsString", "name": "PHPUnit_Util_GlobalState::getGlobalsAsString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_GlobalState", "fromLink": "PHPUnit_Util_GlobalState.html", "link": "PHPUnit_Util_GlobalState.html#method_getSuperGlobalArrays", "name": "PHPUnit_Util_GlobalState::getSuperGlobalArrays", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_GlobalState", "fromLink": "PHPUnit_Util_GlobalState.html", "link": "PHPUnit_Util_GlobalState.html#method_exportVariable", "name": "PHPUnit_Util_GlobalState::exportVariable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_GlobalState", "fromLink": "PHPUnit_Util_GlobalState.html", "link": "PHPUnit_Util_GlobalState.html#method_arrayOnlyContainsScalars", "name": "PHPUnit_Util_GlobalState::arrayOnlyContainsScalars", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_InvalidArgumentHelper.html", "name": "PHPUnit_Util_InvalidArgumentHelper", "doc": "&quot;Factory for PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Exception objects that are used to describe\ninvalid arguments passed to a function or method.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_InvalidArgumentHelper", "fromLink": "PHPUnit_Util_InvalidArgumentHelper.html", "link": "PHPUnit_Util_InvalidArgumentHelper.html#method_factory", "name": "PHPUnit_Util_InvalidArgumentHelper::factory", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Log_JSON.html", "name": "PHPUnit_Util_Log_JSON", "doc": "&quot;A TestListener that generates JSON messages.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Log_JSON", "fromLink": "PHPUnit_Util_Log_JSON.html", "link": "PHPUnit_Util_Log_JSON.html#method_addError", "name": "PHPUnit_Util_Log_JSON::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JSON", "fromLink": "PHPUnit_Util_Log_JSON.html", "link": "PHPUnit_Util_Log_JSON.html#method_addWarning", "name": "PHPUnit_Util_Log_JSON::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JSON", "fromLink": "PHPUnit_Util_Log_JSON.html", "link": "PHPUnit_Util_Log_JSON.html#method_addFailure", "name": "PHPUnit_Util_Log_JSON::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JSON", "fromLink": "PHPUnit_Util_Log_JSON.html", "link": "PHPUnit_Util_Log_JSON.html#method_addIncompleteTest", "name": "PHPUnit_Util_Log_JSON::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JSON", "fromLink": "PHPUnit_Util_Log_JSON.html", "link": "PHPUnit_Util_Log_JSON.html#method_addRiskyTest", "name": "PHPUnit_Util_Log_JSON::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JSON", "fromLink": "PHPUnit_Util_Log_JSON.html", "link": "PHPUnit_Util_Log_JSON.html#method_addSkippedTest", "name": "PHPUnit_Util_Log_JSON::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JSON", "fromLink": "PHPUnit_Util_Log_JSON.html", "link": "PHPUnit_Util_Log_JSON.html#method_startTestSuite", "name": "PHPUnit_Util_Log_JSON::startTestSuite", "doc": "&quot;A testsuite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JSON", "fromLink": "PHPUnit_Util_Log_JSON.html", "link": "PHPUnit_Util_Log_JSON.html#method_endTestSuite", "name": "PHPUnit_Util_Log_JSON::endTestSuite", "doc": "&quot;A testsuite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JSON", "fromLink": "PHPUnit_Util_Log_JSON.html", "link": "PHPUnit_Util_Log_JSON.html#method_startTest", "name": "PHPUnit_Util_Log_JSON::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JSON", "fromLink": "PHPUnit_Util_Log_JSON.html", "link": "PHPUnit_Util_Log_JSON.html#method_endTest", "name": "PHPUnit_Util_Log_JSON::endTest", "doc": "&quot;A test ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JSON", "fromLink": "PHPUnit_Util_Log_JSON.html", "link": "PHPUnit_Util_Log_JSON.html#method_writeCase", "name": "PHPUnit_Util_Log_JSON::writeCase", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JSON", "fromLink": "PHPUnit_Util_Log_JSON.html", "link": "PHPUnit_Util_Log_JSON.html#method_write", "name": "PHPUnit_Util_Log_JSON::write", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Log_JUnit.html", "name": "PHPUnit_Util_Log_JUnit", "doc": "&quot;A TestListener that generates a logfile of the test execution in XML markup.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method___construct", "name": "PHPUnit_Util_Log_JUnit::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method_flush", "name": "PHPUnit_Util_Log_JUnit::flush", "doc": "&quot;Flush buffer and close output.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method_addError", "name": "PHPUnit_Util_Log_JUnit::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method_addWarning", "name": "PHPUnit_Util_Log_JUnit::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method_addFailure", "name": "PHPUnit_Util_Log_JUnit::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method_addIncompleteTest", "name": "PHPUnit_Util_Log_JUnit::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method_addRiskyTest", "name": "PHPUnit_Util_Log_JUnit::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method_addSkippedTest", "name": "PHPUnit_Util_Log_JUnit::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method_startTestSuite", "name": "PHPUnit_Util_Log_JUnit::startTestSuite", "doc": "&quot;A testsuite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method_endTestSuite", "name": "PHPUnit_Util_Log_JUnit::endTestSuite", "doc": "&quot;A testsuite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method_startTest", "name": "PHPUnit_Util_Log_JUnit::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method_endTest", "name": "PHPUnit_Util_Log_JUnit::endTest", "doc": "&quot;A test ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method_getXML", "name": "PHPUnit_Util_Log_JUnit::getXML", "doc": "&quot;Returns the XML as a string.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_JUnit", "fromLink": "PHPUnit_Util_Log_JUnit.html", "link": "PHPUnit_Util_Log_JUnit.html#method_setWriteDocument", "name": "PHPUnit_Util_Log_JUnit::setWriteDocument", "doc": "&quot;Enables or disables the writing of the document\nin flush().&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Log_TAP.html", "name": "PHPUnit_Util_Log_TAP", "doc": "&quot;A TestListener that generates a logfile of the\ntest execution using the Test Anything Protocol (TAP).&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Log_TAP", "fromLink": "PHPUnit_Util_Log_TAP.html", "link": "PHPUnit_Util_Log_TAP.html#method___construct", "name": "PHPUnit_Util_Log_TAP::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TAP", "fromLink": "PHPUnit_Util_Log_TAP.html", "link": "PHPUnit_Util_Log_TAP.html#method_addError", "name": "PHPUnit_Util_Log_TAP::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TAP", "fromLink": "PHPUnit_Util_Log_TAP.html", "link": "PHPUnit_Util_Log_TAP.html#method_addWarning", "name": "PHPUnit_Util_Log_TAP::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TAP", "fromLink": "PHPUnit_Util_Log_TAP.html", "link": "PHPUnit_Util_Log_TAP.html#method_addFailure", "name": "PHPUnit_Util_Log_TAP::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TAP", "fromLink": "PHPUnit_Util_Log_TAP.html", "link": "PHPUnit_Util_Log_TAP.html#method_addIncompleteTest", "name": "PHPUnit_Util_Log_TAP::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TAP", "fromLink": "PHPUnit_Util_Log_TAP.html", "link": "PHPUnit_Util_Log_TAP.html#method_addRiskyTest", "name": "PHPUnit_Util_Log_TAP::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TAP", "fromLink": "PHPUnit_Util_Log_TAP.html", "link": "PHPUnit_Util_Log_TAP.html#method_addSkippedTest", "name": "PHPUnit_Util_Log_TAP::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TAP", "fromLink": "PHPUnit_Util_Log_TAP.html", "link": "PHPUnit_Util_Log_TAP.html#method_startTestSuite", "name": "PHPUnit_Util_Log_TAP::startTestSuite", "doc": "&quot;A testsuite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TAP", "fromLink": "PHPUnit_Util_Log_TAP.html", "link": "PHPUnit_Util_Log_TAP.html#method_endTestSuite", "name": "PHPUnit_Util_Log_TAP::endTestSuite", "doc": "&quot;A testsuite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TAP", "fromLink": "PHPUnit_Util_Log_TAP.html", "link": "PHPUnit_Util_Log_TAP.html#method_startTest", "name": "PHPUnit_Util_Log_TAP::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TAP", "fromLink": "PHPUnit_Util_Log_TAP.html", "link": "PHPUnit_Util_Log_TAP.html#method_endTest", "name": "PHPUnit_Util_Log_TAP::endTest", "doc": "&quot;A test ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TAP", "fromLink": "PHPUnit_Util_Log_TAP.html", "link": "PHPUnit_Util_Log_TAP.html#method_writeNotOk", "name": "PHPUnit_Util_Log_TAP::writeNotOk", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Log_TeamCity.html", "name": "PHPUnit_Util_Log_TeamCity", "doc": "&quot;A TestListener that generates a logfile of the test execution using the\nTeamCity format (for use with PhpStorm, for instance).&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Log_TeamCity", "fromLink": "PHPUnit_Util_Log_TeamCity.html", "link": "PHPUnit_Util_Log_TeamCity.html#method_writeProgress", "name": "PHPUnit_Util_Log_TeamCity::writeProgress", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TeamCity", "fromLink": "PHPUnit_Util_Log_TeamCity.html", "link": "PHPUnit_Util_Log_TeamCity.html#method_printResult", "name": "PHPUnit_Util_Log_TeamCity::printResult", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TeamCity", "fromLink": "PHPUnit_Util_Log_TeamCity.html", "link": "PHPUnit_Util_Log_TeamCity.html#method_addError", "name": "PHPUnit_Util_Log_TeamCity::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TeamCity", "fromLink": "PHPUnit_Util_Log_TeamCity.html", "link": "PHPUnit_Util_Log_TeamCity.html#method_addWarning", "name": "PHPUnit_Util_Log_TeamCity::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TeamCity", "fromLink": "PHPUnit_Util_Log_TeamCity.html", "link": "PHPUnit_Util_Log_TeamCity.html#method_addFailure", "name": "PHPUnit_Util_Log_TeamCity::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TeamCity", "fromLink": "PHPUnit_Util_Log_TeamCity.html", "link": "PHPUnit_Util_Log_TeamCity.html#method_addIncompleteTest", "name": "PHPUnit_Util_Log_TeamCity::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TeamCity", "fromLink": "PHPUnit_Util_Log_TeamCity.html", "link": "PHPUnit_Util_Log_TeamCity.html#method_addRiskyTest", "name": "PHPUnit_Util_Log_TeamCity::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TeamCity", "fromLink": "PHPUnit_Util_Log_TeamCity.html", "link": "PHPUnit_Util_Log_TeamCity.html#method_addSkippedTest", "name": "PHPUnit_Util_Log_TeamCity::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TeamCity", "fromLink": "PHPUnit_Util_Log_TeamCity.html", "link": "PHPUnit_Util_Log_TeamCity.html#method_printIgnoredTest", "name": "PHPUnit_Util_Log_TeamCity::printIgnoredTest", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TeamCity", "fromLink": "PHPUnit_Util_Log_TeamCity.html", "link": "PHPUnit_Util_Log_TeamCity.html#method_startTestSuite", "name": "PHPUnit_Util_Log_TeamCity::startTestSuite", "doc": "&quot;A testsuite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TeamCity", "fromLink": "PHPUnit_Util_Log_TeamCity.html", "link": "PHPUnit_Util_Log_TeamCity.html#method_endTestSuite", "name": "PHPUnit_Util_Log_TeamCity::endTestSuite", "doc": "&quot;A testsuite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TeamCity", "fromLink": "PHPUnit_Util_Log_TeamCity.html", "link": "PHPUnit_Util_Log_TeamCity.html#method_startTest", "name": "PHPUnit_Util_Log_TeamCity::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Log_TeamCity", "fromLink": "PHPUnit_Util_Log_TeamCity.html", "link": "PHPUnit_Util_Log_TeamCity.html#method_endTest", "name": "PHPUnit_Util_Log_TeamCity::endTest", "doc": "&quot;A test ended.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_PHP.html", "name": "PHPUnit_Util_PHP", "doc": "&quot;Utility methods for PHP sub-processes.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method___construct", "name": "PHPUnit_Util_PHP::__construct", "doc": "&quot;Creates internal Runtime instance.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_setUseStderrRedirection", "name": "PHPUnit_Util_PHP::setUseStderrRedirection", "doc": "&quot;Defines if should use STDERR redirection or not.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_useStderrRedirection", "name": "PHPUnit_Util_PHP::useStderrRedirection", "doc": "&quot;Returns TRUE if uses STDERR redirection or FALSE if not.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_setStdin", "name": "PHPUnit_Util_PHP::setStdin", "doc": "&quot;Sets the input string to be sent via STDIN&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_getStdin", "name": "PHPUnit_Util_PHP::getStdin", "doc": "&quot;Returns the input string to be sent via STDIN&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_setArgs", "name": "PHPUnit_Util_PHP::setArgs", "doc": "&quot;Sets the string of arguments to pass to the php job&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_getArgs", "name": "PHPUnit_Util_PHP::getArgs", "doc": "&quot;Returns the string of arguments to pass to the php job&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_setEnv", "name": "PHPUnit_Util_PHP::setEnv", "doc": "&quot;Sets the array of environment variables to start the child process with&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_getEnv", "name": "PHPUnit_Util_PHP::getEnv", "doc": "&quot;Returns the array of environment variables to start the child process with&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_setTimeout", "name": "PHPUnit_Util_PHP::setTimeout", "doc": "&quot;Sets the amount of seconds to wait before timing out&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_getTimeout", "name": "PHPUnit_Util_PHP::getTimeout", "doc": "&quot;Returns the amount of seconds to wait before timing out&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_factory", "name": "PHPUnit_Util_PHP::factory", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_runTestJob", "name": "PHPUnit_Util_PHP::runTestJob", "doc": "&quot;Runs a single test in a separate PHP process.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_getCommand", "name": "PHPUnit_Util_PHP::getCommand", "doc": "&quot;Returns the command based into the configurations.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_runJob", "name": "PHPUnit_Util_PHP::runJob", "doc": "&quot;Runs a single job (PHP code) using a separate PHP process.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP", "fromLink": "PHPUnit_Util_PHP.html", "link": "PHPUnit_Util_PHP.html#method_settingsToParameters", "name": "PHPUnit_Util_PHP::settingsToParameters", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_PHP_Default.html", "name": "PHPUnit_Util_PHP_Default", "doc": "&quot;Default utility for PHP sub-processes.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_PHP_Default", "fromLink": "PHPUnit_Util_PHP_Default.html", "link": "PHPUnit_Util_PHP_Default.html#method_runJob", "name": "PHPUnit_Util_PHP_Default::runJob", "doc": "&quot;Runs a single job (PHP code) using a separate PHP process.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP_Default", "fromLink": "PHPUnit_Util_PHP_Default.html", "link": "PHPUnit_Util_PHP_Default.html#method_getHandles", "name": "PHPUnit_Util_PHP_Default::getHandles", "doc": "&quot;Returns an array of file handles to be used in place of pipes&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP_Default", "fromLink": "PHPUnit_Util_PHP_Default.html", "link": "PHPUnit_Util_PHP_Default.html#method_runProcess", "name": "PHPUnit_Util_PHP_Default::runProcess", "doc": "&quot;Handles creating the child process and returning the STDOUT and STDERR&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP_Default", "fromLink": "PHPUnit_Util_PHP_Default.html", "link": "PHPUnit_Util_PHP_Default.html#method_process", "name": "PHPUnit_Util_PHP_Default::process", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP_Default", "fromLink": "PHPUnit_Util_PHP_Default.html", "link": "PHPUnit_Util_PHP_Default.html#method_cleanup", "name": "PHPUnit_Util_PHP_Default::cleanup", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_PHP_Windows.html", "name": "PHPUnit_Util_PHP_Windows", "doc": "&quot;Windows utility for PHP sub-processes.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_PHP_Windows", "fromLink": "PHPUnit_Util_PHP_Windows.html", "link": "PHPUnit_Util_PHP_Windows.html#method_getHandles", "name": "PHPUnit_Util_PHP_Windows::getHandles", "doc": "&quot;Returns an array of file handles to be used in place of pipes&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_PHP_Windows", "fromLink": "PHPUnit_Util_PHP_Windows.html", "link": "PHPUnit_Util_PHP_Windows.html#method_getCommand", "name": "PHPUnit_Util_PHP_Windows::getCommand", "doc": "&quot;Returns the command based into the configurations.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Printer.html", "name": "PHPUnit_Util_Printer", "doc": "&quot;Utility class that can print to STDOUT or write to a file.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Printer", "fromLink": "PHPUnit_Util_Printer.html", "link": "PHPUnit_Util_Printer.html#method___construct", "name": "PHPUnit_Util_Printer::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Printer", "fromLink": "PHPUnit_Util_Printer.html", "link": "PHPUnit_Util_Printer.html#method_flush", "name": "PHPUnit_Util_Printer::flush", "doc": "&quot;Flush buffer and close output if it&#039;s not to a PHP stream&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Printer", "fromLink": "PHPUnit_Util_Printer.html", "link": "PHPUnit_Util_Printer.html#method_incrementalFlush", "name": "PHPUnit_Util_Printer::incrementalFlush", "doc": "&quot;Performs a safe, incremental flush.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Printer", "fromLink": "PHPUnit_Util_Printer.html", "link": "PHPUnit_Util_Printer.html#method_write", "name": "PHPUnit_Util_Printer::write", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Printer", "fromLink": "PHPUnit_Util_Printer.html", "link": "PHPUnit_Util_Printer.html#method_getAutoFlush", "name": "PHPUnit_Util_Printer::getAutoFlush", "doc": "&quot;Check auto-flush mode.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Printer", "fromLink": "PHPUnit_Util_Printer.html", "link": "PHPUnit_Util_Printer.html#method_setAutoFlush", "name": "PHPUnit_Util_Printer::setAutoFlush", "doc": "&quot;Set auto-flushing mode.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Regex.html", "name": "PHPUnit_Util_Regex", "doc": "&quot;Error handler that converts PHP errors and warnings to exceptions.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Regex", "fromLink": "PHPUnit_Util_Regex.html", "link": "PHPUnit_Util_Regex.html#method_pregMatchSafe", "name": "PHPUnit_Util_Regex::pregMatchSafe", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_String.html", "name": "PHPUnit_Util_String", "doc": "&quot;String helpers.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_String", "fromLink": "PHPUnit_Util_String.html", "link": "PHPUnit_Util_String.html#method_convertToUtf8", "name": "PHPUnit_Util_String::convertToUtf8", "doc": "&quot;Converts a string to UTF-8 encoding.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_String", "fromLink": "PHPUnit_Util_String.html", "link": "PHPUnit_Util_String.html#method_isUtf8", "name": "PHPUnit_Util_String::isUtf8", "doc": "&quot;Checks a string for UTF-8 encoding.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Test.html", "name": "PHPUnit_Util_Test", "doc": "&quot;Test helpers.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_describe", "name": "PHPUnit_Util_Test::describe", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getLinesToBeCovered", "name": "PHPUnit_Util_Test::getLinesToBeCovered", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getLinesToBeUsed", "name": "PHPUnit_Util_Test::getLinesToBeUsed", "doc": "&quot;Returns lines of code specified with the @uses annotation.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getRequirements", "name": "PHPUnit_Util_Test::getRequirements", "doc": "&quot;Returns the requirements for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getMissingRequirements", "name": "PHPUnit_Util_Test::getMissingRequirements", "doc": "&quot;Returns the missing requirements for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getExpectedException", "name": "PHPUnit_Util_Test::getExpectedException", "doc": "&quot;Returns the expected exception for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getProvidedData", "name": "PHPUnit_Util_Test::getProvidedData", "doc": "&quot;Returns the provided data for a method.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getDataFromTestWithAnnotation", "name": "PHPUnit_Util_Test::getDataFromTestWithAnnotation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_parseTestMethodAnnotations", "name": "PHPUnit_Util_Test::parseTestMethodAnnotations", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getInlineAnnotations", "name": "PHPUnit_Util_Test::getInlineAnnotations", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getBackupSettings", "name": "PHPUnit_Util_Test::getBackupSettings", "doc": "&quot;Returns the backup settings for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getDependencies", "name": "PHPUnit_Util_Test::getDependencies", "doc": "&quot;Returns the dependencies for a test class or method.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getErrorHandlerSettings", "name": "PHPUnit_Util_Test::getErrorHandlerSettings", "doc": "&quot;Returns the error handler settings for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getGroups", "name": "PHPUnit_Util_Test::getGroups", "doc": "&quot;Returns the groups for a test class or method.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getSize", "name": "PHPUnit_Util_Test::getSize", "doc": "&quot;Returns the size of the test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getTickets", "name": "PHPUnit_Util_Test::getTickets", "doc": "&quot;Returns the tickets for a test class or method.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getProcessIsolationSettings", "name": "PHPUnit_Util_Test::getProcessIsolationSettings", "doc": "&quot;Returns the process isolation settings for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getPreserveGlobalStateSettings", "name": "PHPUnit_Util_Test::getPreserveGlobalStateSettings", "doc": "&quot;Returns the preserve global state settings for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_Test", "fromLink": "PHPUnit_Util_Test.html", "link": "PHPUnit_Util_Test.html#method_getHookMethods", "name": "PHPUnit_Util_Test::getHookMethods", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_TestDox_NamePrettifier.html", "name": "PHPUnit_Util_TestDox_NamePrettifier", "doc": "&quot;Prettifies class and method names for use in TestDox documentation.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_TestDox_NamePrettifier", "fromLink": "PHPUnit_Util_TestDox_NamePrettifier.html", "link": "PHPUnit_Util_TestDox_NamePrettifier.html#method_prettifyTestClass", "name": "PHPUnit_Util_TestDox_NamePrettifier::prettifyTestClass", "doc": "&quot;Prettifies the name of a test class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_NamePrettifier", "fromLink": "PHPUnit_Util_TestDox_NamePrettifier.html", "link": "PHPUnit_Util_TestDox_NamePrettifier.html#method_prettifyTestMethod", "name": "PHPUnit_Util_TestDox_NamePrettifier::prettifyTestMethod", "doc": "&quot;Prettifies the name of a test method.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_NamePrettifier", "fromLink": "PHPUnit_Util_TestDox_NamePrettifier.html", "link": "PHPUnit_Util_TestDox_NamePrettifier.html#method_setPrefix", "name": "PHPUnit_Util_TestDox_NamePrettifier::setPrefix", "doc": "&quot;Sets the prefix of test names.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_NamePrettifier", "fromLink": "PHPUnit_Util_TestDox_NamePrettifier.html", "link": "PHPUnit_Util_TestDox_NamePrettifier.html#method_setSuffix", "name": "PHPUnit_Util_TestDox_NamePrettifier::setSuffix", "doc": "&quot;Sets the suffix of test names.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_TestDox_ResultPrinter.html", "name": "PHPUnit_Util_TestDox_ResultPrinter", "doc": "&quot;Base class for printers of TestDox documentation.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method___construct", "name": "PHPUnit_Util_TestDox_ResultPrinter::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_flush", "name": "PHPUnit_Util_TestDox_ResultPrinter::flush", "doc": "&quot;Flush buffer and close output.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_addError", "name": "PHPUnit_Util_TestDox_ResultPrinter::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_addWarning", "name": "PHPUnit_Util_TestDox_ResultPrinter::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_addFailure", "name": "PHPUnit_Util_TestDox_ResultPrinter::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_addIncompleteTest", "name": "PHPUnit_Util_TestDox_ResultPrinter::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_addRiskyTest", "name": "PHPUnit_Util_TestDox_ResultPrinter::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_addSkippedTest", "name": "PHPUnit_Util_TestDox_ResultPrinter::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_startTestSuite", "name": "PHPUnit_Util_TestDox_ResultPrinter::startTestSuite", "doc": "&quot;A testsuite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_endTestSuite", "name": "PHPUnit_Util_TestDox_ResultPrinter::endTestSuite", "doc": "&quot;A testsuite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_startTest", "name": "PHPUnit_Util_TestDox_ResultPrinter::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_endTest", "name": "PHPUnit_Util_TestDox_ResultPrinter::endTest", "doc": "&quot;A test ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_doEndClass", "name": "PHPUnit_Util_TestDox_ResultPrinter::doEndClass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_startRun", "name": "PHPUnit_Util_TestDox_ResultPrinter::startRun", "doc": "&quot;Handler for &#039;start run&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_startClass", "name": "PHPUnit_Util_TestDox_ResultPrinter::startClass", "doc": "&quot;Handler for &#039;start class&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_onTest", "name": "PHPUnit_Util_TestDox_ResultPrinter::onTest", "doc": "&quot;Handler for &#039;on test&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_endClass", "name": "PHPUnit_Util_TestDox_ResultPrinter::endClass", "doc": "&quot;Handler for &#039;end class&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter.html", "link": "PHPUnit_Util_TestDox_ResultPrinter.html#method_endRun", "name": "PHPUnit_Util_TestDox_ResultPrinter::endRun", "doc": "&quot;Handler for &#039;end run&#039; event.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_TestDox_ResultPrinter_HTML.html", "name": "PHPUnit_Util_TestDox_ResultPrinter_HTML", "doc": "&quot;Prints TestDox documentation in HTML format.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_HTML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_HTML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_HTML.html#method_startRun", "name": "PHPUnit_Util_TestDox_ResultPrinter_HTML::startRun", "doc": "&quot;Handler for &#039;start run&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_HTML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_HTML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_HTML.html#method_startClass", "name": "PHPUnit_Util_TestDox_ResultPrinter_HTML::startClass", "doc": "&quot;Handler for &#039;start class&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_HTML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_HTML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_HTML.html#method_onTest", "name": "PHPUnit_Util_TestDox_ResultPrinter_HTML::onTest", "doc": "&quot;Handler for &#039;on test&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_HTML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_HTML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_HTML.html#method_endClass", "name": "PHPUnit_Util_TestDox_ResultPrinter_HTML::endClass", "doc": "&quot;Handler for &#039;end class&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_HTML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_HTML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_HTML.html#method_endRun", "name": "PHPUnit_Util_TestDox_ResultPrinter_HTML::endRun", "doc": "&quot;Handler for &#039;end run&#039; event.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_TestDox_ResultPrinter_Text.html", "name": "PHPUnit_Util_TestDox_ResultPrinter_Text", "doc": "&quot;Prints TestDox documentation in text format.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_Text", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_Text.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_Text.html#method_startClass", "name": "PHPUnit_Util_TestDox_ResultPrinter_Text::startClass", "doc": "&quot;Handler for &#039;start class&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_Text", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_Text.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_Text.html#method_onTest", "name": "PHPUnit_Util_TestDox_ResultPrinter_Text::onTest", "doc": "&quot;Handler for &#039;on test&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_Text", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_Text.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_Text.html#method_endClass", "name": "PHPUnit_Util_TestDox_ResultPrinter_Text::endClass", "doc": "&quot;Handler for &#039;end class&#039; event.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_TestDox_ResultPrinter_XML.html", "name": "PHPUnit_Util_TestDox_ResultPrinter_XML", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_XML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_XML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_XML.html#method___construct", "name": "PHPUnit_Util_TestDox_ResultPrinter_XML::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_XML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_XML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_XML.html#method_flush", "name": "PHPUnit_Util_TestDox_ResultPrinter_XML::flush", "doc": "&quot;Flush buffer and close output.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_XML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_XML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_XML.html#method_addError", "name": "PHPUnit_Util_TestDox_ResultPrinter_XML::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_XML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_XML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_XML.html#method_addWarning", "name": "PHPUnit_Util_TestDox_ResultPrinter_XML::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_XML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_XML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_XML.html#method_addFailure", "name": "PHPUnit_Util_TestDox_ResultPrinter_XML::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_XML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_XML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_XML.html#method_addIncompleteTest", "name": "PHPUnit_Util_TestDox_ResultPrinter_XML::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_XML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_XML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_XML.html#method_addRiskyTest", "name": "PHPUnit_Util_TestDox_ResultPrinter_XML::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_XML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_XML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_XML.html#method_addSkippedTest", "name": "PHPUnit_Util_TestDox_ResultPrinter_XML::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_XML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_XML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_XML.html#method_startTestSuite", "name": "PHPUnit_Util_TestDox_ResultPrinter_XML::startTestSuite", "doc": "&quot;A test suite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_XML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_XML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_XML.html#method_endTestSuite", "name": "PHPUnit_Util_TestDox_ResultPrinter_XML::endTestSuite", "doc": "&quot;A test suite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_XML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_XML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_XML.html#method_startTest", "name": "PHPUnit_Util_TestDox_ResultPrinter_XML::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestDox_ResultPrinter_XML", "fromLink": "PHPUnit_Util_TestDox_ResultPrinter_XML.html", "link": "PHPUnit_Util_TestDox_ResultPrinter_XML.html#method_endTest", "name": "PHPUnit_Util_TestDox_ResultPrinter_XML::endTest", "doc": "&quot;A test ended.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_TestSuiteIterator.html", "name": "PHPUnit_Util_TestSuiteIterator", "doc": "&quot;Iterator for test suites.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_TestSuiteIterator", "fromLink": "PHPUnit_Util_TestSuiteIterator.html", "link": "PHPUnit_Util_TestSuiteIterator.html#method___construct", "name": "PHPUnit_Util_TestSuiteIterator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestSuiteIterator", "fromLink": "PHPUnit_Util_TestSuiteIterator.html", "link": "PHPUnit_Util_TestSuiteIterator.html#method_rewind", "name": "PHPUnit_Util_TestSuiteIterator::rewind", "doc": "&quot;Rewinds the Iterator to the first element.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestSuiteIterator", "fromLink": "PHPUnit_Util_TestSuiteIterator.html", "link": "PHPUnit_Util_TestSuiteIterator.html#method_valid", "name": "PHPUnit_Util_TestSuiteIterator::valid", "doc": "&quot;Checks if there is a current element after calls to rewind() or next().&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestSuiteIterator", "fromLink": "PHPUnit_Util_TestSuiteIterator.html", "link": "PHPUnit_Util_TestSuiteIterator.html#method_key", "name": "PHPUnit_Util_TestSuiteIterator::key", "doc": "&quot;Returns the key of the current element.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestSuiteIterator", "fromLink": "PHPUnit_Util_TestSuiteIterator.html", "link": "PHPUnit_Util_TestSuiteIterator.html#method_current", "name": "PHPUnit_Util_TestSuiteIterator::current", "doc": "&quot;Returns the current element.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestSuiteIterator", "fromLink": "PHPUnit_Util_TestSuiteIterator.html", "link": "PHPUnit_Util_TestSuiteIterator.html#method_next", "name": "PHPUnit_Util_TestSuiteIterator::next", "doc": "&quot;Moves forward to next element.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestSuiteIterator", "fromLink": "PHPUnit_Util_TestSuiteIterator.html", "link": "PHPUnit_Util_TestSuiteIterator.html#method_getChildren", "name": "PHPUnit_Util_TestSuiteIterator::getChildren", "doc": "&quot;Returns the sub iterator for the current element.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_TestSuiteIterator", "fromLink": "PHPUnit_Util_TestSuiteIterator.html", "link": "PHPUnit_Util_TestSuiteIterator.html#method_hasChildren", "name": "PHPUnit_Util_TestSuiteIterator::hasChildren", "doc": "&quot;Checks whether the current element has children.&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_Type.html", "name": "PHPUnit_Util_Type", "doc": "&quot;Utility class for textual type (and value) representation.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_Type", "fromLink": "PHPUnit_Util_Type.html", "link": "PHPUnit_Util_Type.html#method_isType", "name": "PHPUnit_Util_Type::isType", "doc": "&quot;&quot;"},
            
            {"type": "Class",  "link": "PHPUnit_Util_XML.html", "name": "PHPUnit_Util_XML", "doc": "&quot;XML helpers.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit_Util_XML", "fromLink": "PHPUnit_Util_XML.html", "link": "PHPUnit_Util_XML.html#method_load", "name": "PHPUnit_Util_XML::load", "doc": "&quot;Load an $actual document into a DOMDocument.  This is called\nfrom the selector assertions.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_XML", "fromLink": "PHPUnit_Util_XML.html", "link": "PHPUnit_Util_XML.html#method_loadFile", "name": "PHPUnit_Util_XML::loadFile", "doc": "&quot;Loads an XML (or HTML) file into a DOMDocument object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_XML", "fromLink": "PHPUnit_Util_XML.html", "link": "PHPUnit_Util_XML.html#method_removeCharacterDataNodes", "name": "PHPUnit_Util_XML::removeCharacterDataNodes", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_XML", "fromLink": "PHPUnit_Util_XML.html", "link": "PHPUnit_Util_XML.html#method_prepareString", "name": "PHPUnit_Util_XML::prepareString", "doc": "&quot;Escapes a string for the use in XML documents\nAny Unicode character is allowed, excluding the surrogate blocks, FFFE,\nand FFFF (not even as character reference).&quot;"},
                    {"type": "Method", "fromName": "PHPUnit_Util_XML", "fromLink": "PHPUnit_Util_XML.html", "link": "PHPUnit_Util_XML.html#method_xmlToVariable", "name": "PHPUnit_Util_XML::xmlToVariable", "doc": "&quot;\&quot;Convert\&quot; a DOMElement object into a PHP variable.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


