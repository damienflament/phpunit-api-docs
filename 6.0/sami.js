
window.projectVersion = '6.0';

(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '        <ul>                <li data-name="namespace:" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span>[Global Namespace]                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Framework_Assert" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit/Framework/Assert.html">Assert</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_BaseTestListener" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit/Framework/BaseTestListener.html">BaseTestListener</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_TestCase" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit/Framework/TestCase.html">TestCase</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_TestListener" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit/Framework/TestListener.html">TestListener</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span>PHPUnit                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Extensions                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Extensions_GroupTestSuite" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Extensions_GroupTestSuite.html">GroupTestSuite</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Extensions_PhptTestCase" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Extensions_PhptTestCase.html">PhptTestCase</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Extensions_PhptTestSuite" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Extensions_PhptTestSuite.html">PhptTestSuite</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Extensions_RepeatedTest" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Extensions_RepeatedTest.html">RepeatedTest</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Extensions_TestDecorator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Extensions_TestDecorator.html">TestDecorator</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Extensions_TicketListener" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Extensions_TicketListener.html">TicketListener</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Framework                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Constraint                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span>JsonMatches                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_JsonMatches_ErrorMessageProvider.html">ErrorMessageProvider</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_And" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_And.html">And</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ArrayHasKey" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ArrayHasKey.html">ArrayHasKey</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ArraySubset" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ArraySubset.html">ArraySubset</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Attribute" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Attribute.html">Attribute</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Callback" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Callback.html">Callback</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ClassHasAttribute" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ClassHasAttribute.html">ClassHasAttribute</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ClassHasStaticAttribute" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ClassHasStaticAttribute.html">ClassHasStaticAttribute</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Composite" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Composite.html">Composite</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Count" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Count.html">Count</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_DirectoryExists" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_DirectoryExists.html">DirectoryExists</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Exception" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Exception.html">Exception</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ExceptionCode" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ExceptionCode.html">ExceptionCode</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ExceptionMessage" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ExceptionMessage.html">ExceptionMessage</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ExceptionMessageRegExp" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ExceptionMessageRegExp.html">ExceptionMessageRegExp</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_FileExists" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_FileExists.html">FileExists</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_GreaterThan" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_GreaterThan.html">GreaterThan</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsAnything" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsAnything.html">IsAnything</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsEmpty" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsEmpty.html">IsEmpty</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsEqual" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsEqual.html">IsEqual</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsFalse" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsFalse.html">IsFalse</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsFinite" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsFinite.html">IsFinite</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsIdentical" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsIdentical.html">IsIdentical</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsInfinite" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsInfinite.html">IsInfinite</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsInstanceOf" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsInstanceOf.html">IsInstanceOf</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsJson" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsJson.html">IsJson</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsNan" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsNan.html">IsNan</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsNull" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsNull.html">IsNull</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsReadable" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsReadable.html">IsReadable</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsTrue" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsTrue.html">IsTrue</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsType" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsType.html">IsType</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_IsWritable" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_IsWritable.html">IsWritable</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_JsonMatches" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_JsonMatches.html">JsonMatches</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_LessThan" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_LessThan.html">LessThan</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Not" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Not.html">Not</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_ObjectHasAttribute" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_ObjectHasAttribute.html">ObjectHasAttribute</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Or" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Or.html">Or</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_PCREMatch" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_PCREMatch.html">PCREMatch</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_SameSize" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_SameSize.html">SameSize</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_StringContains" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_StringContains.html">StringContains</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_StringEndsWith" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_StringEndsWith.html">StringEndsWith</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_StringMatches" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_StringMatches.html">StringMatches</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_StringStartsWith" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_StringStartsWith.html">StringStartsWith</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_TraversableContains" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_TraversableContains.html">TraversableContains</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_TraversableContainsOnly" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_TraversableContainsOnly.html">TraversableContainsOnly</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint_Xor" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint_Xor.html">Xor</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Error                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Framework_Error_Deprecated" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Error_Deprecated.html">Deprecated</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Error_Notice" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Error_Notice.html">Notice</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Error_Warning" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_Error_Warning.html">Warning</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span>TestSuite                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Framework_TestSuite_DataProvider" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Framework_TestSuite_DataProvider.html">DataProvider</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:PHPUnit_Framework_Assert" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_Assert.html">Assert</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_AssertionFailedError" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_AssertionFailedError.html">AssertionFailedError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_BaseTestListener" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_BaseTestListener.html">BaseTestListener</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_CodeCoverageException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_CodeCoverageException.html">CodeCoverageException</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Constraint" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_Constraint.html">Constraint</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_CoveredCodeNotExecutedException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_CoveredCodeNotExecutedException.html">CoveredCodeNotExecutedException</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Error" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_Error.html">Error</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Exception" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_Exception.html">Exception</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_ExceptionWrapper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_ExceptionWrapper.html">ExceptionWrapper</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_ExpectationFailedException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_ExpectationFailedException.html">ExpectationFailedException</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_IncompleteTest" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_IncompleteTest.html">IncompleteTest</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_IncompleteTestCase" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_IncompleteTestCase.html">IncompleteTestCase</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_IncompleteTestError" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_IncompleteTestError.html">IncompleteTestError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_InvalidCoversTargetException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_InvalidCoversTargetException.html">InvalidCoversTargetException</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_MissingCoversAnnotationException" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_MissingCoversAnnotationException.html">MissingCoversAnnotationException</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_OutputError" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_OutputError.html">OutputError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_RiskyTest" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_RiskyTest.html">RiskyTest</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_RiskyTestError" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_RiskyTestError.html">RiskyTestError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_SelfDescribing" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_SelfDescribing.html">SelfDescribing</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_SkippedTest" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_SkippedTest.html">SkippedTest</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_SkippedTestCase" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_SkippedTestCase.html">SkippedTestCase</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_SkippedTestError" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_SkippedTestError.html">SkippedTestError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_SkippedTestSuiteError" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_SkippedTestSuiteError.html">SkippedTestSuiteError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_SyntheticError" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_SyntheticError.html">SyntheticError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Test" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_Test.html">Test</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_TestCase" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_TestCase.html">TestCase</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_TestFailure" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_TestFailure.html">TestFailure</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_TestListener" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_TestListener.html">TestListener</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_TestResult" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_TestResult.html">TestResult</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_TestSuite" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_TestSuite.html">TestSuite</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_UnintentionallyCoveredCodeError" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_UnintentionallyCoveredCodeError.html">UnintentionallyCoveredCodeError</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_Warning" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_Warning.html">Warning</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Framework_WarningTestCase" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Framework_WarningTestCase.html">WarningTestCase</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Runner                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Filter                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Group                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Runner_Filter_Group_Exclude" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Runner_Filter_Group_Exclude.html">Exclude</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_Filter_Group_Include" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Runner_Filter_Group_Include.html">Include</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:PHPUnit_Runner_Filter_Factory" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Runner_Filter_Factory.html">Factory</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_Filter_GroupFilterIterator" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Runner_Filter_GroupFilterIterator.html">GroupFilterIterator</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_Filter_Test" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Runner_Filter_Test.html">Test</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:PHPUnit_Runner_BaseTestRunner" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Runner_BaseTestRunner.html">BaseTestRunner</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_Exception" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Runner_Exception.html">Exception</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_StandardTestSuiteLoader" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Runner_StandardTestSuiteLoader.html">StandardTestSuiteLoader</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_TestSuiteLoader" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Runner_TestSuiteLoader.html">TestSuiteLoader</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Runner_Version" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Runner_Version.html">Version</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span>TextUI                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_TextUI_Command" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_TextUI_Command.html">Command</a>                    </div>                </li>                            <li data-name="class:PHPUnit_TextUI_ResultPrinter" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_TextUI_ResultPrinter.html">ResultPrinter</a>                    </div>                </li>                            <li data-name="class:PHPUnit_TextUI_TestRunner" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_TextUI_TestRunner.html">TestRunner</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Util                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span>Log                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Util_Log_JSON" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Util_Log_JSON.html">JSON</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Log_JUnit" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Util_Log_JUnit.html">JUnit</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Log_TAP" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Util_Log_TAP.html">TAP</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Log_TeamCity" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Util_Log_TeamCity.html">TeamCity</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span>PHP                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Util_PHP_Default" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Util_PHP_Default.html">Default</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_PHP_Windows" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Util_PHP_Windows.html">Windows</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span>TestDox                    </div>                    <div class="bd">                                <ul>                <li data-name="namespace:" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span>ResultPrinter                    </div>                    <div class="bd">                                <ul>                <li data-name="class:PHPUnit_Util_TestDox_ResultPrinter_HTML" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Util_TestDox_ResultPrinter_HTML.html">HTML</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_TestDox_ResultPrinter_Text" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Util_TestDox_ResultPrinter_Text.html">Text</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_TestDox_ResultPrinter_XML" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="PHPUnit_Util_TestDox_ResultPrinter_XML.html">XML</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:PHPUnit_Util_TestDox_NamePrettifier" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Util_TestDox_NamePrettifier.html">NamePrettifier</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_TestDox_ResultPrinter" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="PHPUnit_Util_TestDox_ResultPrinter.html">ResultPrinter</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:PHPUnit_Util_Blacklist" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_Blacklist.html">Blacklist</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Configuration" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_Configuration.html">Configuration</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_ConfigurationGenerator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_ConfigurationGenerator.html">ConfigurationGenerator</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_ErrorHandler" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_ErrorHandler.html">ErrorHandler</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Fileloader" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_Fileloader.html">Fileloader</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Filesystem" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_Filesystem.html">Filesystem</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Filter" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_Filter.html">Filter</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Getopt" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_Getopt.html">Getopt</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_GlobalState" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_GlobalState.html">GlobalState</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_InvalidArgumentHelper" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_InvalidArgumentHelper.html">InvalidArgumentHelper</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_PHP" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_PHP.html">PHP</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Printer" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_Printer.html">Printer</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Regex" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_Regex.html">Regex</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_String" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_String.html">String</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Test" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_Test.html">Test</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_TestSuiteIterator" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_TestSuiteIterator.html">TestSuiteIterator</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_Type" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_Type.html">Type</a>                    </div>                </li>                            <li data-name="class:PHPUnit_Util_XML" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="PHPUnit_Util_XML.html">XML</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:PHPUnit_Exception" class="opened">                    <div style="padding-left:26px" class="hd leaf">                        <a href="PHPUnit_Exception.html">Exception</a>                    </div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    
            {"type": "Namespace", "link": "PHPUnit.html", "name": "PHPUnit", "doc": "Namespace PHPUnit"},{"type": "Namespace", "link": "PHPUnit/Framework.html", "name": "PHPUnit\\Framework", "doc": "Namespace PHPUnit\\Framework"},{"type": "Namespace", "link": "PHPUnit/Framework/Constraint.html", "name": "PHPUnit\\Framework\\Constraint", "doc": "Namespace PHPUnit\\Framework\\Constraint"},{"type": "Namespace", "link": "PHPUnit/Framework/Error.html", "name": "PHPUnit\\Framework\\Error", "doc": "Namespace PHPUnit\\Framework\\Error"},{"type": "Namespace", "link": "PHPUnit/Runner.html", "name": "PHPUnit\\Runner", "doc": "Namespace PHPUnit\\Runner"},{"type": "Namespace", "link": "PHPUnit/Runner/Filter.html", "name": "PHPUnit\\Runner\\Filter", "doc": "Namespace PHPUnit\\Runner\\Filter"},{"type": "Namespace", "link": "PHPUnit/TextUI.html", "name": "PHPUnit\\TextUI", "doc": "Namespace PHPUnit\\TextUI"},{"type": "Namespace", "link": "PHPUnit/Util.html", "name": "PHPUnit\\Util", "doc": "Namespace PHPUnit\\Util"},{"type": "Namespace", "link": "PHPUnit/Util/Log.html", "name": "PHPUnit\\Util\\Log", "doc": "Namespace PHPUnit\\Util\\Log"},{"type": "Namespace", "link": "PHPUnit/Util/PHP.html", "name": "PHPUnit\\Util\\PHP", "doc": "Namespace PHPUnit\\Util\\PHP"},{"type": "Namespace", "link": "PHPUnit/Util/TestDox.html", "name": "PHPUnit\\Util\\TestDox", "doc": "Namespace PHPUnit\\Util\\TestDox"},
            {"type": "Interface", "fromName": "PHPUnit", "fromLink": "PHPUnit.html", "link": "PHPUnit/Exception.html", "name": "PHPUnit\\Exception", "doc": "&quot;Marker interface for PHPUnit exceptions.&quot;"},
                    
            {"type": "Interface", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/IncompleteTest.html", "name": "PHPUnit\\Framework\\IncompleteTest", "doc": "&quot;A marker interface for marking any exception\/error as result of an unit\ntest as incomplete implementation or currently not implemented.&quot;"},
                    
            {"type": "Interface", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/RiskyTest.html", "name": "PHPUnit\\Framework\\RiskyTest", "doc": "&quot;A marker interface for marking any exception\/error as result of an unit\ntest as risky.&quot;"},
                    
            {"type": "Interface", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/SelfDescribing.html", "name": "PHPUnit\\Framework\\SelfDescribing", "doc": "&quot;Interface for classes that can return a description of itself.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\SelfDescribing", "fromLink": "PHPUnit/Framework/SelfDescribing.html", "link": "PHPUnit/Framework/SelfDescribing.html#method_toString", "name": "PHPUnit\\Framework\\SelfDescribing::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Interface", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/SkippedTest.html", "name": "PHPUnit\\Framework\\SkippedTest", "doc": "&quot;A marker interface for marking a unit test as being skipped.&quot;"},
                    
            {"type": "Interface", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/Test.html", "name": "PHPUnit\\Framework\\Test", "doc": "&quot;A Test can be run and collect its results.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Test", "fromLink": "PHPUnit/Framework/Test.html", "link": "PHPUnit/Framework/Test.html#method_run", "name": "PHPUnit\\Framework\\Test::run", "doc": "&quot;Runs a test and collects its result in a TestResult instance.&quot;"},
            
            {"type": "Interface", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/TestListener.html", "name": "PHPUnit\\Framework\\TestListener", "doc": "&quot;A Listener for test progress.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_addError", "name": "PHPUnit\\Framework\\TestListener::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_addWarning", "name": "PHPUnit\\Framework\\TestListener::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_addFailure", "name": "PHPUnit\\Framework\\TestListener::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_addIncompleteTest", "name": "PHPUnit\\Framework\\TestListener::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_addRiskyTest", "name": "PHPUnit\\Framework\\TestListener::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_addSkippedTest", "name": "PHPUnit\\Framework\\TestListener::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_startTestSuite", "name": "PHPUnit\\Framework\\TestListener::startTestSuite", "doc": "&quot;A test suite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_endTestSuite", "name": "PHPUnit\\Framework\\TestListener::endTestSuite", "doc": "&quot;A test suite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_startTest", "name": "PHPUnit\\Framework\\TestListener::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_endTest", "name": "PHPUnit\\Framework\\TestListener::endTest", "doc": "&quot;A test ended.&quot;"},
            
            {"type": "Interface", "fromName": "PHPUnit\\Runner", "fromLink": "PHPUnit/Runner.html", "link": "PHPUnit/Runner/TestSuiteLoader.html", "name": "PHPUnit\\Runner\\TestSuiteLoader", "doc": "&quot;An interface to define how a test suite should be loaded.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Runner\\TestSuiteLoader", "fromLink": "PHPUnit/Runner/TestSuiteLoader.html", "link": "PHPUnit/Runner/TestSuiteLoader.html#method_load", "name": "PHPUnit\\Runner\\TestSuiteLoader::load", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\TestSuiteLoader", "fromLink": "PHPUnit/Runner/TestSuiteLoader.html", "link": "PHPUnit/Runner/TestSuiteLoader.html#method_reload", "name": "PHPUnit\\Runner\\TestSuiteLoader::reload", "doc": "&quot;&quot;"},
            
            
            {"type": "Class", "fromName": "PHPUnit", "fromLink": "PHPUnit.html", "link": "PHPUnit/Exception.html", "name": "PHPUnit\\Exception", "doc": "&quot;Marker interface for PHPUnit exceptions.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/Assert.html", "name": "PHPUnit\\Framework\\Assert", "doc": "&quot;A set of assertion methods.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertArrayHasKey", "name": "PHPUnit\\Framework\\Assert::assertArrayHasKey", "doc": "&quot;Asserts that an array has a specified key.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertArraySubset", "name": "PHPUnit\\Framework\\Assert::assertArraySubset", "doc": "&quot;Asserts that an array has a specified subset.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertArrayNotHasKey", "name": "PHPUnit\\Framework\\Assert::assertArrayNotHasKey", "doc": "&quot;Asserts that an array does not have a specified key.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertContains", "name": "PHPUnit\\Framework\\Assert::assertContains", "doc": "&quot;Asserts that a haystack contains a needle.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeContains", "name": "PHPUnit\\Framework\\Assert::assertAttributeContains", "doc": "&quot;Asserts that a haystack that is stored in a static attribute of a class\nor an attribute of an object contains a needle.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotContains", "name": "PHPUnit\\Framework\\Assert::assertNotContains", "doc": "&quot;Asserts that a haystack does not contain a needle.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeNotContains", "name": "PHPUnit\\Framework\\Assert::assertAttributeNotContains", "doc": "&quot;Asserts that a haystack that is stored in a static attribute of a class\nor an attribute of an object does not contain a needle.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertContainsOnly", "name": "PHPUnit\\Framework\\Assert::assertContainsOnly", "doc": "&quot;Asserts that a haystack contains only values of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertContainsOnlyInstancesOf", "name": "PHPUnit\\Framework\\Assert::assertContainsOnlyInstancesOf", "doc": "&quot;Asserts that a haystack contains only instances of a given classname&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeContainsOnly", "name": "PHPUnit\\Framework\\Assert::assertAttributeContainsOnly", "doc": "&quot;Asserts that a haystack that is stored in a static attribute of a class\nor an attribute of an object contains only values of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotContainsOnly", "name": "PHPUnit\\Framework\\Assert::assertNotContainsOnly", "doc": "&quot;Asserts that a haystack does not contain only values of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeNotContainsOnly", "name": "PHPUnit\\Framework\\Assert::assertAttributeNotContainsOnly", "doc": "&quot;Asserts that a haystack that is stored in a static attribute of a class\nor an attribute of an object does not contain only values of a given\ntype.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertCount", "name": "PHPUnit\\Framework\\Assert::assertCount", "doc": "&quot;Asserts the number of elements of an array, Countable or Traversable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeCount", "name": "PHPUnit\\Framework\\Assert::assertAttributeCount", "doc": "&quot;Asserts the number of elements of an array, Countable or Traversable\nthat is stored in an attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotCount", "name": "PHPUnit\\Framework\\Assert::assertNotCount", "doc": "&quot;Asserts the number of elements of an array, Countable or Traversable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeNotCount", "name": "PHPUnit\\Framework\\Assert::assertAttributeNotCount", "doc": "&quot;Asserts the number of elements of an array, Countable or Traversable\nthat is stored in an attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertEquals", "name": "PHPUnit\\Framework\\Assert::assertEquals", "doc": "&quot;Asserts that two variables are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeEquals", "name": "PHPUnit\\Framework\\Assert::assertAttributeEquals", "doc": "&quot;Asserts that a variable is equal to an attribute of an object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotEquals", "name": "PHPUnit\\Framework\\Assert::assertNotEquals", "doc": "&quot;Asserts that two variables are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeNotEquals", "name": "PHPUnit\\Framework\\Assert::assertAttributeNotEquals", "doc": "&quot;Asserts that a variable is not equal to an attribute of an object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertEmpty", "name": "PHPUnit\\Framework\\Assert::assertEmpty", "doc": "&quot;Asserts that a variable is empty.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeEmpty", "name": "PHPUnit\\Framework\\Assert::assertAttributeEmpty", "doc": "&quot;Asserts that a static attribute of a class or an attribute of an object\nis empty.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotEmpty", "name": "PHPUnit\\Framework\\Assert::assertNotEmpty", "doc": "&quot;Asserts that a variable is not empty.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeNotEmpty", "name": "PHPUnit\\Framework\\Assert::assertAttributeNotEmpty", "doc": "&quot;Asserts that a static attribute of a class or an attribute of an object\nis not empty.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertGreaterThan", "name": "PHPUnit\\Framework\\Assert::assertGreaterThan", "doc": "&quot;Asserts that a value is greater than another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeGreaterThan", "name": "PHPUnit\\Framework\\Assert::assertAttributeGreaterThan", "doc": "&quot;Asserts that an attribute is greater than another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertGreaterThanOrEqual", "name": "PHPUnit\\Framework\\Assert::assertGreaterThanOrEqual", "doc": "&quot;Asserts that a value is greater than or equal to another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeGreaterThanOrEqual", "name": "PHPUnit\\Framework\\Assert::assertAttributeGreaterThanOrEqual", "doc": "&quot;Asserts that an attribute is greater than or equal to another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertLessThan", "name": "PHPUnit\\Framework\\Assert::assertLessThan", "doc": "&quot;Asserts that a value is smaller than another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeLessThan", "name": "PHPUnit\\Framework\\Assert::assertAttributeLessThan", "doc": "&quot;Asserts that an attribute is smaller than another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertLessThanOrEqual", "name": "PHPUnit\\Framework\\Assert::assertLessThanOrEqual", "doc": "&quot;Asserts that a value is smaller than or equal to another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeLessThanOrEqual", "name": "PHPUnit\\Framework\\Assert::assertAttributeLessThanOrEqual", "doc": "&quot;Asserts that an attribute is smaller than or equal to another value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertFileEquals", "name": "PHPUnit\\Framework\\Assert::assertFileEquals", "doc": "&quot;Asserts that the contents of one file is equal to the contents of another\nfile.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertFileNotEquals", "name": "PHPUnit\\Framework\\Assert::assertFileNotEquals", "doc": "&quot;Asserts that the contents of one file is not equal to the contents of\nanother file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertStringEqualsFile", "name": "PHPUnit\\Framework\\Assert::assertStringEqualsFile", "doc": "&quot;Asserts that the contents of a string is equal\nto the contents of a file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertStringNotEqualsFile", "name": "PHPUnit\\Framework\\Assert::assertStringNotEqualsFile", "doc": "&quot;Asserts that the contents of a string is not equal\nto the contents of a file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertIsReadable", "name": "PHPUnit\\Framework\\Assert::assertIsReadable", "doc": "&quot;Asserts that a file\/dir is readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotIsReadable", "name": "PHPUnit\\Framework\\Assert::assertNotIsReadable", "doc": "&quot;Asserts that a file\/dir exists and is not readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertIsWritable", "name": "PHPUnit\\Framework\\Assert::assertIsWritable", "doc": "&quot;Asserts that a file\/dir exists and is writable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotIsWritable", "name": "PHPUnit\\Framework\\Assert::assertNotIsWritable", "doc": "&quot;Asserts that a file\/dir exists and is not writable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertDirectoryExists", "name": "PHPUnit\\Framework\\Assert::assertDirectoryExists", "doc": "&quot;Asserts that a directory exists.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertDirectoryNotExists", "name": "PHPUnit\\Framework\\Assert::assertDirectoryNotExists", "doc": "&quot;Asserts that a directory does not exist.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertDirectoryIsReadable", "name": "PHPUnit\\Framework\\Assert::assertDirectoryIsReadable", "doc": "&quot;Asserts that a directory exists and is readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertDirectoryNotIsReadable", "name": "PHPUnit\\Framework\\Assert::assertDirectoryNotIsReadable", "doc": "&quot;Asserts that a directory exists and is not readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertDirectoryIsWritable", "name": "PHPUnit\\Framework\\Assert::assertDirectoryIsWritable", "doc": "&quot;Asserts that a directory exists and is writable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertDirectoryNotIsWritable", "name": "PHPUnit\\Framework\\Assert::assertDirectoryNotIsWritable", "doc": "&quot;Asserts that a directory exists and is not writable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertFileExists", "name": "PHPUnit\\Framework\\Assert::assertFileExists", "doc": "&quot;Asserts that a file exists.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertFileNotExists", "name": "PHPUnit\\Framework\\Assert::assertFileNotExists", "doc": "&quot;Asserts that a file does not exist.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertFileIsReadable", "name": "PHPUnit\\Framework\\Assert::assertFileIsReadable", "doc": "&quot;Asserts that a file exists and is readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertFileNotIsReadable", "name": "PHPUnit\\Framework\\Assert::assertFileNotIsReadable", "doc": "&quot;Asserts that a file exists and is not readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertFileIsWritable", "name": "PHPUnit\\Framework\\Assert::assertFileIsWritable", "doc": "&quot;Asserts that a file exists and is writable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertFileNotIsWritable", "name": "PHPUnit\\Framework\\Assert::assertFileNotIsWritable", "doc": "&quot;Asserts that a file exists and is not writable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertTrue", "name": "PHPUnit\\Framework\\Assert::assertTrue", "doc": "&quot;Asserts that a condition is true.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotTrue", "name": "PHPUnit\\Framework\\Assert::assertNotTrue", "doc": "&quot;Asserts that a condition is not true.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertFalse", "name": "PHPUnit\\Framework\\Assert::assertFalse", "doc": "&quot;Asserts that a condition is false.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotFalse", "name": "PHPUnit\\Framework\\Assert::assertNotFalse", "doc": "&quot;Asserts that a condition is not false.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNull", "name": "PHPUnit\\Framework\\Assert::assertNull", "doc": "&quot;Asserts that a variable is null.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotNull", "name": "PHPUnit\\Framework\\Assert::assertNotNull", "doc": "&quot;Asserts that a variable is not null.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertFinite", "name": "PHPUnit\\Framework\\Assert::assertFinite", "doc": "&quot;Asserts that a variable is finite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertInfinite", "name": "PHPUnit\\Framework\\Assert::assertInfinite", "doc": "&quot;Asserts that a variable is infinite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNan", "name": "PHPUnit\\Framework\\Assert::assertNan", "doc": "&quot;Asserts that a variable is nan.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertClassHasAttribute", "name": "PHPUnit\\Framework\\Assert::assertClassHasAttribute", "doc": "&quot;Asserts that a class has a specified attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertClassNotHasAttribute", "name": "PHPUnit\\Framework\\Assert::assertClassNotHasAttribute", "doc": "&quot;Asserts that a class does not have a specified attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertClassHasStaticAttribute", "name": "PHPUnit\\Framework\\Assert::assertClassHasStaticAttribute", "doc": "&quot;Asserts that a class has a specified static attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertClassNotHasStaticAttribute", "name": "PHPUnit\\Framework\\Assert::assertClassNotHasStaticAttribute", "doc": "&quot;Asserts that a class does not have a specified static attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertObjectHasAttribute", "name": "PHPUnit\\Framework\\Assert::assertObjectHasAttribute", "doc": "&quot;Asserts that an object has a specified attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertObjectNotHasAttribute", "name": "PHPUnit\\Framework\\Assert::assertObjectNotHasAttribute", "doc": "&quot;Asserts that an object does not have a specified attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertSame", "name": "PHPUnit\\Framework\\Assert::assertSame", "doc": "&quot;Asserts that two variables have the same type and value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeSame", "name": "PHPUnit\\Framework\\Assert::assertAttributeSame", "doc": "&quot;Asserts that a variable and an attribute of an object have the same type\nand value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotSame", "name": "PHPUnit\\Framework\\Assert::assertNotSame", "doc": "&quot;Asserts that two variables do not have the same type and value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeNotSame", "name": "PHPUnit\\Framework\\Assert::assertAttributeNotSame", "doc": "&quot;Asserts that a variable and an attribute of an object do not have the\nsame type and value.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertInstanceOf", "name": "PHPUnit\\Framework\\Assert::assertInstanceOf", "doc": "&quot;Asserts that a variable is of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeInstanceOf", "name": "PHPUnit\\Framework\\Assert::assertAttributeInstanceOf", "doc": "&quot;Asserts that an attribute is of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotInstanceOf", "name": "PHPUnit\\Framework\\Assert::assertNotInstanceOf", "doc": "&quot;Asserts that a variable is not of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeNotInstanceOf", "name": "PHPUnit\\Framework\\Assert::assertAttributeNotInstanceOf", "doc": "&quot;Asserts that an attribute is of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertInternalType", "name": "PHPUnit\\Framework\\Assert::assertInternalType", "doc": "&quot;Asserts that a variable is of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeInternalType", "name": "PHPUnit\\Framework\\Assert::assertAttributeInternalType", "doc": "&quot;Asserts that an attribute is of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotInternalType", "name": "PHPUnit\\Framework\\Assert::assertNotInternalType", "doc": "&quot;Asserts that a variable is not of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertAttributeNotInternalType", "name": "PHPUnit\\Framework\\Assert::assertAttributeNotInternalType", "doc": "&quot;Asserts that an attribute is of a given type.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertRegExp", "name": "PHPUnit\\Framework\\Assert::assertRegExp", "doc": "&quot;Asserts that a string matches a given regular expression.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotRegExp", "name": "PHPUnit\\Framework\\Assert::assertNotRegExp", "doc": "&quot;Asserts that a string does not match a given regular expression.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertSameSize", "name": "PHPUnit\\Framework\\Assert::assertSameSize", "doc": "&quot;Assert that the size of two arrays (or &lt;code&gt;Countable&lt;\/code&gt; or &lt;code&gt;Traversable&lt;\/code&gt; objects)\nis the same.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertNotSameSize", "name": "PHPUnit\\Framework\\Assert::assertNotSameSize", "doc": "&quot;Assert that the size of two arrays (or &lt;code&gt;Countable&lt;\/code&gt; or &lt;code&gt;Traversable&lt;\/code&gt; objects)\nis not the same.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertStringMatchesFormat", "name": "PHPUnit\\Framework\\Assert::assertStringMatchesFormat", "doc": "&quot;Asserts that a string matches a given format string.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertStringNotMatchesFormat", "name": "PHPUnit\\Framework\\Assert::assertStringNotMatchesFormat", "doc": "&quot;Asserts that a string does not match a given format string.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertStringMatchesFormatFile", "name": "PHPUnit\\Framework\\Assert::assertStringMatchesFormatFile", "doc": "&quot;Asserts that a string matches a given format file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertStringNotMatchesFormatFile", "name": "PHPUnit\\Framework\\Assert::assertStringNotMatchesFormatFile", "doc": "&quot;Asserts that a string does not match a given format string.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertStringStartsWith", "name": "PHPUnit\\Framework\\Assert::assertStringStartsWith", "doc": "&quot;Asserts that a string starts with a given prefix.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertStringStartsNotWith", "name": "PHPUnit\\Framework\\Assert::assertStringStartsNotWith", "doc": "&quot;Asserts that a string starts not with a given prefix.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertStringEndsWith", "name": "PHPUnit\\Framework\\Assert::assertStringEndsWith", "doc": "&quot;Asserts that a string ends with a given suffix.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertStringEndsNotWith", "name": "PHPUnit\\Framework\\Assert::assertStringEndsNotWith", "doc": "&quot;Asserts that a string ends not with a given suffix.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertXmlFileEqualsXmlFile", "name": "PHPUnit\\Framework\\Assert::assertXmlFileEqualsXmlFile", "doc": "&quot;Asserts that two XML files are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertXmlFileNotEqualsXmlFile", "name": "PHPUnit\\Framework\\Assert::assertXmlFileNotEqualsXmlFile", "doc": "&quot;Asserts that two XML files are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertXmlStringEqualsXmlFile", "name": "PHPUnit\\Framework\\Assert::assertXmlStringEqualsXmlFile", "doc": "&quot;Asserts that two XML documents are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertXmlStringNotEqualsXmlFile", "name": "PHPUnit\\Framework\\Assert::assertXmlStringNotEqualsXmlFile", "doc": "&quot;Asserts that two XML documents are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertXmlStringEqualsXmlString", "name": "PHPUnit\\Framework\\Assert::assertXmlStringEqualsXmlString", "doc": "&quot;Asserts that two XML documents are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertXmlStringNotEqualsXmlString", "name": "PHPUnit\\Framework\\Assert::assertXmlStringNotEqualsXmlString", "doc": "&quot;Asserts that two XML documents are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertEqualXMLStructure", "name": "PHPUnit\\Framework\\Assert::assertEqualXMLStructure", "doc": "&quot;Asserts that a hierarchy of DOMElements matches.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertThat", "name": "PHPUnit\\Framework\\Assert::assertThat", "doc": "&quot;Evaluates a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertJson", "name": "PHPUnit\\Framework\\Assert::assertJson", "doc": "&quot;Asserts that a string is a valid JSON string.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertJsonStringEqualsJsonString", "name": "PHPUnit\\Framework\\Assert::assertJsonStringEqualsJsonString", "doc": "&quot;Asserts that two given JSON encoded objects or arrays are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertJsonStringNotEqualsJsonString", "name": "PHPUnit\\Framework\\Assert::assertJsonStringNotEqualsJsonString", "doc": "&quot;Asserts that two given JSON encoded objects or arrays are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertJsonStringEqualsJsonFile", "name": "PHPUnit\\Framework\\Assert::assertJsonStringEqualsJsonFile", "doc": "&quot;Asserts that the generated JSON encoded object and the content of the given file are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertJsonStringNotEqualsJsonFile", "name": "PHPUnit\\Framework\\Assert::assertJsonStringNotEqualsJsonFile", "doc": "&quot;Asserts that the generated JSON encoded object and the content of the given file are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertJsonFileEqualsJsonFile", "name": "PHPUnit\\Framework\\Assert::assertJsonFileEqualsJsonFile", "doc": "&quot;Asserts that two JSON files are equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_assertJsonFileNotEqualsJsonFile", "name": "PHPUnit\\Framework\\Assert::assertJsonFileNotEqualsJsonFile", "doc": "&quot;Asserts that two JSON files are not equal.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_logicalAnd", "name": "PHPUnit\\Framework\\Assert::logicalAnd", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_And matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_logicalOr", "name": "PHPUnit\\Framework\\Assert::logicalOr", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_Or matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_logicalNot", "name": "PHPUnit\\Framework\\Assert::logicalNot", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_Not matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_logicalXor", "name": "PHPUnit\\Framework\\Assert::logicalXor", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_Xor matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_anything", "name": "PHPUnit\\Framework\\Assert::anything", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsAnything matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_isTrue", "name": "PHPUnit\\Framework\\Assert::isTrue", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsTrue matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_callback", "name": "PHPUnit\\Framework\\Assert::callback", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_Callback matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_isFalse", "name": "PHPUnit\\Framework\\Assert::isFalse", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsFalse matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_isJson", "name": "PHPUnit\\Framework\\Assert::isJson", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsJson matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_isNull", "name": "PHPUnit\\Framework\\Assert::isNull", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsNull matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_isFinite", "name": "PHPUnit\\Framework\\Assert::isFinite", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsFinite matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_isInfinite", "name": "PHPUnit\\Framework\\Assert::isInfinite", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsInfinite matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_isNan", "name": "PHPUnit\\Framework\\Assert::isNan", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsNan matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_attribute", "name": "PHPUnit\\Framework\\Assert::attribute", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_Attribute matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_contains", "name": "PHPUnit\\Framework\\Assert::contains", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_TraversableContains matcher\nobject.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_containsOnly", "name": "PHPUnit\\Framework\\Assert::containsOnly", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_TraversableContainsOnly matcher\nobject.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_containsOnlyInstancesOf", "name": "PHPUnit\\Framework\\Assert::containsOnlyInstancesOf", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_TraversableContainsOnly matcher\nobject.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_arrayHasKey", "name": "PHPUnit\\Framework\\Assert::arrayHasKey", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_ArrayHasKey matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_equalTo", "name": "PHPUnit\\Framework\\Assert::equalTo", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsEqual matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_attributeEqualTo", "name": "PHPUnit\\Framework\\Assert::attributeEqualTo", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint&lt;em&gt;IsEqual matcher object\nthat is wrapped in a PHPUnit&lt;\/em&gt;Framework&lt;em&gt;Constraint&lt;\/em&gt;Attribute matcher\nobject.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_isEmpty", "name": "PHPUnit\\Framework\\Assert::isEmpty", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsEmpty matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_isWritable", "name": "PHPUnit\\Framework\\Assert::isWritable", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsWritable matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_isReadable", "name": "PHPUnit\\Framework\\Assert::isReadable", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsReadable matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_directoryExists", "name": "PHPUnit\\Framework\\Assert::directoryExists", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_DirectoryExists matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_fileExists", "name": "PHPUnit\\Framework\\Assert::fileExists", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_FileExists matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_greaterThan", "name": "PHPUnit\\Framework\\Assert::greaterThan", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_GreaterThan matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_greaterThanOrEqual", "name": "PHPUnit\\Framework\\Assert::greaterThanOrEqual", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint&lt;em&gt;Or matcher object that wraps\na PHPUnit&lt;\/em&gt;Framework&lt;em&gt;Constraint&lt;\/em&gt;IsEqual and a\nPHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_GreaterThan matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_classHasAttribute", "name": "PHPUnit\\Framework\\Assert::classHasAttribute", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_ClassHasAttribute matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_classHasStaticAttribute", "name": "PHPUnit\\Framework\\Assert::classHasStaticAttribute", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_ClassHasStaticAttribute matcher\nobject.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_objectHasAttribute", "name": "PHPUnit\\Framework\\Assert::objectHasAttribute", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_ObjectHasAttribute matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_identicalTo", "name": "PHPUnit\\Framework\\Assert::identicalTo", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsIdentical matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_isInstanceOf", "name": "PHPUnit\\Framework\\Assert::isInstanceOf", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsInstanceOf matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_isType", "name": "PHPUnit\\Framework\\Assert::isType", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_IsType matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_lessThan", "name": "PHPUnit\\Framework\\Assert::lessThan", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_LessThan matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_lessThanOrEqual", "name": "PHPUnit\\Framework\\Assert::lessThanOrEqual", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint&lt;em&gt;Or matcher object that wraps\na PHPUnit&lt;\/em&gt;Framework&lt;em&gt;Constraint&lt;\/em&gt;IsEqual and a\nPHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_LessThan matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_matchesRegularExpression", "name": "PHPUnit\\Framework\\Assert::matchesRegularExpression", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_PCREMatch matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_matches", "name": "PHPUnit\\Framework\\Assert::matches", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_StringMatches matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_stringStartsWith", "name": "PHPUnit\\Framework\\Assert::stringStartsWith", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_StringStartsWith matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_stringContains", "name": "PHPUnit\\Framework\\Assert::stringContains", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_StringContains matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_stringEndsWith", "name": "PHPUnit\\Framework\\Assert::stringEndsWith", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_StringEndsWith matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_countOf", "name": "PHPUnit\\Framework\\Assert::countOf", "doc": "&quot;Returns a PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Constraint_Count matcher object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_fail", "name": "PHPUnit\\Framework\\Assert::fail", "doc": "&quot;Fails a test with the given message.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_readAttribute", "name": "PHPUnit\\Framework\\Assert::readAttribute", "doc": "&quot;Returns the value of an attribute of a class or an object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_getStaticAttribute", "name": "PHPUnit\\Framework\\Assert::getStaticAttribute", "doc": "&quot;Returns the value of a static attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_getObjectAttribute", "name": "PHPUnit\\Framework\\Assert::getObjectAttribute", "doc": "&quot;Returns the value of an object&#039;s attribute.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_markTestIncomplete", "name": "PHPUnit\\Framework\\Assert::markTestIncomplete", "doc": "&quot;Mark the test as incomplete.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_markTestSkipped", "name": "PHPUnit\\Framework\\Assert::markTestSkipped", "doc": "&quot;Mark the test as skipped.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_getCount", "name": "PHPUnit\\Framework\\Assert::getCount", "doc": "&quot;Return the current assertion count.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Assert", "fromLink": "PHPUnit/Framework/Assert.html", "link": "PHPUnit/Framework/Assert.html#method_resetCount", "name": "PHPUnit\\Framework\\Assert::resetCount", "doc": "&quot;Reset the assertion counter.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/AssertionFailedError.html", "name": "PHPUnit\\Framework\\AssertionFailedError", "doc": "&quot;Thrown when an assertion failed.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\AssertionFailedError", "fromLink": "PHPUnit/Framework/AssertionFailedError.html", "link": "PHPUnit/Framework/AssertionFailedError.html#method_toString", "name": "PHPUnit\\Framework\\AssertionFailedError::toString", "doc": "&quot;Wrapper for getMessage() which is declared as final.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/BaseTestListener.html", "name": "PHPUnit\\Framework\\BaseTestListener", "doc": "&quot;An empty Listener that can be extended to implement TestListener\nwith just a few lines of code.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\BaseTestListener", "fromLink": "PHPUnit/Framework/BaseTestListener.html", "link": "PHPUnit/Framework/BaseTestListener.html#method_addError", "name": "PHPUnit\\Framework\\BaseTestListener::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\BaseTestListener", "fromLink": "PHPUnit/Framework/BaseTestListener.html", "link": "PHPUnit/Framework/BaseTestListener.html#method_addWarning", "name": "PHPUnit\\Framework\\BaseTestListener::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\BaseTestListener", "fromLink": "PHPUnit/Framework/BaseTestListener.html", "link": "PHPUnit/Framework/BaseTestListener.html#method_addFailure", "name": "PHPUnit\\Framework\\BaseTestListener::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\BaseTestListener", "fromLink": "PHPUnit/Framework/BaseTestListener.html", "link": "PHPUnit/Framework/BaseTestListener.html#method_addIncompleteTest", "name": "PHPUnit\\Framework\\BaseTestListener::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\BaseTestListener", "fromLink": "PHPUnit/Framework/BaseTestListener.html", "link": "PHPUnit/Framework/BaseTestListener.html#method_addRiskyTest", "name": "PHPUnit\\Framework\\BaseTestListener::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\BaseTestListener", "fromLink": "PHPUnit/Framework/BaseTestListener.html", "link": "PHPUnit/Framework/BaseTestListener.html#method_addSkippedTest", "name": "PHPUnit\\Framework\\BaseTestListener::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\BaseTestListener", "fromLink": "PHPUnit/Framework/BaseTestListener.html", "link": "PHPUnit/Framework/BaseTestListener.html#method_startTestSuite", "name": "PHPUnit\\Framework\\BaseTestListener::startTestSuite", "doc": "&quot;A test suite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\BaseTestListener", "fromLink": "PHPUnit/Framework/BaseTestListener.html", "link": "PHPUnit/Framework/BaseTestListener.html#method_endTestSuite", "name": "PHPUnit\\Framework\\BaseTestListener::endTestSuite", "doc": "&quot;A test suite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\BaseTestListener", "fromLink": "PHPUnit/Framework/BaseTestListener.html", "link": "PHPUnit/Framework/BaseTestListener.html#method_startTest", "name": "PHPUnit\\Framework\\BaseTestListener::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\BaseTestListener", "fromLink": "PHPUnit/Framework/BaseTestListener.html", "link": "PHPUnit/Framework/BaseTestListener.html#method_endTest", "name": "PHPUnit\\Framework\\BaseTestListener::endTest", "doc": "&quot;A test ended.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/CodeCoverageException.html", "name": "PHPUnit\\Framework\\CodeCoverageException", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/ArrayHasKey.html", "name": "PHPUnit\\Framework\\Constraint\\ArrayHasKey", "doc": "&quot;Constraint that asserts that the array it is evaluated for has a given key.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ArrayHasKey", "fromLink": "PHPUnit/Framework/Constraint/ArrayHasKey.html", "link": "PHPUnit/Framework/Constraint/ArrayHasKey.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\ArrayHasKey::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ArrayHasKey", "fromLink": "PHPUnit/Framework/Constraint/ArrayHasKey.html", "link": "PHPUnit/Framework/Constraint/ArrayHasKey.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\ArrayHasKey::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ArrayHasKey", "fromLink": "PHPUnit/Framework/Constraint/ArrayHasKey.html", "link": "PHPUnit/Framework/Constraint/ArrayHasKey.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\ArrayHasKey::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ArrayHasKey", "fromLink": "PHPUnit/Framework/Constraint/ArrayHasKey.html", "link": "PHPUnit/Framework/Constraint/ArrayHasKey.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\ArrayHasKey::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/ArraySubset.html", "name": "PHPUnit\\Framework\\Constraint\\ArraySubset", "doc": "&quot;Constraint that asserts that the array it is evaluated for has a specified subset.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ArraySubset", "fromLink": "PHPUnit/Framework/Constraint/ArraySubset.html", "link": "PHPUnit/Framework/Constraint/ArraySubset.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\ArraySubset::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ArraySubset", "fromLink": "PHPUnit/Framework/Constraint/ArraySubset.html", "link": "PHPUnit/Framework/Constraint/ArraySubset.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\ArraySubset::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ArraySubset", "fromLink": "PHPUnit/Framework/Constraint/ArraySubset.html", "link": "PHPUnit/Framework/Constraint/ArraySubset.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\ArraySubset::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ArraySubset", "fromLink": "PHPUnit/Framework/Constraint/ArraySubset.html", "link": "PHPUnit/Framework/Constraint/ArraySubset.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\ArraySubset::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/Attribute.html", "name": "PHPUnit\\Framework\\Constraint\\Attribute", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Attribute", "fromLink": "PHPUnit/Framework/Constraint/Attribute.html", "link": "PHPUnit/Framework/Constraint/Attribute.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\Attribute::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Attribute", "fromLink": "PHPUnit/Framework/Constraint/Attribute.html", "link": "PHPUnit/Framework/Constraint/Attribute.html#method_evaluate", "name": "PHPUnit\\Framework\\Constraint\\Attribute::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Attribute", "fromLink": "PHPUnit/Framework/Constraint/Attribute.html", "link": "PHPUnit/Framework/Constraint/Attribute.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\Attribute::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Attribute", "fromLink": "PHPUnit/Framework/Constraint/Attribute.html", "link": "PHPUnit/Framework/Constraint/Attribute.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\Attribute::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/Callback.html", "name": "PHPUnit\\Framework\\Constraint\\Callback", "doc": "&quot;Constraint that evaluates against a specified closure.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Callback", "fromLink": "PHPUnit/Framework/Constraint/Callback.html", "link": "PHPUnit/Framework/Constraint/Callback.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\Callback::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Callback", "fromLink": "PHPUnit/Framework/Constraint/Callback.html", "link": "PHPUnit/Framework/Constraint/Callback.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\Callback::matches", "doc": "&quot;Evaluates the constraint for parameter $value. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Callback", "fromLink": "PHPUnit/Framework/Constraint/Callback.html", "link": "PHPUnit/Framework/Constraint/Callback.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\Callback::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/ClassHasAttribute.html", "name": "PHPUnit\\Framework\\Constraint\\ClassHasAttribute", "doc": "&quot;Constraint that asserts that the class it is evaluated for has a given\nattribute.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ClassHasAttribute", "fromLink": "PHPUnit/Framework/Constraint/ClassHasAttribute.html", "link": "PHPUnit/Framework/Constraint/ClassHasAttribute.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\ClassHasAttribute::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ClassHasAttribute", "fromLink": "PHPUnit/Framework/Constraint/ClassHasAttribute.html", "link": "PHPUnit/Framework/Constraint/ClassHasAttribute.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\ClassHasAttribute::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ClassHasAttribute", "fromLink": "PHPUnit/Framework/Constraint/ClassHasAttribute.html", "link": "PHPUnit/Framework/Constraint/ClassHasAttribute.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\ClassHasAttribute::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ClassHasAttribute", "fromLink": "PHPUnit/Framework/Constraint/ClassHasAttribute.html", "link": "PHPUnit/Framework/Constraint/ClassHasAttribute.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\ClassHasAttribute::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/ClassHasStaticAttribute.html", "name": "PHPUnit\\Framework\\Constraint\\ClassHasStaticAttribute", "doc": "&quot;Constraint that asserts that the class it is evaluated for has a given\nstatic attribute.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ClassHasStaticAttribute", "fromLink": "PHPUnit/Framework/Constraint/ClassHasStaticAttribute.html", "link": "PHPUnit/Framework/Constraint/ClassHasStaticAttribute.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\ClassHasStaticAttribute::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ClassHasStaticAttribute", "fromLink": "PHPUnit/Framework/Constraint/ClassHasStaticAttribute.html", "link": "PHPUnit/Framework/Constraint/ClassHasStaticAttribute.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\ClassHasStaticAttribute::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/Composite.html", "name": "PHPUnit\\Framework\\Constraint\\Composite", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Composite", "fromLink": "PHPUnit/Framework/Constraint/Composite.html", "link": "PHPUnit/Framework/Constraint/Composite.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\Composite::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Composite", "fromLink": "PHPUnit/Framework/Constraint/Composite.html", "link": "PHPUnit/Framework/Constraint/Composite.html#method_evaluate", "name": "PHPUnit\\Framework\\Constraint\\Composite::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Composite", "fromLink": "PHPUnit/Framework/Constraint/Composite.html", "link": "PHPUnit/Framework/Constraint/Composite.html#method_count", "name": "PHPUnit\\Framework\\Constraint\\Composite::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/Constraint.html", "name": "PHPUnit\\Framework\\Constraint\\Constraint", "doc": "&quot;Abstract base class for constraints which can be applied to any value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Constraint", "fromLink": "PHPUnit/Framework/Constraint/Constraint.html", "link": "PHPUnit/Framework/Constraint/Constraint.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\Constraint::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Constraint", "fromLink": "PHPUnit/Framework/Constraint/Constraint.html", "link": "PHPUnit/Framework/Constraint/Constraint.html#method_evaluate", "name": "PHPUnit\\Framework\\Constraint\\Constraint::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Constraint", "fromLink": "PHPUnit/Framework/Constraint/Constraint.html", "link": "PHPUnit/Framework/Constraint/Constraint.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\Constraint::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Constraint", "fromLink": "PHPUnit/Framework/Constraint/Constraint.html", "link": "PHPUnit/Framework/Constraint/Constraint.html#method_count", "name": "PHPUnit\\Framework\\Constraint\\Constraint::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Constraint", "fromLink": "PHPUnit/Framework/Constraint/Constraint.html", "link": "PHPUnit/Framework/Constraint/Constraint.html#method_fail", "name": "PHPUnit\\Framework\\Constraint\\Constraint::fail", "doc": "&quot;Throws an exception for the given compared value and test description&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Constraint", "fromLink": "PHPUnit/Framework/Constraint/Constraint.html", "link": "PHPUnit/Framework/Constraint/Constraint.html#method_additionalFailureDescription", "name": "PHPUnit\\Framework\\Constraint\\Constraint::additionalFailureDescription", "doc": "&quot;Return additional failure description where needed&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Constraint", "fromLink": "PHPUnit/Framework/Constraint/Constraint.html", "link": "PHPUnit/Framework/Constraint/Constraint.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\Constraint::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/Count.html", "name": "PHPUnit\\Framework\\Constraint\\Count", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Count", "fromLink": "PHPUnit/Framework/Constraint/Count.html", "link": "PHPUnit/Framework/Constraint/Count.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\Count::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Count", "fromLink": "PHPUnit/Framework/Constraint/Count.html", "link": "PHPUnit/Framework/Constraint/Count.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\Count::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Count", "fromLink": "PHPUnit/Framework/Constraint/Count.html", "link": "PHPUnit/Framework/Constraint/Count.html#method_getCountOf", "name": "PHPUnit\\Framework\\Constraint\\Count::getCountOf", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Count", "fromLink": "PHPUnit/Framework/Constraint/Count.html", "link": "PHPUnit/Framework/Constraint/Count.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\Count::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Count", "fromLink": "PHPUnit/Framework/Constraint/Count.html", "link": "PHPUnit/Framework/Constraint/Count.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\Count::toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/DirectoryExists.html", "name": "PHPUnit\\Framework\\Constraint\\DirectoryExists", "doc": "&quot;Constraint that checks if the directory(name) that it is evaluated for exists.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\DirectoryExists", "fromLink": "PHPUnit/Framework/Constraint/DirectoryExists.html", "link": "PHPUnit/Framework/Constraint/DirectoryExists.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\DirectoryExists::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\DirectoryExists", "fromLink": "PHPUnit/Framework/Constraint/DirectoryExists.html", "link": "PHPUnit/Framework/Constraint/DirectoryExists.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\DirectoryExists::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\DirectoryExists", "fromLink": "PHPUnit/Framework/Constraint/DirectoryExists.html", "link": "PHPUnit/Framework/Constraint/DirectoryExists.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\DirectoryExists::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/Exception.html", "name": "PHPUnit\\Framework\\Constraint\\Exception", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Exception", "fromLink": "PHPUnit/Framework/Constraint/Exception.html", "link": "PHPUnit/Framework/Constraint/Exception.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\Exception::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Exception", "fromLink": "PHPUnit/Framework/Constraint/Exception.html", "link": "PHPUnit/Framework/Constraint/Exception.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\Exception::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Exception", "fromLink": "PHPUnit/Framework/Constraint/Exception.html", "link": "PHPUnit/Framework/Constraint/Exception.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\Exception::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\Exception", "fromLink": "PHPUnit/Framework/Constraint/Exception.html", "link": "PHPUnit/Framework/Constraint/Exception.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\Exception::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/ExceptionCode.html", "name": "PHPUnit\\Framework\\Constraint\\ExceptionCode", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ExceptionCode", "fromLink": "PHPUnit/Framework/Constraint/ExceptionCode.html", "link": "PHPUnit/Framework/Constraint/ExceptionCode.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\ExceptionCode::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ExceptionCode", "fromLink": "PHPUnit/Framework/Constraint/ExceptionCode.html", "link": "PHPUnit/Framework/Constraint/ExceptionCode.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\ExceptionCode::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ExceptionCode", "fromLink": "PHPUnit/Framework/Constraint/ExceptionCode.html", "link": "PHPUnit/Framework/Constraint/ExceptionCode.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\ExceptionCode::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ExceptionCode", "fromLink": "PHPUnit/Framework/Constraint/ExceptionCode.html", "link": "PHPUnit/Framework/Constraint/ExceptionCode.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\ExceptionCode::toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/ExceptionMessage.html", "name": "PHPUnit\\Framework\\Constraint\\ExceptionMessage", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ExceptionMessage", "fromLink": "PHPUnit/Framework/Constraint/ExceptionMessage.html", "link": "PHPUnit/Framework/Constraint/ExceptionMessage.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\ExceptionMessage::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ExceptionMessage", "fromLink": "PHPUnit/Framework/Constraint/ExceptionMessage.html", "link": "PHPUnit/Framework/Constraint/ExceptionMessage.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\ExceptionMessage::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ExceptionMessage", "fromLink": "PHPUnit/Framework/Constraint/ExceptionMessage.html", "link": "PHPUnit/Framework/Constraint/ExceptionMessage.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\ExceptionMessage::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ExceptionMessage", "fromLink": "PHPUnit/Framework/Constraint/ExceptionMessage.html", "link": "PHPUnit/Framework/Constraint/ExceptionMessage.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\ExceptionMessage::toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/ExceptionMessageRegularExpression.html", "name": "PHPUnit\\Framework\\Constraint\\ExceptionMessageRegularExpression", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ExceptionMessageRegularExpression", "fromLink": "PHPUnit/Framework/Constraint/ExceptionMessageRegularExpression.html", "link": "PHPUnit/Framework/Constraint/ExceptionMessageRegularExpression.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\ExceptionMessageRegularExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ExceptionMessageRegularExpression", "fromLink": "PHPUnit/Framework/Constraint/ExceptionMessageRegularExpression.html", "link": "PHPUnit/Framework/Constraint/ExceptionMessageRegularExpression.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\ExceptionMessageRegularExpression::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ExceptionMessageRegularExpression", "fromLink": "PHPUnit/Framework/Constraint/ExceptionMessageRegularExpression.html", "link": "PHPUnit/Framework/Constraint/ExceptionMessageRegularExpression.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\ExceptionMessageRegularExpression::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ExceptionMessageRegularExpression", "fromLink": "PHPUnit/Framework/Constraint/ExceptionMessageRegularExpression.html", "link": "PHPUnit/Framework/Constraint/ExceptionMessageRegularExpression.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\ExceptionMessageRegularExpression::toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/FileExists.html", "name": "PHPUnit\\Framework\\Constraint\\FileExists", "doc": "&quot;Constraint that checks if the file(name) that it is evaluated for exists.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\FileExists", "fromLink": "PHPUnit/Framework/Constraint/FileExists.html", "link": "PHPUnit/Framework/Constraint/FileExists.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\FileExists::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\FileExists", "fromLink": "PHPUnit/Framework/Constraint/FileExists.html", "link": "PHPUnit/Framework/Constraint/FileExists.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\FileExists::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\FileExists", "fromLink": "PHPUnit/Framework/Constraint/FileExists.html", "link": "PHPUnit/Framework/Constraint/FileExists.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\FileExists::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/GreaterThan.html", "name": "PHPUnit\\Framework\\Constraint\\GreaterThan", "doc": "&quot;Constraint that asserts that the value it is evaluated for is greater\nthan a given value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\GreaterThan", "fromLink": "PHPUnit/Framework/Constraint/GreaterThan.html", "link": "PHPUnit/Framework/Constraint/GreaterThan.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\GreaterThan::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\GreaterThan", "fromLink": "PHPUnit/Framework/Constraint/GreaterThan.html", "link": "PHPUnit/Framework/Constraint/GreaterThan.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\GreaterThan::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\GreaterThan", "fromLink": "PHPUnit/Framework/Constraint/GreaterThan.html", "link": "PHPUnit/Framework/Constraint/GreaterThan.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\GreaterThan::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsAnything.html", "name": "PHPUnit\\Framework\\Constraint\\IsAnything", "doc": "&quot;Constraint that accepts any input value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsAnything", "fromLink": "PHPUnit/Framework/Constraint/IsAnything.html", "link": "PHPUnit/Framework/Constraint/IsAnything.html#method_evaluate", "name": "PHPUnit\\Framework\\Constraint\\IsAnything::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsAnything", "fromLink": "PHPUnit/Framework/Constraint/IsAnything.html", "link": "PHPUnit/Framework/Constraint/IsAnything.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsAnything::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsAnything", "fromLink": "PHPUnit/Framework/Constraint/IsAnything.html", "link": "PHPUnit/Framework/Constraint/IsAnything.html#method_count", "name": "PHPUnit\\Framework\\Constraint\\IsAnything::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsEmpty.html", "name": "PHPUnit\\Framework\\Constraint\\IsEmpty", "doc": "&quot;Constraint that checks whether a variable is empty().&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsEmpty", "fromLink": "PHPUnit/Framework/Constraint/IsEmpty.html", "link": "PHPUnit/Framework/Constraint/IsEmpty.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\IsEmpty::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsEmpty", "fromLink": "PHPUnit/Framework/Constraint/IsEmpty.html", "link": "PHPUnit/Framework/Constraint/IsEmpty.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsEmpty::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsEmpty", "fromLink": "PHPUnit/Framework/Constraint/IsEmpty.html", "link": "PHPUnit/Framework/Constraint/IsEmpty.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\IsEmpty::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsEqual.html", "name": "PHPUnit\\Framework\\Constraint\\IsEqual", "doc": "&quot;Constraint that checks if one value is equal to another.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsEqual", "fromLink": "PHPUnit/Framework/Constraint/IsEqual.html", "link": "PHPUnit/Framework/Constraint/IsEqual.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\IsEqual::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsEqual", "fromLink": "PHPUnit/Framework/Constraint/IsEqual.html", "link": "PHPUnit/Framework/Constraint/IsEqual.html#method_evaluate", "name": "PHPUnit\\Framework\\Constraint\\IsEqual::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsEqual", "fromLink": "PHPUnit/Framework/Constraint/IsEqual.html", "link": "PHPUnit/Framework/Constraint/IsEqual.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsEqual::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsFalse.html", "name": "PHPUnit\\Framework\\Constraint\\IsFalse", "doc": "&quot;Constraint that accepts false.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsFalse", "fromLink": "PHPUnit/Framework/Constraint/IsFalse.html", "link": "PHPUnit/Framework/Constraint/IsFalse.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\IsFalse::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsFalse", "fromLink": "PHPUnit/Framework/Constraint/IsFalse.html", "link": "PHPUnit/Framework/Constraint/IsFalse.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsFalse::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsFinite.html", "name": "PHPUnit\\Framework\\Constraint\\IsFinite", "doc": "&quot;Constraint that accepts finite.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsFinite", "fromLink": "PHPUnit/Framework/Constraint/IsFinite.html", "link": "PHPUnit/Framework/Constraint/IsFinite.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\IsFinite::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsFinite", "fromLink": "PHPUnit/Framework/Constraint/IsFinite.html", "link": "PHPUnit/Framework/Constraint/IsFinite.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsFinite::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsIdentical.html", "name": "PHPUnit\\Framework\\Constraint\\IsIdentical", "doc": "&quot;Constraint that asserts that one value is identical to another.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsIdentical", "fromLink": "PHPUnit/Framework/Constraint/IsIdentical.html", "link": "PHPUnit/Framework/Constraint/IsIdentical.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\IsIdentical::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsIdentical", "fromLink": "PHPUnit/Framework/Constraint/IsIdentical.html", "link": "PHPUnit/Framework/Constraint/IsIdentical.html#method_evaluate", "name": "PHPUnit\\Framework\\Constraint\\IsIdentical::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsIdentical", "fromLink": "PHPUnit/Framework/Constraint/IsIdentical.html", "link": "PHPUnit/Framework/Constraint/IsIdentical.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\IsIdentical::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsIdentical", "fromLink": "PHPUnit/Framework/Constraint/IsIdentical.html", "link": "PHPUnit/Framework/Constraint/IsIdentical.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsIdentical::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsInfinite.html", "name": "PHPUnit\\Framework\\Constraint\\IsInfinite", "doc": "&quot;Constraint that accepts infinite.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsInfinite", "fromLink": "PHPUnit/Framework/Constraint/IsInfinite.html", "link": "PHPUnit/Framework/Constraint/IsInfinite.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\IsInfinite::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsInfinite", "fromLink": "PHPUnit/Framework/Constraint/IsInfinite.html", "link": "PHPUnit/Framework/Constraint/IsInfinite.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsInfinite::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsInstanceOf.html", "name": "PHPUnit\\Framework\\Constraint\\IsInstanceOf", "doc": "&quot;Constraint that asserts that the object it is evaluated for is an instance\nof a given class.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsInstanceOf", "fromLink": "PHPUnit/Framework/Constraint/IsInstanceOf.html", "link": "PHPUnit/Framework/Constraint/IsInstanceOf.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\IsInstanceOf::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsInstanceOf", "fromLink": "PHPUnit/Framework/Constraint/IsInstanceOf.html", "link": "PHPUnit/Framework/Constraint/IsInstanceOf.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\IsInstanceOf::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsInstanceOf", "fromLink": "PHPUnit/Framework/Constraint/IsInstanceOf.html", "link": "PHPUnit/Framework/Constraint/IsInstanceOf.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\IsInstanceOf::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsInstanceOf", "fromLink": "PHPUnit/Framework/Constraint/IsInstanceOf.html", "link": "PHPUnit/Framework/Constraint/IsInstanceOf.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsInstanceOf::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsJson.html", "name": "PHPUnit\\Framework\\Constraint\\IsJson", "doc": "&quot;Constraint that asserts that a string is valid JSON.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsJson", "fromLink": "PHPUnit/Framework/Constraint/IsJson.html", "link": "PHPUnit/Framework/Constraint/IsJson.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\IsJson::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsJson", "fromLink": "PHPUnit/Framework/Constraint/IsJson.html", "link": "PHPUnit/Framework/Constraint/IsJson.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\IsJson::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsJson", "fromLink": "PHPUnit/Framework/Constraint/IsJson.html", "link": "PHPUnit/Framework/Constraint/IsJson.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsJson::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsNan.html", "name": "PHPUnit\\Framework\\Constraint\\IsNan", "doc": "&quot;Constraint that accepts nan.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsNan", "fromLink": "PHPUnit/Framework/Constraint/IsNan.html", "link": "PHPUnit/Framework/Constraint/IsNan.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\IsNan::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsNan", "fromLink": "PHPUnit/Framework/Constraint/IsNan.html", "link": "PHPUnit/Framework/Constraint/IsNan.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsNan::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsNull.html", "name": "PHPUnit\\Framework\\Constraint\\IsNull", "doc": "&quot;Constraint that accepts null.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsNull", "fromLink": "PHPUnit/Framework/Constraint/IsNull.html", "link": "PHPUnit/Framework/Constraint/IsNull.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\IsNull::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsNull", "fromLink": "PHPUnit/Framework/Constraint/IsNull.html", "link": "PHPUnit/Framework/Constraint/IsNull.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsNull::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsReadable.html", "name": "PHPUnit\\Framework\\Constraint\\IsReadable", "doc": "&quot;Constraint that checks if the file\/dir(name) that it is evaluated for is readable.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsReadable", "fromLink": "PHPUnit/Framework/Constraint/IsReadable.html", "link": "PHPUnit/Framework/Constraint/IsReadable.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\IsReadable::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsReadable", "fromLink": "PHPUnit/Framework/Constraint/IsReadable.html", "link": "PHPUnit/Framework/Constraint/IsReadable.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\IsReadable::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsReadable", "fromLink": "PHPUnit/Framework/Constraint/IsReadable.html", "link": "PHPUnit/Framework/Constraint/IsReadable.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsReadable::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsTrue.html", "name": "PHPUnit\\Framework\\Constraint\\IsTrue", "doc": "&quot;Constraint that accepts true.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsTrue", "fromLink": "PHPUnit/Framework/Constraint/IsTrue.html", "link": "PHPUnit/Framework/Constraint/IsTrue.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\IsTrue::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsTrue", "fromLink": "PHPUnit/Framework/Constraint/IsTrue.html", "link": "PHPUnit/Framework/Constraint/IsTrue.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsTrue::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsType.html", "name": "PHPUnit\\Framework\\Constraint\\IsType", "doc": "&quot;Constraint that asserts that the value it is evaluated for is of a\nspecified type.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsType", "fromLink": "PHPUnit/Framework/Constraint/IsType.html", "link": "PHPUnit/Framework/Constraint/IsType.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\IsType::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsType", "fromLink": "PHPUnit/Framework/Constraint/IsType.html", "link": "PHPUnit/Framework/Constraint/IsType.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\IsType::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsType", "fromLink": "PHPUnit/Framework/Constraint/IsType.html", "link": "PHPUnit/Framework/Constraint/IsType.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsType::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/IsWritable.html", "name": "PHPUnit\\Framework\\Constraint\\IsWritable", "doc": "&quot;Constraint that checks if the file\/dir(name) that it is evaluated for is writable.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsWritable", "fromLink": "PHPUnit/Framework/Constraint/IsWritable.html", "link": "PHPUnit/Framework/Constraint/IsWritable.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\IsWritable::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsWritable", "fromLink": "PHPUnit/Framework/Constraint/IsWritable.html", "link": "PHPUnit/Framework/Constraint/IsWritable.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\IsWritable::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\IsWritable", "fromLink": "PHPUnit/Framework/Constraint/IsWritable.html", "link": "PHPUnit/Framework/Constraint/IsWritable.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\IsWritable::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/JsonMatches.html", "name": "PHPUnit\\Framework\\Constraint\\JsonMatches", "doc": "&quot;Asserts whether or not two JSON objects are equal.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\JsonMatches", "fromLink": "PHPUnit/Framework/Constraint/JsonMatches.html", "link": "PHPUnit/Framework/Constraint/JsonMatches.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\JsonMatches::__construct", "doc": "&quot;Creates a new constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\JsonMatches", "fromLink": "PHPUnit/Framework/Constraint/JsonMatches.html", "link": "PHPUnit/Framework/Constraint/JsonMatches.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\JsonMatches::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\JsonMatches", "fromLink": "PHPUnit/Framework/Constraint/JsonMatches.html", "link": "PHPUnit/Framework/Constraint/JsonMatches.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\JsonMatches::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/JsonMatchesErrorMessageProvider.html", "name": "PHPUnit\\Framework\\Constraint\\JsonMatchesErrorMessageProvider", "doc": "&quot;Provides human readable messages for each JSON error.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\JsonMatchesErrorMessageProvider", "fromLink": "PHPUnit/Framework/Constraint/JsonMatchesErrorMessageProvider.html", "link": "PHPUnit/Framework/Constraint/JsonMatchesErrorMessageProvider.html#method_determineJsonError", "name": "PHPUnit\\Framework\\Constraint\\JsonMatchesErrorMessageProvider::determineJsonError", "doc": "&quot;Translates JSON error to a human readable string.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\JsonMatchesErrorMessageProvider", "fromLink": "PHPUnit/Framework/Constraint/JsonMatchesErrorMessageProvider.html", "link": "PHPUnit/Framework/Constraint/JsonMatchesErrorMessageProvider.html#method_translateTypeToPrefix", "name": "PHPUnit\\Framework\\Constraint\\JsonMatchesErrorMessageProvider::translateTypeToPrefix", "doc": "&quot;Translates a given type to a human readable message prefix.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/LessThan.html", "name": "PHPUnit\\Framework\\Constraint\\LessThan", "doc": "&quot;Constraint that asserts that the value it is evaluated for is less than\na given value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LessThan", "fromLink": "PHPUnit/Framework/Constraint/LessThan.html", "link": "PHPUnit/Framework/Constraint/LessThan.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\LessThan::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LessThan", "fromLink": "PHPUnit/Framework/Constraint/LessThan.html", "link": "PHPUnit/Framework/Constraint/LessThan.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\LessThan::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LessThan", "fromLink": "PHPUnit/Framework/Constraint/LessThan.html", "link": "PHPUnit/Framework/Constraint/LessThan.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\LessThan::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/LogicalAnd.html", "name": "PHPUnit\\Framework\\Constraint\\LogicalAnd", "doc": "&quot;Logical AND.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalAnd", "fromLink": "PHPUnit/Framework/Constraint/LogicalAnd.html", "link": "PHPUnit/Framework/Constraint/LogicalAnd.html#method_setConstraints", "name": "PHPUnit\\Framework\\Constraint\\LogicalAnd::setConstraints", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalAnd", "fromLink": "PHPUnit/Framework/Constraint/LogicalAnd.html", "link": "PHPUnit/Framework/Constraint/LogicalAnd.html#method_evaluate", "name": "PHPUnit\\Framework\\Constraint\\LogicalAnd::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalAnd", "fromLink": "PHPUnit/Framework/Constraint/LogicalAnd.html", "link": "PHPUnit/Framework/Constraint/LogicalAnd.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\LogicalAnd::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalAnd", "fromLink": "PHPUnit/Framework/Constraint/LogicalAnd.html", "link": "PHPUnit/Framework/Constraint/LogicalAnd.html#method_count", "name": "PHPUnit\\Framework\\Constraint\\LogicalAnd::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/LogicalNot.html", "name": "PHPUnit\\Framework\\Constraint\\LogicalNot", "doc": "&quot;Logical NOT.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalNot", "fromLink": "PHPUnit/Framework/Constraint/LogicalNot.html", "link": "PHPUnit/Framework/Constraint/LogicalNot.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\LogicalNot::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalNot", "fromLink": "PHPUnit/Framework/Constraint/LogicalNot.html", "link": "PHPUnit/Framework/Constraint/LogicalNot.html#method_negate", "name": "PHPUnit\\Framework\\Constraint\\LogicalNot::negate", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalNot", "fromLink": "PHPUnit/Framework/Constraint/LogicalNot.html", "link": "PHPUnit/Framework/Constraint/LogicalNot.html#method_evaluate", "name": "PHPUnit\\Framework\\Constraint\\LogicalNot::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalNot", "fromLink": "PHPUnit/Framework/Constraint/LogicalNot.html", "link": "PHPUnit/Framework/Constraint/LogicalNot.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\LogicalNot::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalNot", "fromLink": "PHPUnit/Framework/Constraint/LogicalNot.html", "link": "PHPUnit/Framework/Constraint/LogicalNot.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\LogicalNot::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalNot", "fromLink": "PHPUnit/Framework/Constraint/LogicalNot.html", "link": "PHPUnit/Framework/Constraint/LogicalNot.html#method_count", "name": "PHPUnit\\Framework\\Constraint\\LogicalNot::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/LogicalOr.html", "name": "PHPUnit\\Framework\\Constraint\\LogicalOr", "doc": "&quot;Logical OR.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalOr", "fromLink": "PHPUnit/Framework/Constraint/LogicalOr.html", "link": "PHPUnit/Framework/Constraint/LogicalOr.html#method_setConstraints", "name": "PHPUnit\\Framework\\Constraint\\LogicalOr::setConstraints", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalOr", "fromLink": "PHPUnit/Framework/Constraint/LogicalOr.html", "link": "PHPUnit/Framework/Constraint/LogicalOr.html#method_evaluate", "name": "PHPUnit\\Framework\\Constraint\\LogicalOr::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalOr", "fromLink": "PHPUnit/Framework/Constraint/LogicalOr.html", "link": "PHPUnit/Framework/Constraint/LogicalOr.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\LogicalOr::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalOr", "fromLink": "PHPUnit/Framework/Constraint/LogicalOr.html", "link": "PHPUnit/Framework/Constraint/LogicalOr.html#method_count", "name": "PHPUnit\\Framework\\Constraint\\LogicalOr::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/LogicalXor.html", "name": "PHPUnit\\Framework\\Constraint\\LogicalXor", "doc": "&quot;Logical XOR.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalXor", "fromLink": "PHPUnit/Framework/Constraint/LogicalXor.html", "link": "PHPUnit/Framework/Constraint/LogicalXor.html#method_setConstraints", "name": "PHPUnit\\Framework\\Constraint\\LogicalXor::setConstraints", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalXor", "fromLink": "PHPUnit/Framework/Constraint/LogicalXor.html", "link": "PHPUnit/Framework/Constraint/LogicalXor.html#method_evaluate", "name": "PHPUnit\\Framework\\Constraint\\LogicalXor::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalXor", "fromLink": "PHPUnit/Framework/Constraint/LogicalXor.html", "link": "PHPUnit/Framework/Constraint/LogicalXor.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\LogicalXor::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\LogicalXor", "fromLink": "PHPUnit/Framework/Constraint/LogicalXor.html", "link": "PHPUnit/Framework/Constraint/LogicalXor.html#method_count", "name": "PHPUnit\\Framework\\Constraint\\LogicalXor::count", "doc": "&quot;Counts the number of constraint elements.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/ObjectHasAttribute.html", "name": "PHPUnit\\Framework\\Constraint\\ObjectHasAttribute", "doc": "&quot;Constraint that asserts that the object it is evaluated for has a given\nattribute.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\ObjectHasAttribute", "fromLink": "PHPUnit/Framework/Constraint/ObjectHasAttribute.html", "link": "PHPUnit/Framework/Constraint/ObjectHasAttribute.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\ObjectHasAttribute::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/RegularExpression.html", "name": "PHPUnit\\Framework\\Constraint\\RegularExpression", "doc": "&quot;Constraint that asserts that the string it is evaluated for matches\na regular expression.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\RegularExpression", "fromLink": "PHPUnit/Framework/Constraint/RegularExpression.html", "link": "PHPUnit/Framework/Constraint/RegularExpression.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\RegularExpression::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\RegularExpression", "fromLink": "PHPUnit/Framework/Constraint/RegularExpression.html", "link": "PHPUnit/Framework/Constraint/RegularExpression.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\RegularExpression::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\RegularExpression", "fromLink": "PHPUnit/Framework/Constraint/RegularExpression.html", "link": "PHPUnit/Framework/Constraint/RegularExpression.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\RegularExpression::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/SameSize.html", "name": "PHPUnit\\Framework\\Constraint\\SameSize", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\SameSize", "fromLink": "PHPUnit/Framework/Constraint/SameSize.html", "link": "PHPUnit/Framework/Constraint/SameSize.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\SameSize::__construct", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/StringContains.html", "name": "PHPUnit\\Framework\\Constraint\\StringContains", "doc": "&quot;Constraint that asserts that the string it is evaluated for contains\na given string.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\StringContains", "fromLink": "PHPUnit/Framework/Constraint/StringContains.html", "link": "PHPUnit/Framework/Constraint/StringContains.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\StringContains::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\StringContains", "fromLink": "PHPUnit/Framework/Constraint/StringContains.html", "link": "PHPUnit/Framework/Constraint/StringContains.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\StringContains::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\StringContains", "fromLink": "PHPUnit/Framework/Constraint/StringContains.html", "link": "PHPUnit/Framework/Constraint/StringContains.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\StringContains::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/StringEndsWith.html", "name": "PHPUnit\\Framework\\Constraint\\StringEndsWith", "doc": "&quot;Constraint that asserts that the string it is evaluated for ends with a given\nsuffix.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\StringEndsWith", "fromLink": "PHPUnit/Framework/Constraint/StringEndsWith.html", "link": "PHPUnit/Framework/Constraint/StringEndsWith.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\StringEndsWith::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\StringEndsWith", "fromLink": "PHPUnit/Framework/Constraint/StringEndsWith.html", "link": "PHPUnit/Framework/Constraint/StringEndsWith.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\StringEndsWith::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\StringEndsWith", "fromLink": "PHPUnit/Framework/Constraint/StringEndsWith.html", "link": "PHPUnit/Framework/Constraint/StringEndsWith.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\StringEndsWith::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/StringMatchesFormatDescription.html", "name": "PHPUnit\\Framework\\Constraint\\StringMatchesFormatDescription", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\StringMatchesFormatDescription", "fromLink": "PHPUnit/Framework/Constraint/StringMatchesFormatDescription.html", "link": "PHPUnit/Framework/Constraint/StringMatchesFormatDescription.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\StringMatchesFormatDescription::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\StringMatchesFormatDescription", "fromLink": "PHPUnit/Framework/Constraint/StringMatchesFormatDescription.html", "link": "PHPUnit/Framework/Constraint/StringMatchesFormatDescription.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\StringMatchesFormatDescription::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\StringMatchesFormatDescription", "fromLink": "PHPUnit/Framework/Constraint/StringMatchesFormatDescription.html", "link": "PHPUnit/Framework/Constraint/StringMatchesFormatDescription.html#method_additionalFailureDescription", "name": "PHPUnit\\Framework\\Constraint\\StringMatchesFormatDescription::additionalFailureDescription", "doc": "&quot;Return additional failure description where needed&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\StringMatchesFormatDescription", "fromLink": "PHPUnit/Framework/Constraint/StringMatchesFormatDescription.html", "link": "PHPUnit/Framework/Constraint/StringMatchesFormatDescription.html#method_createPatternFromFormat", "name": "PHPUnit\\Framework\\Constraint\\StringMatchesFormatDescription::createPatternFromFormat", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/StringStartsWith.html", "name": "PHPUnit\\Framework\\Constraint\\StringStartsWith", "doc": "&quot;Constraint that asserts that the string it is evaluated for begins with a\ngiven prefix.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\StringStartsWith", "fromLink": "PHPUnit/Framework/Constraint/StringStartsWith.html", "link": "PHPUnit/Framework/Constraint/StringStartsWith.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\StringStartsWith::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\StringStartsWith", "fromLink": "PHPUnit/Framework/Constraint/StringStartsWith.html", "link": "PHPUnit/Framework/Constraint/StringStartsWith.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\StringStartsWith::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\StringStartsWith", "fromLink": "PHPUnit/Framework/Constraint/StringStartsWith.html", "link": "PHPUnit/Framework/Constraint/StringStartsWith.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\StringStartsWith::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/TraversableContains.html", "name": "PHPUnit\\Framework\\Constraint\\TraversableContains", "doc": "&quot;Constraint that asserts that the Traversable it is applied to contains\na given value.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\TraversableContains", "fromLink": "PHPUnit/Framework/Constraint/TraversableContains.html", "link": "PHPUnit/Framework/Constraint/TraversableContains.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\TraversableContains::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\TraversableContains", "fromLink": "PHPUnit/Framework/Constraint/TraversableContains.html", "link": "PHPUnit/Framework/Constraint/TraversableContains.html#method_matches", "name": "PHPUnit\\Framework\\Constraint\\TraversableContains::matches", "doc": "&quot;Evaluates the constraint for parameter $other. Returns true if the\nconstraint is met, false otherwise.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\TraversableContains", "fromLink": "PHPUnit/Framework/Constraint/TraversableContains.html", "link": "PHPUnit/Framework/Constraint/TraversableContains.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\TraversableContains::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\TraversableContains", "fromLink": "PHPUnit/Framework/Constraint/TraversableContains.html", "link": "PHPUnit/Framework/Constraint/TraversableContains.html#method_failureDescription", "name": "PHPUnit\\Framework\\Constraint\\TraversableContains::failureDescription", "doc": "&quot;Returns the description of the failure&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Constraint", "fromLink": "PHPUnit/Framework/Constraint.html", "link": "PHPUnit/Framework/Constraint/TraversableContainsOnly.html", "name": "PHPUnit\\Framework\\Constraint\\TraversableContainsOnly", "doc": "&quot;Constraint that asserts that the Traversable it is applied to contains\nonly values of a given type.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\TraversableContainsOnly", "fromLink": "PHPUnit/Framework/Constraint/TraversableContainsOnly.html", "link": "PHPUnit/Framework/Constraint/TraversableContainsOnly.html#method___construct", "name": "PHPUnit\\Framework\\Constraint\\TraversableContainsOnly::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\TraversableContainsOnly", "fromLink": "PHPUnit/Framework/Constraint/TraversableContainsOnly.html", "link": "PHPUnit/Framework/Constraint/TraversableContainsOnly.html#method_evaluate", "name": "PHPUnit\\Framework\\Constraint\\TraversableContainsOnly::evaluate", "doc": "&quot;Evaluates the constraint for parameter $other&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Constraint\\TraversableContainsOnly", "fromLink": "PHPUnit/Framework/Constraint/TraversableContainsOnly.html", "link": "PHPUnit/Framework/Constraint/TraversableContainsOnly.html#method_toString", "name": "PHPUnit\\Framework\\Constraint\\TraversableContainsOnly::toString", "doc": "&quot;Returns a string representation of the constraint.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/CoveredCodeNotExecutedException.html", "name": "PHPUnit\\Framework\\CoveredCodeNotExecutedException", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of a test that does not execute the code it wants to cover.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/DataProviderTestSuite.html", "name": "PHPUnit\\Framework\\DataProviderTestSuite", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\DataProviderTestSuite", "fromLink": "PHPUnit/Framework/DataProviderTestSuite.html", "link": "PHPUnit/Framework/DataProviderTestSuite.html#method_setDependencies", "name": "PHPUnit\\Framework\\DataProviderTestSuite::setDependencies", "doc": "&quot;Sets the dependencies of a TestCase.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Error", "fromLink": "PHPUnit/Framework/Error.html", "link": "PHPUnit/Framework/Error/Deprecated.html", "name": "PHPUnit\\Framework\\Error\\Deprecated", "doc": "&quot;Wrapper for PHP deprecated errors.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Error", "fromLink": "PHPUnit/Framework/Error.html", "link": "PHPUnit/Framework/Error/Error.html", "name": "PHPUnit\\Framework\\Error\\Error", "doc": "&quot;Wrapper for PHP errors.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Error\\Error", "fromLink": "PHPUnit/Framework/Error/Error.html", "link": "PHPUnit/Framework/Error/Error.html#method___construct", "name": "PHPUnit\\Framework\\Error\\Error::__construct", "doc": "&quot;Constructor.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Error", "fromLink": "PHPUnit/Framework/Error.html", "link": "PHPUnit/Framework/Error/Notice.html", "name": "PHPUnit\\Framework\\Error\\Notice", "doc": "&quot;Wrapper for PHP notices.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework\\Error", "fromLink": "PHPUnit/Framework/Error.html", "link": "PHPUnit/Framework/Error/Warning.html", "name": "PHPUnit\\Framework\\Error\\Warning", "doc": "&quot;Wrapper for PHP warnings.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/Exception.html", "name": "PHPUnit\\Framework\\Exception", "doc": "&quot;Base class for all PHPUnit Framework exceptions.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Exception", "fromLink": "PHPUnit/Framework/Exception.html", "link": "PHPUnit/Framework/Exception.html#method___construct", "name": "PHPUnit\\Framework\\Exception::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Exception", "fromLink": "PHPUnit/Framework/Exception.html", "link": "PHPUnit/Framework/Exception.html#method_getSerializableTrace", "name": "PHPUnit\\Framework\\Exception::getSerializableTrace", "doc": "&quot;Returns the serializable trace (without &#039;args&#039;).&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Exception", "fromLink": "PHPUnit/Framework/Exception.html", "link": "PHPUnit/Framework/Exception.html#method___toString", "name": "PHPUnit\\Framework\\Exception::__toString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\Exception", "fromLink": "PHPUnit/Framework/Exception.html", "link": "PHPUnit/Framework/Exception.html#method___sleep", "name": "PHPUnit\\Framework\\Exception::__sleep", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/ExceptionWrapper.html", "name": "PHPUnit\\Framework\\ExceptionWrapper", "doc": "&quot;Wraps Exceptions thrown by code under test.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\ExceptionWrapper", "fromLink": "PHPUnit/Framework/ExceptionWrapper.html", "link": "PHPUnit/Framework/ExceptionWrapper.html#method___construct", "name": "PHPUnit\\Framework\\ExceptionWrapper::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\ExceptionWrapper", "fromLink": "PHPUnit/Framework/ExceptionWrapper.html", "link": "PHPUnit/Framework/ExceptionWrapper.html#method_getClassName", "name": "PHPUnit\\Framework\\ExceptionWrapper::getClassName", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\ExceptionWrapper", "fromLink": "PHPUnit/Framework/ExceptionWrapper.html", "link": "PHPUnit/Framework/ExceptionWrapper.html#method_getPreviousWrapped", "name": "PHPUnit\\Framework\\ExceptionWrapper::getPreviousWrapped", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\ExceptionWrapper", "fromLink": "PHPUnit/Framework/ExceptionWrapper.html", "link": "PHPUnit/Framework/ExceptionWrapper.html#method___toString", "name": "PHPUnit\\Framework\\ExceptionWrapper::__toString", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/ExpectationFailedException.html", "name": "PHPUnit\\Framework\\ExpectationFailedException", "doc": "&quot;Exception for expectations which failed their check.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\ExpectationFailedException", "fromLink": "PHPUnit/Framework/ExpectationFailedException.html", "link": "PHPUnit/Framework/ExpectationFailedException.html#method___construct", "name": "PHPUnit\\Framework\\ExpectationFailedException::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\ExpectationFailedException", "fromLink": "PHPUnit/Framework/ExpectationFailedException.html", "link": "PHPUnit/Framework/ExpectationFailedException.html#method_getComparisonFailure", "name": "PHPUnit\\Framework\\ExpectationFailedException::getComparisonFailure", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/IncompleteTest.html", "name": "PHPUnit\\Framework\\IncompleteTest", "doc": "&quot;A marker interface for marking any exception\/error as result of an unit\ntest as incomplete implementation or currently not implemented.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/IncompleteTestCase.html", "name": "PHPUnit\\Framework\\IncompleteTestCase", "doc": "&quot;An incomplete test case&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\IncompleteTestCase", "fromLink": "PHPUnit/Framework/IncompleteTestCase.html", "link": "PHPUnit/Framework/IncompleteTestCase.html#method___construct", "name": "PHPUnit\\Framework\\IncompleteTestCase::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\IncompleteTestCase", "fromLink": "PHPUnit/Framework/IncompleteTestCase.html", "link": "PHPUnit/Framework/IncompleteTestCase.html#method_runTest", "name": "PHPUnit\\Framework\\IncompleteTestCase::runTest", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\IncompleteTestCase", "fromLink": "PHPUnit/Framework/IncompleteTestCase.html", "link": "PHPUnit/Framework/IncompleteTestCase.html#method_getMessage", "name": "PHPUnit\\Framework\\IncompleteTestCase::getMessage", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\IncompleteTestCase", "fromLink": "PHPUnit/Framework/IncompleteTestCase.html", "link": "PHPUnit/Framework/IncompleteTestCase.html#method_toString", "name": "PHPUnit\\Framework\\IncompleteTestCase::toString", "doc": "&quot;Returns a string representation of the test case.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/IncompleteTestError.html", "name": "PHPUnit\\Framework\\IncompleteTestError", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of an incomplete test.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/InvalidCoversTargetException.html", "name": "PHPUnit\\Framework\\InvalidCoversTargetException", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/MissingCoversAnnotationException.html", "name": "PHPUnit\\Framework\\MissingCoversAnnotationException", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark a test as risky\nwhen it does not have a @covers annotation but is expected to have one.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/OutputError.html", "name": "PHPUnit\\Framework\\OutputError", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of a test that printed output.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/RiskyTest.html", "name": "PHPUnit\\Framework\\RiskyTest", "doc": "&quot;A marker interface for marking any exception\/error as result of an unit\ntest as risky.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/RiskyTestError.html", "name": "PHPUnit\\Framework\\RiskyTestError", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of a risky test.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/SelfDescribing.html", "name": "PHPUnit\\Framework\\SelfDescribing", "doc": "&quot;Interface for classes that can return a description of itself.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\SelfDescribing", "fromLink": "PHPUnit/Framework/SelfDescribing.html", "link": "PHPUnit/Framework/SelfDescribing.html#method_toString", "name": "PHPUnit\\Framework\\SelfDescribing::toString", "doc": "&quot;Returns a string representation of the object.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/SkippedTest.html", "name": "PHPUnit\\Framework\\SkippedTest", "doc": "&quot;A marker interface for marking a unit test as being skipped.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/SkippedTestCase.html", "name": "PHPUnit\\Framework\\SkippedTestCase", "doc": "&quot;A skipped test case&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\SkippedTestCase", "fromLink": "PHPUnit/Framework/SkippedTestCase.html", "link": "PHPUnit/Framework/SkippedTestCase.html#method___construct", "name": "PHPUnit\\Framework\\SkippedTestCase::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\SkippedTestCase", "fromLink": "PHPUnit/Framework/SkippedTestCase.html", "link": "PHPUnit/Framework/SkippedTestCase.html#method_runTest", "name": "PHPUnit\\Framework\\SkippedTestCase::runTest", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\SkippedTestCase", "fromLink": "PHPUnit/Framework/SkippedTestCase.html", "link": "PHPUnit/Framework/SkippedTestCase.html#method_getMessage", "name": "PHPUnit\\Framework\\SkippedTestCase::getMessage", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\SkippedTestCase", "fromLink": "PHPUnit/Framework/SkippedTestCase.html", "link": "PHPUnit/Framework/SkippedTestCase.html#method_toString", "name": "PHPUnit\\Framework\\SkippedTestCase::toString", "doc": "&quot;Returns a string representation of the test case.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/SkippedTestError.html", "name": "PHPUnit\\Framework\\SkippedTestError", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of a skipped test.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/SkippedTestSuiteError.html", "name": "PHPUnit\\Framework\\SkippedTestSuiteError", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of a skipped test suite.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/SyntheticError.html", "name": "PHPUnit\\Framework\\SyntheticError", "doc": "&quot;Creates a synthetic failed assertion.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\SyntheticError", "fromLink": "PHPUnit/Framework/SyntheticError.html", "link": "PHPUnit/Framework/SyntheticError.html#method___construct", "name": "PHPUnit\\Framework\\SyntheticError::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\SyntheticError", "fromLink": "PHPUnit/Framework/SyntheticError.html", "link": "PHPUnit/Framework/SyntheticError.html#method_getSyntheticFile", "name": "PHPUnit\\Framework\\SyntheticError::getSyntheticFile", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\SyntheticError", "fromLink": "PHPUnit/Framework/SyntheticError.html", "link": "PHPUnit/Framework/SyntheticError.html#method_getSyntheticLine", "name": "PHPUnit\\Framework\\SyntheticError::getSyntheticLine", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\SyntheticError", "fromLink": "PHPUnit/Framework/SyntheticError.html", "link": "PHPUnit/Framework/SyntheticError.html#method_getSyntheticTrace", "name": "PHPUnit\\Framework\\SyntheticError::getSyntheticTrace", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/Test.html", "name": "PHPUnit\\Framework\\Test", "doc": "&quot;A Test can be run and collect its results.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Test", "fromLink": "PHPUnit/Framework/Test.html", "link": "PHPUnit/Framework/Test.html#method_run", "name": "PHPUnit\\Framework\\Test::run", "doc": "&quot;Runs a test and collects its result in a TestResult instance.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/TestCase.html", "name": "PHPUnit\\Framework\\TestCase", "doc": "&quot;A TestCase defines the fixture to run multiple tests.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method___construct", "name": "PHPUnit\\Framework\\TestCase::__construct", "doc": "&quot;Constructs a test case with the given name.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_toString", "name": "PHPUnit\\Framework\\TestCase::toString", "doc": "&quot;Returns a string representation of the test case.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_count", "name": "PHPUnit\\Framework\\TestCase::count", "doc": "&quot;Counts the number of test cases executed by run(TestResult result).&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getGroups", "name": "PHPUnit\\Framework\\TestCase::getGroups", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setGroups", "name": "PHPUnit\\Framework\\TestCase::setGroups", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getAnnotations", "name": "PHPUnit\\Framework\\TestCase::getAnnotations", "doc": "&quot;Returns the annotations for this test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getName", "name": "PHPUnit\\Framework\\TestCase::getName", "doc": "&quot;Gets the name of a TestCase.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getSize", "name": "PHPUnit\\Framework\\TestCase::getSize", "doc": "&quot;Returns the size of the test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_hasSize", "name": "PHPUnit\\Framework\\TestCase::hasSize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_isSmall", "name": "PHPUnit\\Framework\\TestCase::isSmall", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_isMedium", "name": "PHPUnit\\Framework\\TestCase::isMedium", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_isLarge", "name": "PHPUnit\\Framework\\TestCase::isLarge", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getActualOutput", "name": "PHPUnit\\Framework\\TestCase::getActualOutput", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_hasOutput", "name": "PHPUnit\\Framework\\TestCase::hasOutput", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_doesNotPerformAssertions", "name": "PHPUnit\\Framework\\TestCase::doesNotPerformAssertions", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_expectOutputRegex", "name": "PHPUnit\\Framework\\TestCase::expectOutputRegex", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_expectOutputString", "name": "PHPUnit\\Framework\\TestCase::expectOutputString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_hasExpectationOnOutput", "name": "PHPUnit\\Framework\\TestCase::hasExpectationOnOutput", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getExpectedException", "name": "PHPUnit\\Framework\\TestCase::getExpectedException", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getExpectedExceptionCode", "name": "PHPUnit\\Framework\\TestCase::getExpectedExceptionCode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getExpectedExceptionMessage", "name": "PHPUnit\\Framework\\TestCase::getExpectedExceptionMessage", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_expectException", "name": "PHPUnit\\Framework\\TestCase::expectException", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_expectExceptionCode", "name": "PHPUnit\\Framework\\TestCase::expectExceptionCode", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_expectExceptionMessage", "name": "PHPUnit\\Framework\\TestCase::expectExceptionMessage", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_expectExceptionMessageRegExp", "name": "PHPUnit\\Framework\\TestCase::expectExceptionMessageRegExp", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setRegisterMockObjectsFromTestArgumentsRecursively", "name": "PHPUnit\\Framework\\TestCase::setRegisterMockObjectsFromTestArgumentsRecursively", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setExpectedExceptionFromAnnotation", "name": "PHPUnit\\Framework\\TestCase::setExpectedExceptionFromAnnotation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setUseErrorHandler", "name": "PHPUnit\\Framework\\TestCase::setUseErrorHandler", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setUseErrorHandlerFromAnnotation", "name": "PHPUnit\\Framework\\TestCase::setUseErrorHandlerFromAnnotation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_checkRequirements", "name": "PHPUnit\\Framework\\TestCase::checkRequirements", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getStatus", "name": "PHPUnit\\Framework\\TestCase::getStatus", "doc": "&quot;Returns the status of this test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_markAsRisky", "name": "PHPUnit\\Framework\\TestCase::markAsRisky", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getStatusMessage", "name": "PHPUnit\\Framework\\TestCase::getStatusMessage", "doc": "&quot;Returns the status message of this test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_hasFailed", "name": "PHPUnit\\Framework\\TestCase::hasFailed", "doc": "&quot;Returns whether or not this test has failed.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_run", "name": "PHPUnit\\Framework\\TestCase::run", "doc": "&quot;Runs the test case and collects the results in a TestResult object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_runBare", "name": "PHPUnit\\Framework\\TestCase::runBare", "doc": "&quot;Runs the bare test sequence.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_runTest", "name": "PHPUnit\\Framework\\TestCase::runTest", "doc": "&quot;Override to run the test and assert its state.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_verifyMockObjects", "name": "PHPUnit\\Framework\\TestCase::verifyMockObjects", "doc": "&quot;Verifies the mock object expectations.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setName", "name": "PHPUnit\\Framework\\TestCase::setName", "doc": "&quot;Sets the name of a TestCase.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setDependencies", "name": "PHPUnit\\Framework\\TestCase::setDependencies", "doc": "&quot;Sets the dependencies of a TestCase.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_hasDependencies", "name": "PHPUnit\\Framework\\TestCase::hasDependencies", "doc": "&quot;Returns true if the tests has dependencies&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setDependencyInput", "name": "PHPUnit\\Framework\\TestCase::setDependencyInput", "doc": "&quot;Sets&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setBeStrictAboutChangesToGlobalState", "name": "PHPUnit\\Framework\\TestCase::setBeStrictAboutChangesToGlobalState", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setBackupGlobals", "name": "PHPUnit\\Framework\\TestCase::setBackupGlobals", "doc": "&quot;Calling this method in setUp() has no effect!&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setBackupStaticAttributes", "name": "PHPUnit\\Framework\\TestCase::setBackupStaticAttributes", "doc": "&quot;Calling this method in setUp() has no effect!&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setRunTestInSeparateProcess", "name": "PHPUnit\\Framework\\TestCase::setRunTestInSeparateProcess", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setPreserveGlobalState", "name": "PHPUnit\\Framework\\TestCase::setPreserveGlobalState", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setInIsolation", "name": "PHPUnit\\Framework\\TestCase::setInIsolation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_isInIsolation", "name": "PHPUnit\\Framework\\TestCase::isInIsolation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getResult", "name": "PHPUnit\\Framework\\TestCase::getResult", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setResult", "name": "PHPUnit\\Framework\\TestCase::setResult", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setOutputCallback", "name": "PHPUnit\\Framework\\TestCase::setOutputCallback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getTestResultObject", "name": "PHPUnit\\Framework\\TestCase::getTestResultObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setTestResultObject", "name": "PHPUnit\\Framework\\TestCase::setTestResultObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_registerMockObject", "name": "PHPUnit\\Framework\\TestCase::registerMockObject", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_iniSet", "name": "PHPUnit\\Framework\\TestCase::iniSet", "doc": "&quot;This method is a wrapper for the ini_set() function that automatically\nresets the modified php.ini setting to its original value after the\ntest is run.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setLocale", "name": "PHPUnit\\Framework\\TestCase::setLocale", "doc": "&quot;This method is a wrapper for the setlocale() function that automatically\nresets the locale to its original value after the test is run.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getMockBuilder", "name": "PHPUnit\\Framework\\TestCase::getMockBuilder", "doc": "&quot;Returns a builder object to create mock objects using a fluent interface.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_createMock", "name": "PHPUnit\\Framework\\TestCase::createMock", "doc": "&quot;Returns a test double for the specified class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_createConfiguredMock", "name": "PHPUnit\\Framework\\TestCase::createConfiguredMock", "doc": "&quot;Returns a configured test double for the specified class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_createPartialMock", "name": "PHPUnit\\Framework\\TestCase::createPartialMock", "doc": "&quot;Returns a partial test double for the specified class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_createTestProxy", "name": "PHPUnit\\Framework\\TestCase::createTestProxy", "doc": "&quot;Returns a test proxy for the specified class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getMockClass", "name": "PHPUnit\\Framework\\TestCase::getMockClass", "doc": "&quot;Mocks the specified class and returns the name of the mocked class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getMockForAbstractClass", "name": "PHPUnit\\Framework\\TestCase::getMockForAbstractClass", "doc": "&quot;Returns a mock object for the specified abstract class with all abstract\nmethods of the class mocked. Concrete methods are not mocked by default.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getMockFromWsdl", "name": "PHPUnit\\Framework\\TestCase::getMockFromWsdl", "doc": "&quot;Returns a mock object based on the given WSDL file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getMockForTrait", "name": "PHPUnit\\Framework\\TestCase::getMockForTrait", "doc": "&quot;Returns a mock object for the specified trait with all abstract methods\nof the trait mocked. Concrete methods to mock can be specified with the\n&lt;code&gt;$mockedMethods&lt;\/code&gt; parameter.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getObjectForTrait", "name": "PHPUnit\\Framework\\TestCase::getObjectForTrait", "doc": "&quot;Returns an object for the specified trait.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_prophesize", "name": "PHPUnit\\Framework\\TestCase::prophesize", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_addToAssertionCount", "name": "PHPUnit\\Framework\\TestCase::addToAssertionCount", "doc": "&quot;Adds a value to the assertion counter.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getNumAssertions", "name": "PHPUnit\\Framework\\TestCase::getNumAssertions", "doc": "&quot;Returns the number of assertions performed by this test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_any", "name": "PHPUnit\\Framework\\TestCase::any", "doc": "&quot;Returns a matcher that matches when the method is executed\nzero or more times.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_never", "name": "PHPUnit\\Framework\\TestCase::never", "doc": "&quot;Returns a matcher that matches when the method is never executed.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_atLeast", "name": "PHPUnit\\Framework\\TestCase::atLeast", "doc": "&quot;Returns a matcher that matches when the method is executed\nat least N times.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_atLeastOnce", "name": "PHPUnit\\Framework\\TestCase::atLeastOnce", "doc": "&quot;Returns a matcher that matches when the method is executed at least once.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_once", "name": "PHPUnit\\Framework\\TestCase::once", "doc": "&quot;Returns a matcher that matches when the method is executed exactly once.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_exactly", "name": "PHPUnit\\Framework\\TestCase::exactly", "doc": "&quot;Returns a matcher that matches when the method is executed\nexactly $count times.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_atMost", "name": "PHPUnit\\Framework\\TestCase::atMost", "doc": "&quot;Returns a matcher that matches when the method is executed\nat most N times.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_at", "name": "PHPUnit\\Framework\\TestCase::at", "doc": "&quot;Returns a matcher that matches when the method is executed\nat the given index.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_returnValue", "name": "PHPUnit\\Framework\\TestCase::returnValue", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_returnValueMap", "name": "PHPUnit\\Framework\\TestCase::returnValueMap", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_returnArgument", "name": "PHPUnit\\Framework\\TestCase::returnArgument", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_returnCallback", "name": "PHPUnit\\Framework\\TestCase::returnCallback", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_returnSelf", "name": "PHPUnit\\Framework\\TestCase::returnSelf", "doc": "&quot;Returns the current object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_throwException", "name": "PHPUnit\\Framework\\TestCase::throwException", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_onConsecutiveCalls", "name": "PHPUnit\\Framework\\TestCase::onConsecutiveCalls", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_usesDataProvider", "name": "PHPUnit\\Framework\\TestCase::usesDataProvider", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_dataDescription", "name": "PHPUnit\\Framework\\TestCase::dataDescription", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getDataSetAsString", "name": "PHPUnit\\Framework\\TestCase::getDataSetAsString", "doc": "&quot;Gets the data set description of a TestCase.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_getProvidedData", "name": "PHPUnit\\Framework\\TestCase::getProvidedData", "doc": "&quot;Gets the data set of a TestCase.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_createResult", "name": "PHPUnit\\Framework\\TestCase::createResult", "doc": "&quot;Creates a default TestResult object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_handleDependencies", "name": "PHPUnit\\Framework\\TestCase::handleDependencies", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setUpBeforeClass", "name": "PHPUnit\\Framework\\TestCase::setUpBeforeClass", "doc": "&quot;This method is called before the first test of this test class is run.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_setUp", "name": "PHPUnit\\Framework\\TestCase::setUp", "doc": "&quot;Sets up the fixture, for example, open a network connection.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_assertPreConditions", "name": "PHPUnit\\Framework\\TestCase::assertPreConditions", "doc": "&quot;Performs assertions shared by all tests of a test case.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_assertPostConditions", "name": "PHPUnit\\Framework\\TestCase::assertPostConditions", "doc": "&quot;Performs assertions shared by all tests of a test case.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_tearDown", "name": "PHPUnit\\Framework\\TestCase::tearDown", "doc": "&quot;Tears down the fixture, for example, close a network connection.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_tearDownAfterClass", "name": "PHPUnit\\Framework\\TestCase::tearDownAfterClass", "doc": "&quot;This method is called after the last test of this test class is run.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_onNotSuccessfulTest", "name": "PHPUnit\\Framework\\TestCase::onNotSuccessfulTest", "doc": "&quot;This method is called when a test method did not execute successfully.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestCase", "fromLink": "PHPUnit/Framework/TestCase.html", "link": "PHPUnit/Framework/TestCase.html#method_prepareTemplate", "name": "PHPUnit\\Framework\\TestCase::prepareTemplate", "doc": "&quot;Performs custom preparations on the process isolation template.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/TestFailure.html", "name": "PHPUnit\\Framework\\TestFailure", "doc": "&quot;A TestFailure collects a failed test together with the caught exception.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\TestFailure", "fromLink": "PHPUnit/Framework/TestFailure.html", "link": "PHPUnit/Framework/TestFailure.html#method___construct", "name": "PHPUnit\\Framework\\TestFailure::__construct", "doc": "&quot;Constructs a TestFailure with the given test and exception.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestFailure", "fromLink": "PHPUnit/Framework/TestFailure.html", "link": "PHPUnit/Framework/TestFailure.html#method_toString", "name": "PHPUnit\\Framework\\TestFailure::toString", "doc": "&quot;Returns a short description of the failure.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestFailure", "fromLink": "PHPUnit/Framework/TestFailure.html", "link": "PHPUnit/Framework/TestFailure.html#method_getExceptionAsString", "name": "PHPUnit\\Framework\\TestFailure::getExceptionAsString", "doc": "&quot;Returns a description for the thrown exception.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestFailure", "fromLink": "PHPUnit/Framework/TestFailure.html", "link": "PHPUnit/Framework/TestFailure.html#method_exceptionToString", "name": "PHPUnit\\Framework\\TestFailure::exceptionToString", "doc": "&quot;Returns a description for an exception.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestFailure", "fromLink": "PHPUnit/Framework/TestFailure.html", "link": "PHPUnit/Framework/TestFailure.html#method_getTestName", "name": "PHPUnit\\Framework\\TestFailure::getTestName", "doc": "&quot;Returns the name of the failing test (including data set, if any).&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestFailure", "fromLink": "PHPUnit/Framework/TestFailure.html", "link": "PHPUnit/Framework/TestFailure.html#method_failedTest", "name": "PHPUnit\\Framework\\TestFailure::failedTest", "doc": "&quot;Returns the failing test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestFailure", "fromLink": "PHPUnit/Framework/TestFailure.html", "link": "PHPUnit/Framework/TestFailure.html#method_thrownException", "name": "PHPUnit\\Framework\\TestFailure::thrownException", "doc": "&quot;Gets the thrown exception.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestFailure", "fromLink": "PHPUnit/Framework/TestFailure.html", "link": "PHPUnit/Framework/TestFailure.html#method_exceptionMessage", "name": "PHPUnit\\Framework\\TestFailure::exceptionMessage", "doc": "&quot;Returns the exception&#039;s message.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestFailure", "fromLink": "PHPUnit/Framework/TestFailure.html", "link": "PHPUnit/Framework/TestFailure.html#method_isFailure", "name": "PHPUnit\\Framework\\TestFailure::isFailure", "doc": "&quot;Returns true if the thrown exception\nis of type AssertionFailedError.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/TestListener.html", "name": "PHPUnit\\Framework\\TestListener", "doc": "&quot;A Listener for test progress.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_addError", "name": "PHPUnit\\Framework\\TestListener::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_addWarning", "name": "PHPUnit\\Framework\\TestListener::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_addFailure", "name": "PHPUnit\\Framework\\TestListener::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_addIncompleteTest", "name": "PHPUnit\\Framework\\TestListener::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_addRiskyTest", "name": "PHPUnit\\Framework\\TestListener::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_addSkippedTest", "name": "PHPUnit\\Framework\\TestListener::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_startTestSuite", "name": "PHPUnit\\Framework\\TestListener::startTestSuite", "doc": "&quot;A test suite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_endTestSuite", "name": "PHPUnit\\Framework\\TestListener::endTestSuite", "doc": "&quot;A test suite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_startTest", "name": "PHPUnit\\Framework\\TestListener::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestListener", "fromLink": "PHPUnit/Framework/TestListener.html", "link": "PHPUnit/Framework/TestListener.html#method_endTest", "name": "PHPUnit\\Framework\\TestListener::endTest", "doc": "&quot;A test ended.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/TestResult.html", "name": "PHPUnit\\Framework\\TestResult", "doc": "&quot;A TestResult collects the results of executing a test case.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_addListener", "name": "PHPUnit\\Framework\\TestResult::addListener", "doc": "&quot;Registers a TestListener.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_removeListener", "name": "PHPUnit\\Framework\\TestResult::removeListener", "doc": "&quot;Unregisters a TestListener.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_flushListeners", "name": "PHPUnit\\Framework\\TestResult::flushListeners", "doc": "&quot;Flushes all flushable TestListeners.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_addError", "name": "PHPUnit\\Framework\\TestResult::addError", "doc": "&quot;Adds an error to the list of errors.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_addWarning", "name": "PHPUnit\\Framework\\TestResult::addWarning", "doc": "&quot;Adds a warning to the list of warnings.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_addFailure", "name": "PHPUnit\\Framework\\TestResult::addFailure", "doc": "&quot;Adds a failure to the list of failures.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_startTestSuite", "name": "PHPUnit\\Framework\\TestResult::startTestSuite", "doc": "&quot;Informs the result that a testsuite will be started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_endTestSuite", "name": "PHPUnit\\Framework\\TestResult::endTestSuite", "doc": "&quot;Informs the result that a testsuite was completed.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_startTest", "name": "PHPUnit\\Framework\\TestResult::startTest", "doc": "&quot;Informs the result that a test will be started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_endTest", "name": "PHPUnit\\Framework\\TestResult::endTest", "doc": "&quot;Informs the result that a test was completed.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_allHarmless", "name": "PHPUnit\\Framework\\TestResult::allHarmless", "doc": "&quot;Returns true if no risky test occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_riskyCount", "name": "PHPUnit\\Framework\\TestResult::riskyCount", "doc": "&quot;Gets the number of risky tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_allCompletelyImplemented", "name": "PHPUnit\\Framework\\TestResult::allCompletelyImplemented", "doc": "&quot;Returns true if no incomplete test occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_notImplementedCount", "name": "PHPUnit\\Framework\\TestResult::notImplementedCount", "doc": "&quot;Gets the number of incomplete tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_risky", "name": "PHPUnit\\Framework\\TestResult::risky", "doc": "&quot;Returns an Enumeration for the risky tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_notImplemented", "name": "PHPUnit\\Framework\\TestResult::notImplemented", "doc": "&quot;Returns an Enumeration for the incomplete tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_noneSkipped", "name": "PHPUnit\\Framework\\TestResult::noneSkipped", "doc": "&quot;Returns true if no test has been skipped.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_skippedCount", "name": "PHPUnit\\Framework\\TestResult::skippedCount", "doc": "&quot;Gets the number of skipped tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_skipped", "name": "PHPUnit\\Framework\\TestResult::skipped", "doc": "&quot;Returns an Enumeration for the skipped tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_errorCount", "name": "PHPUnit\\Framework\\TestResult::errorCount", "doc": "&quot;Gets the number of detected errors.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_errors", "name": "PHPUnit\\Framework\\TestResult::errors", "doc": "&quot;Returns an Enumeration for the errors.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_failureCount", "name": "PHPUnit\\Framework\\TestResult::failureCount", "doc": "&quot;Gets the number of detected failures.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_failures", "name": "PHPUnit\\Framework\\TestResult::failures", "doc": "&quot;Returns an Enumeration for the failures.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_warningCount", "name": "PHPUnit\\Framework\\TestResult::warningCount", "doc": "&quot;Gets the number of detected warnings.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_warnings", "name": "PHPUnit\\Framework\\TestResult::warnings", "doc": "&quot;Returns an Enumeration for the warnings.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_passed", "name": "PHPUnit\\Framework\\TestResult::passed", "doc": "&quot;Returns the names of the tests that have passed.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_topTestSuite", "name": "PHPUnit\\Framework\\TestResult::topTestSuite", "doc": "&quot;Returns the (top) test suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_getCollectCodeCoverageInformation", "name": "PHPUnit\\Framework\\TestResult::getCollectCodeCoverageInformation", "doc": "&quot;Returns whether code coverage information should be collected.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_run", "name": "PHPUnit\\Framework\\TestResult::run", "doc": "&quot;Runs a TestCase.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_count", "name": "PHPUnit\\Framework\\TestResult::count", "doc": "&quot;Gets the number of run tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_shouldStop", "name": "PHPUnit\\Framework\\TestResult::shouldStop", "doc": "&quot;Checks whether the test run should stop.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_stop", "name": "PHPUnit\\Framework\\TestResult::stop", "doc": "&quot;Marks that the test run should stop.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_getCodeCoverage", "name": "PHPUnit\\Framework\\TestResult::getCodeCoverage", "doc": "&quot;Returns the code coverage object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_setCodeCoverage", "name": "PHPUnit\\Framework\\TestResult::setCodeCoverage", "doc": "&quot;Sets the code coverage object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_convertErrorsToExceptions", "name": "PHPUnit\\Framework\\TestResult::convertErrorsToExceptions", "doc": "&quot;Enables or disables the error-to-exception conversion.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_getConvertErrorsToExceptions", "name": "PHPUnit\\Framework\\TestResult::getConvertErrorsToExceptions", "doc": "&quot;Returns the error-to-exception conversion setting.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_stopOnError", "name": "PHPUnit\\Framework\\TestResult::stopOnError", "doc": "&quot;Enables or disables the stopping when an error occurs.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_stopOnFailure", "name": "PHPUnit\\Framework\\TestResult::stopOnFailure", "doc": "&quot;Enables or disables the stopping when a failure occurs.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_stopOnWarning", "name": "PHPUnit\\Framework\\TestResult::stopOnWarning", "doc": "&quot;Enables or disables the stopping when a warning occurs.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_beStrictAboutTestsThatDoNotTestAnything", "name": "PHPUnit\\Framework\\TestResult::beStrictAboutTestsThatDoNotTestAnything", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_isStrictAboutTestsThatDoNotTestAnything", "name": "PHPUnit\\Framework\\TestResult::isStrictAboutTestsThatDoNotTestAnything", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_beStrictAboutOutputDuringTests", "name": "PHPUnit\\Framework\\TestResult::beStrictAboutOutputDuringTests", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_isStrictAboutOutputDuringTests", "name": "PHPUnit\\Framework\\TestResult::isStrictAboutOutputDuringTests", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_beStrictAboutResourceUsageDuringSmallTests", "name": "PHPUnit\\Framework\\TestResult::beStrictAboutResourceUsageDuringSmallTests", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_isStrictAboutResourceUsageDuringSmallTests", "name": "PHPUnit\\Framework\\TestResult::isStrictAboutResourceUsageDuringSmallTests", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_enforceTimeLimit", "name": "PHPUnit\\Framework\\TestResult::enforceTimeLimit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_enforcesTimeLimit", "name": "PHPUnit\\Framework\\TestResult::enforcesTimeLimit", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_beStrictAboutTodoAnnotatedTests", "name": "PHPUnit\\Framework\\TestResult::beStrictAboutTodoAnnotatedTests", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_isStrictAboutTodoAnnotatedTests", "name": "PHPUnit\\Framework\\TestResult::isStrictAboutTodoAnnotatedTests", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_stopOnRisky", "name": "PHPUnit\\Framework\\TestResult::stopOnRisky", "doc": "&quot;Enables or disables the stopping for risky tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_stopOnIncomplete", "name": "PHPUnit\\Framework\\TestResult::stopOnIncomplete", "doc": "&quot;Enables or disables the stopping for incomplete tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_stopOnSkipped", "name": "PHPUnit\\Framework\\TestResult::stopOnSkipped", "doc": "&quot;Enables or disables the stopping for skipped tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_time", "name": "PHPUnit\\Framework\\TestResult::time", "doc": "&quot;Returns the time spent running the tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_wasSuccessful", "name": "PHPUnit\\Framework\\TestResult::wasSuccessful", "doc": "&quot;Returns whether the entire test was successful or not.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_setTimeoutForSmallTests", "name": "PHPUnit\\Framework\\TestResult::setTimeoutForSmallTests", "doc": "&quot;Sets the timeout for small tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_setTimeoutForMediumTests", "name": "PHPUnit\\Framework\\TestResult::setTimeoutForMediumTests", "doc": "&quot;Sets the timeout for medium tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_setTimeoutForLargeTests", "name": "PHPUnit\\Framework\\TestResult::setTimeoutForLargeTests", "doc": "&quot;Sets the timeout for large tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_getTimeoutForLargeTests", "name": "PHPUnit\\Framework\\TestResult::getTimeoutForLargeTests", "doc": "&quot;Returns the set timeout for large tests.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_setRegisterMockObjectsFromTestArgumentsRecursively", "name": "PHPUnit\\Framework\\TestResult::setRegisterMockObjectsFromTestArgumentsRecursively", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestResult", "fromLink": "PHPUnit/Framework/TestResult.html", "link": "PHPUnit/Framework/TestResult.html#method_getHierarchy", "name": "PHPUnit\\Framework\\TestResult::getHierarchy", "doc": "&quot;Returns the class hierarchy for a given class.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/TestSuite.html", "name": "PHPUnit\\Framework\\TestSuite", "doc": "&quot;A TestSuite is a composite of Tests. It runs a collection of test cases.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method___construct", "name": "PHPUnit\\Framework\\TestSuite::__construct", "doc": "&quot;Constructs a new TestSuite:&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_toString", "name": "PHPUnit\\Framework\\TestSuite::toString", "doc": "&quot;Returns a string representation of the test suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_addTest", "name": "PHPUnit\\Framework\\TestSuite::addTest", "doc": "&quot;Adds a test to the suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_addTestSuite", "name": "PHPUnit\\Framework\\TestSuite::addTestSuite", "doc": "&quot;Adds the tests from the given class to the suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_addTestFile", "name": "PHPUnit\\Framework\\TestSuite::addTestFile", "doc": "&quot;Wraps both &lt;code&gt;addTest()&lt;\/code&gt; and &lt;code&gt;addTestSuite&lt;\/code&gt;\nas well as the separate import statements for the user&#039;s convenience.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_addTestFiles", "name": "PHPUnit\\Framework\\TestSuite::addTestFiles", "doc": "&quot;Wrapper for addTestFile() that adds multiple test files.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_count", "name": "PHPUnit\\Framework\\TestSuite::count", "doc": "&quot;Counts the number of test cases that will be run by this test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_createTest", "name": "PHPUnit\\Framework\\TestSuite::createTest", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_createResult", "name": "PHPUnit\\Framework\\TestSuite::createResult", "doc": "&quot;Creates a default TestResult object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_getName", "name": "PHPUnit\\Framework\\TestSuite::getName", "doc": "&quot;Returns the name of the suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_getGroups", "name": "PHPUnit\\Framework\\TestSuite::getGroups", "doc": "&quot;Returns the test groups of the suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_getGroupDetails", "name": "PHPUnit\\Framework\\TestSuite::getGroupDetails", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_setGroupDetails", "name": "PHPUnit\\Framework\\TestSuite::setGroupDetails", "doc": "&quot;Set tests groups of the test case&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_run", "name": "PHPUnit\\Framework\\TestSuite::run", "doc": "&quot;Runs the tests and collects their result in a TestResult.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_setRunTestInSeparateProcess", "name": "PHPUnit\\Framework\\TestSuite::setRunTestInSeparateProcess", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_runTest", "name": "PHPUnit\\Framework\\TestSuite::runTest", "doc": "&quot;Runs a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_setName", "name": "PHPUnit\\Framework\\TestSuite::setName", "doc": "&quot;Sets the name of the suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_testAt", "name": "PHPUnit\\Framework\\TestSuite::testAt", "doc": "&quot;Returns the test at the given index.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_tests", "name": "PHPUnit\\Framework\\TestSuite::tests", "doc": "&quot;Returns the tests as an enumeration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_setTests", "name": "PHPUnit\\Framework\\TestSuite::setTests", "doc": "&quot;Set tests of the test suite&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_markTestSuiteSkipped", "name": "PHPUnit\\Framework\\TestSuite::markTestSuiteSkipped", "doc": "&quot;Mark the test suite as skipped.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_addTestMethod", "name": "PHPUnit\\Framework\\TestSuite::addTestMethod", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_isTestMethod", "name": "PHPUnit\\Framework\\TestSuite::isTestMethod", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_warning", "name": "PHPUnit\\Framework\\TestSuite::warning", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_skipTest", "name": "PHPUnit\\Framework\\TestSuite::skipTest", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_incompleteTest", "name": "PHPUnit\\Framework\\TestSuite::incompleteTest", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_setbeStrictAboutChangesToGlobalState", "name": "PHPUnit\\Framework\\TestSuite::setbeStrictAboutChangesToGlobalState", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_setBackupGlobals", "name": "PHPUnit\\Framework\\TestSuite::setBackupGlobals", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_setBackupStaticAttributes", "name": "PHPUnit\\Framework\\TestSuite::setBackupStaticAttributes", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_getIterator", "name": "PHPUnit\\Framework\\TestSuite::getIterator", "doc": "&quot;Returns an iterator for this test suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_injectFilter", "name": "PHPUnit\\Framework\\TestSuite::injectFilter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_setUp", "name": "PHPUnit\\Framework\\TestSuite::setUp", "doc": "&quot;Template Method that is called before the tests\nof this test suite are run.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuite", "fromLink": "PHPUnit/Framework/TestSuite.html", "link": "PHPUnit/Framework/TestSuite.html#method_tearDown", "name": "PHPUnit\\Framework\\TestSuite::tearDown", "doc": "&quot;Template Method that is called after the tests\nof this test suite have finished running.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/TestSuiteIterator.html", "name": "PHPUnit\\Framework\\TestSuiteIterator", "doc": "&quot;Iterator for test suites.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuiteIterator", "fromLink": "PHPUnit/Framework/TestSuiteIterator.html", "link": "PHPUnit/Framework/TestSuiteIterator.html#method___construct", "name": "PHPUnit\\Framework\\TestSuiteIterator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuiteIterator", "fromLink": "PHPUnit/Framework/TestSuiteIterator.html", "link": "PHPUnit/Framework/TestSuiteIterator.html#method_rewind", "name": "PHPUnit\\Framework\\TestSuiteIterator::rewind", "doc": "&quot;Rewinds the Iterator to the first element.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuiteIterator", "fromLink": "PHPUnit/Framework/TestSuiteIterator.html", "link": "PHPUnit/Framework/TestSuiteIterator.html#method_valid", "name": "PHPUnit\\Framework\\TestSuiteIterator::valid", "doc": "&quot;Checks if there is a current element after calls to rewind() or next().&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuiteIterator", "fromLink": "PHPUnit/Framework/TestSuiteIterator.html", "link": "PHPUnit/Framework/TestSuiteIterator.html#method_key", "name": "PHPUnit\\Framework\\TestSuiteIterator::key", "doc": "&quot;Returns the key of the current element.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuiteIterator", "fromLink": "PHPUnit/Framework/TestSuiteIterator.html", "link": "PHPUnit/Framework/TestSuiteIterator.html#method_current", "name": "PHPUnit\\Framework\\TestSuiteIterator::current", "doc": "&quot;Returns the current element.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuiteIterator", "fromLink": "PHPUnit/Framework/TestSuiteIterator.html", "link": "PHPUnit/Framework/TestSuiteIterator.html#method_next", "name": "PHPUnit\\Framework\\TestSuiteIterator::next", "doc": "&quot;Moves forward to next element.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuiteIterator", "fromLink": "PHPUnit/Framework/TestSuiteIterator.html", "link": "PHPUnit/Framework/TestSuiteIterator.html#method_getChildren", "name": "PHPUnit\\Framework\\TestSuiteIterator::getChildren", "doc": "&quot;Returns the sub iterator for the current element.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\TestSuiteIterator", "fromLink": "PHPUnit/Framework/TestSuiteIterator.html", "link": "PHPUnit/Framework/TestSuiteIterator.html#method_hasChildren", "name": "PHPUnit\\Framework\\TestSuiteIterator::hasChildren", "doc": "&quot;Checks whether the current element has children.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/UnintentionallyCoveredCodeError.html", "name": "PHPUnit\\Framework\\UnintentionallyCoveredCodeError", "doc": "&quot;Extension to PHPUnit&lt;em&gt;Framework&lt;\/em&gt;AssertionFailedError to mark the special\ncase of a test that unintentionally covers code.&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/Warning.html", "name": "PHPUnit\\Framework\\Warning", "doc": "&quot;Thrown when an there is a warning.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\Warning", "fromLink": "PHPUnit/Framework/Warning.html", "link": "PHPUnit/Framework/Warning.html#method_toString", "name": "PHPUnit\\Framework\\Warning::toString", "doc": "&quot;Wrapper for getMessage() which is declared as final.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Framework", "fromLink": "PHPUnit/Framework.html", "link": "PHPUnit/Framework/WarningTestCase.html", "name": "PHPUnit\\Framework\\WarningTestCase", "doc": "&quot;A warning.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Framework\\WarningTestCase", "fromLink": "PHPUnit/Framework/WarningTestCase.html", "link": "PHPUnit/Framework/WarningTestCase.html#method___construct", "name": "PHPUnit\\Framework\\WarningTestCase::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\WarningTestCase", "fromLink": "PHPUnit/Framework/WarningTestCase.html", "link": "PHPUnit/Framework/WarningTestCase.html#method_runTest", "name": "PHPUnit\\Framework\\WarningTestCase::runTest", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\WarningTestCase", "fromLink": "PHPUnit/Framework/WarningTestCase.html", "link": "PHPUnit/Framework/WarningTestCase.html#method_getMessage", "name": "PHPUnit\\Framework\\WarningTestCase::getMessage", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Framework\\WarningTestCase", "fromLink": "PHPUnit/Framework/WarningTestCase.html", "link": "PHPUnit/Framework/WarningTestCase.html#method_toString", "name": "PHPUnit\\Framework\\WarningTestCase::toString", "doc": "&quot;Returns a string representation of the test case.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Runner", "fromLink": "PHPUnit/Runner.html", "link": "PHPUnit/Runner/BaseTestRunner.html", "name": "PHPUnit\\Runner\\BaseTestRunner", "doc": "&quot;Base class for all test runners.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Runner\\BaseTestRunner", "fromLink": "PHPUnit/Runner/BaseTestRunner.html", "link": "PHPUnit/Runner/BaseTestRunner.html#method_getLoader", "name": "PHPUnit\\Runner\\BaseTestRunner::getLoader", "doc": "&quot;Returns the loader to be used.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\BaseTestRunner", "fromLink": "PHPUnit/Runner/BaseTestRunner.html", "link": "PHPUnit/Runner/BaseTestRunner.html#method_getTest", "name": "PHPUnit\\Runner\\BaseTestRunner::getTest", "doc": "&quot;Returns the Test corresponding to the given suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\BaseTestRunner", "fromLink": "PHPUnit/Runner/BaseTestRunner.html", "link": "PHPUnit/Runner/BaseTestRunner.html#method_loadSuiteClass", "name": "PHPUnit\\Runner\\BaseTestRunner::loadSuiteClass", "doc": "&quot;Returns the loaded ReflectionClass for a suite name.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\BaseTestRunner", "fromLink": "PHPUnit/Runner/BaseTestRunner.html", "link": "PHPUnit/Runner/BaseTestRunner.html#method_clearStatus", "name": "PHPUnit\\Runner\\BaseTestRunner::clearStatus", "doc": "&quot;Clears the status message.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\BaseTestRunner", "fromLink": "PHPUnit/Runner/BaseTestRunner.html", "link": "PHPUnit/Runner/BaseTestRunner.html#method_runFailed", "name": "PHPUnit\\Runner\\BaseTestRunner::runFailed", "doc": "&quot;Override to define how to handle a failed loading of\na test suite.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Runner", "fromLink": "PHPUnit/Runner.html", "link": "PHPUnit/Runner/Exception.html", "name": "PHPUnit\\Runner\\Exception", "doc": "&quot;&quot;"},
                    
            {"type": "Class", "fromName": "PHPUnit\\Runner\\Filter", "fromLink": "PHPUnit/Runner/Filter.html", "link": "PHPUnit/Runner/Filter/ExcludeGroupFilterIterator.html", "name": "PHPUnit\\Runner\\Filter\\ExcludeGroupFilterIterator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Runner\\Filter\\ExcludeGroupFilterIterator", "fromLink": "PHPUnit/Runner/Filter/ExcludeGroupFilterIterator.html", "link": "PHPUnit/Runner/Filter/ExcludeGroupFilterIterator.html#method_doAccept", "name": "PHPUnit\\Runner\\Filter\\ExcludeGroupFilterIterator::doAccept", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Runner\\Filter", "fromLink": "PHPUnit/Runner/Filter.html", "link": "PHPUnit/Runner/Filter/Factory.html", "name": "PHPUnit\\Runner\\Filter\\Factory", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Runner\\Filter\\Factory", "fromLink": "PHPUnit/Runner/Filter/Factory.html", "link": "PHPUnit/Runner/Filter/Factory.html#method_addFilter", "name": "PHPUnit\\Runner\\Filter\\Factory::addFilter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\Filter\\Factory", "fromLink": "PHPUnit/Runner/Filter/Factory.html", "link": "PHPUnit/Runner/Filter/Factory.html#method_factory", "name": "PHPUnit\\Runner\\Filter\\Factory::factory", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Runner\\Filter", "fromLink": "PHPUnit/Runner/Filter.html", "link": "PHPUnit/Runner/Filter/GroupFilterIterator.html", "name": "PHPUnit\\Runner\\Filter\\GroupFilterIterator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Runner\\Filter\\GroupFilterIterator", "fromLink": "PHPUnit/Runner/Filter/GroupFilterIterator.html", "link": "PHPUnit/Runner/Filter/GroupFilterIterator.html#method___construct", "name": "PHPUnit\\Runner\\Filter\\GroupFilterIterator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\Filter\\GroupFilterIterator", "fromLink": "PHPUnit/Runner/Filter/GroupFilterIterator.html", "link": "PHPUnit/Runner/Filter/GroupFilterIterator.html#method_accept", "name": "PHPUnit\\Runner\\Filter\\GroupFilterIterator::accept", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\Filter\\GroupFilterIterator", "fromLink": "PHPUnit/Runner/Filter/GroupFilterIterator.html", "link": "PHPUnit/Runner/Filter/GroupFilterIterator.html#method_doAccept", "name": "PHPUnit\\Runner\\Filter\\GroupFilterIterator::doAccept", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Runner\\Filter", "fromLink": "PHPUnit/Runner/Filter.html", "link": "PHPUnit/Runner/Filter/IncludeGroupFilterIterator.html", "name": "PHPUnit\\Runner\\Filter\\IncludeGroupFilterIterator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Runner\\Filter\\IncludeGroupFilterIterator", "fromLink": "PHPUnit/Runner/Filter/IncludeGroupFilterIterator.html", "link": "PHPUnit/Runner/Filter/IncludeGroupFilterIterator.html#method_doAccept", "name": "PHPUnit\\Runner\\Filter\\IncludeGroupFilterIterator::doAccept", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Runner\\Filter", "fromLink": "PHPUnit/Runner/Filter.html", "link": "PHPUnit/Runner/Filter/NameFilterIterator.html", "name": "PHPUnit\\Runner\\Filter\\NameFilterIterator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Runner\\Filter\\NameFilterIterator", "fromLink": "PHPUnit/Runner/Filter/NameFilterIterator.html", "link": "PHPUnit/Runner/Filter/NameFilterIterator.html#method___construct", "name": "PHPUnit\\Runner\\Filter\\NameFilterIterator::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\Filter\\NameFilterIterator", "fromLink": "PHPUnit/Runner/Filter/NameFilterIterator.html", "link": "PHPUnit/Runner/Filter/NameFilterIterator.html#method_setFilter", "name": "PHPUnit\\Runner\\Filter\\NameFilterIterator::setFilter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\Filter\\NameFilterIterator", "fromLink": "PHPUnit/Runner/Filter/NameFilterIterator.html", "link": "PHPUnit/Runner/Filter/NameFilterIterator.html#method_accept", "name": "PHPUnit\\Runner\\Filter\\NameFilterIterator::accept", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Runner", "fromLink": "PHPUnit/Runner.html", "link": "PHPUnit/Runner/PhptTestCase.html", "name": "PHPUnit\\Runner\\PhptTestCase", "doc": "&quot;Runner for PHPT test cases.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Runner\\PhptTestCase", "fromLink": "PHPUnit/Runner/PhptTestCase.html", "link": "PHPUnit/Runner/PhptTestCase.html#method___construct", "name": "PHPUnit\\Runner\\PhptTestCase::__construct", "doc": "&quot;Constructs a test case with the given filename.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\PhptTestCase", "fromLink": "PHPUnit/Runner/PhptTestCase.html", "link": "PHPUnit/Runner/PhptTestCase.html#method_count", "name": "PHPUnit\\Runner\\PhptTestCase::count", "doc": "&quot;Counts the number of test cases executed by run(TestResult result).&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\PhptTestCase", "fromLink": "PHPUnit/Runner/PhptTestCase.html", "link": "PHPUnit/Runner/PhptTestCase.html#method_run", "name": "PHPUnit\\Runner\\PhptTestCase::run", "doc": "&quot;Runs a test and collects its result in a TestResult instance.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\PhptTestCase", "fromLink": "PHPUnit/Runner/PhptTestCase.html", "link": "PHPUnit/Runner/PhptTestCase.html#method_getName", "name": "PHPUnit\\Runner\\PhptTestCase::getName", "doc": "&quot;Returns the name of the test case.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\PhptTestCase", "fromLink": "PHPUnit/Runner/PhptTestCase.html", "link": "PHPUnit/Runner/PhptTestCase.html#method_toString", "name": "PHPUnit\\Runner\\PhptTestCase::toString", "doc": "&quot;Returns a string representation of the test case.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\PhptTestCase", "fromLink": "PHPUnit/Runner/PhptTestCase.html", "link": "PHPUnit/Runner/PhptTestCase.html#method_parseIniSection", "name": "PHPUnit\\Runner\\PhptTestCase::parseIniSection", "doc": "&quot;Parse --INI-- section key value pairs and return as array.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\PhptTestCase", "fromLink": "PHPUnit/Runner/PhptTestCase.html", "link": "PHPUnit/Runner/PhptTestCase.html#method_parseEnvSection", "name": "PHPUnit\\Runner\\PhptTestCase::parseEnvSection", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Runner", "fromLink": "PHPUnit/Runner.html", "link": "PHPUnit/Runner/StandardTestSuiteLoader.html", "name": "PHPUnit\\Runner\\StandardTestSuiteLoader", "doc": "&quot;The standard test suite loader.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Runner\\StandardTestSuiteLoader", "fromLink": "PHPUnit/Runner/StandardTestSuiteLoader.html", "link": "PHPUnit/Runner/StandardTestSuiteLoader.html#method_load", "name": "PHPUnit\\Runner\\StandardTestSuiteLoader::load", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\StandardTestSuiteLoader", "fromLink": "PHPUnit/Runner/StandardTestSuiteLoader.html", "link": "PHPUnit/Runner/StandardTestSuiteLoader.html#method_reload", "name": "PHPUnit\\Runner\\StandardTestSuiteLoader::reload", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Runner", "fromLink": "PHPUnit/Runner.html", "link": "PHPUnit/Runner/TestSuiteLoader.html", "name": "PHPUnit\\Runner\\TestSuiteLoader", "doc": "&quot;An interface to define how a test suite should be loaded.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Runner\\TestSuiteLoader", "fromLink": "PHPUnit/Runner/TestSuiteLoader.html", "link": "PHPUnit/Runner/TestSuiteLoader.html#method_load", "name": "PHPUnit\\Runner\\TestSuiteLoader::load", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\TestSuiteLoader", "fromLink": "PHPUnit/Runner/TestSuiteLoader.html", "link": "PHPUnit/Runner/TestSuiteLoader.html#method_reload", "name": "PHPUnit\\Runner\\TestSuiteLoader::reload", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Runner", "fromLink": "PHPUnit/Runner.html", "link": "PHPUnit/Runner/Version.html", "name": "PHPUnit\\Runner\\Version", "doc": "&quot;This class defines the current version of PHPUnit.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Runner\\Version", "fromLink": "PHPUnit/Runner/Version.html", "link": "PHPUnit/Runner/Version.html#method_id", "name": "PHPUnit\\Runner\\Version::id", "doc": "&quot;Returns the current version of PHPUnit.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\Version", "fromLink": "PHPUnit/Runner/Version.html", "link": "PHPUnit/Runner/Version.html#method_series", "name": "PHPUnit\\Runner\\Version::series", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\Version", "fromLink": "PHPUnit/Runner/Version.html", "link": "PHPUnit/Runner/Version.html#method_getVersionString", "name": "PHPUnit\\Runner\\Version::getVersionString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Runner\\Version", "fromLink": "PHPUnit/Runner/Version.html", "link": "PHPUnit/Runner/Version.html#method_getReleaseChannel", "name": "PHPUnit\\Runner\\Version::getReleaseChannel", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\TextUI", "fromLink": "PHPUnit/TextUI.html", "link": "PHPUnit/TextUI/Command.html", "name": "PHPUnit\\TextUI\\Command", "doc": "&quot;A TestRunner for the Command Line Interface (CLI)\nPHP SAPI Module.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\TextUI\\Command", "fromLink": "PHPUnit/TextUI/Command.html", "link": "PHPUnit/TextUI/Command.html#method_main", "name": "PHPUnit\\TextUI\\Command::main", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\Command", "fromLink": "PHPUnit/TextUI/Command.html", "link": "PHPUnit/TextUI/Command.html#method_run", "name": "PHPUnit\\TextUI\\Command::run", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\Command", "fromLink": "PHPUnit/TextUI/Command.html", "link": "PHPUnit/TextUI/Command.html#method_createRunner", "name": "PHPUnit\\TextUI\\Command::createRunner", "doc": "&quot;Create a TestRunner, override in subclasses.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\Command", "fromLink": "PHPUnit/TextUI/Command.html", "link": "PHPUnit/TextUI/Command.html#method_handleArguments", "name": "PHPUnit\\TextUI\\Command::handleArguments", "doc": "&quot;Handles the command-line arguments.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\Command", "fromLink": "PHPUnit/TextUI/Command.html", "link": "PHPUnit/TextUI/Command.html#method_handleLoader", "name": "PHPUnit\\TextUI\\Command::handleLoader", "doc": "&quot;Handles the loading of the PHPUnit&lt;em&gt;Runner&lt;\/em&gt;TestSuiteLoader implementation.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\Command", "fromLink": "PHPUnit/TextUI/Command.html", "link": "PHPUnit/TextUI/Command.html#method_handlePrinter", "name": "PHPUnit\\TextUI\\Command::handlePrinter", "doc": "&quot;Handles the loading of the PHPUnit&lt;em&gt;Util&lt;\/em&gt;Printer implementation.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\Command", "fromLink": "PHPUnit/TextUI/Command.html", "link": "PHPUnit/TextUI/Command.html#method_handleBootstrap", "name": "PHPUnit\\TextUI\\Command::handleBootstrap", "doc": "&quot;Loads a bootstrap file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\Command", "fromLink": "PHPUnit/TextUI/Command.html", "link": "PHPUnit/TextUI/Command.html#method_handleVersionCheck", "name": "PHPUnit\\TextUI\\Command::handleVersionCheck", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\Command", "fromLink": "PHPUnit/TextUI/Command.html", "link": "PHPUnit/TextUI/Command.html#method_showHelp", "name": "PHPUnit\\TextUI\\Command::showHelp", "doc": "&quot;Show the help message.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\Command", "fromLink": "PHPUnit/TextUI/Command.html", "link": "PHPUnit/TextUI/Command.html#method_handleCustomTestSuite", "name": "PHPUnit\\TextUI\\Command::handleCustomTestSuite", "doc": "&quot;Custom callback for test suite discovery.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\TextUI", "fromLink": "PHPUnit/TextUI.html", "link": "PHPUnit/TextUI/ResultPrinter.html", "name": "PHPUnit\\TextUI\\ResultPrinter", "doc": "&quot;Prints the result of a TextUI TestRunner run.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method___construct", "name": "PHPUnit\\TextUI\\ResultPrinter::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printResult", "name": "PHPUnit\\TextUI\\ResultPrinter::printResult", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printDefects", "name": "PHPUnit\\TextUI\\ResultPrinter::printDefects", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printDefect", "name": "PHPUnit\\TextUI\\ResultPrinter::printDefect", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printDefectHeader", "name": "PHPUnit\\TextUI\\ResultPrinter::printDefectHeader", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printDefectTrace", "name": "PHPUnit\\TextUI\\ResultPrinter::printDefectTrace", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printErrors", "name": "PHPUnit\\TextUI\\ResultPrinter::printErrors", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printFailures", "name": "PHPUnit\\TextUI\\ResultPrinter::printFailures", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printWarnings", "name": "PHPUnit\\TextUI\\ResultPrinter::printWarnings", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printIncompletes", "name": "PHPUnit\\TextUI\\ResultPrinter::printIncompletes", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printRisky", "name": "PHPUnit\\TextUI\\ResultPrinter::printRisky", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printSkipped", "name": "PHPUnit\\TextUI\\ResultPrinter::printSkipped", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printHeader", "name": "PHPUnit\\TextUI\\ResultPrinter::printHeader", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printFooter", "name": "PHPUnit\\TextUI\\ResultPrinter::printFooter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_printWaitPrompt", "name": "PHPUnit\\TextUI\\ResultPrinter::printWaitPrompt", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_addError", "name": "PHPUnit\\TextUI\\ResultPrinter::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_addFailure", "name": "PHPUnit\\TextUI\\ResultPrinter::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_addWarning", "name": "PHPUnit\\TextUI\\ResultPrinter::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_addIncompleteTest", "name": "PHPUnit\\TextUI\\ResultPrinter::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_addRiskyTest", "name": "PHPUnit\\TextUI\\ResultPrinter::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_addSkippedTest", "name": "PHPUnit\\TextUI\\ResultPrinter::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_startTestSuite", "name": "PHPUnit\\TextUI\\ResultPrinter::startTestSuite", "doc": "&quot;A testsuite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_endTestSuite", "name": "PHPUnit\\TextUI\\ResultPrinter::endTestSuite", "doc": "&quot;A testsuite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_startTest", "name": "PHPUnit\\TextUI\\ResultPrinter::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_endTest", "name": "PHPUnit\\TextUI\\ResultPrinter::endTest", "doc": "&quot;A test ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_writeProgress", "name": "PHPUnit\\TextUI\\ResultPrinter::writeProgress", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_writeNewLine", "name": "PHPUnit\\TextUI\\ResultPrinter::writeNewLine", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_formatWithColor", "name": "PHPUnit\\TextUI\\ResultPrinter::formatWithColor", "doc": "&quot;Formats a buffer with a specified ANSI color sequence if colors are\nenabled.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_writeWithColor", "name": "PHPUnit\\TextUI\\ResultPrinter::writeWithColor", "doc": "&quot;Writes a buffer out with a color sequence if colors are enabled.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\ResultPrinter", "fromLink": "PHPUnit/TextUI/ResultPrinter.html", "link": "PHPUnit/TextUI/ResultPrinter.html#method_writeProgressWithColor", "name": "PHPUnit\\TextUI\\ResultPrinter::writeProgressWithColor", "doc": "&quot;Writes progress with a color sequence if colors are enabled.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\TextUI", "fromLink": "PHPUnit/TextUI.html", "link": "PHPUnit/TextUI/TestRunner.html", "name": "PHPUnit\\TextUI\\TestRunner", "doc": "&quot;A TestRunner for the Command Line Interface (CLI)\nPHP SAPI Module.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\TextUI\\TestRunner", "fromLink": "PHPUnit/TextUI/TestRunner.html", "link": "PHPUnit/TextUI/TestRunner.html#method___construct", "name": "PHPUnit\\TextUI\\TestRunner::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\TestRunner", "fromLink": "PHPUnit/TextUI/TestRunner.html", "link": "PHPUnit/TextUI/TestRunner.html#method_run", "name": "PHPUnit\\TextUI\\TestRunner::run", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\TestRunner", "fromLink": "PHPUnit/TextUI/TestRunner.html", "link": "PHPUnit/TextUI/TestRunner.html#method_createTestResult", "name": "PHPUnit\\TextUI\\TestRunner::createTestResult", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\TestRunner", "fromLink": "PHPUnit/TextUI/TestRunner.html", "link": "PHPUnit/TextUI/TestRunner.html#method_doRun", "name": "PHPUnit\\TextUI\\TestRunner::doRun", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\TestRunner", "fromLink": "PHPUnit/TextUI/TestRunner.html", "link": "PHPUnit/TextUI/TestRunner.html#method_setPrinter", "name": "PHPUnit\\TextUI\\TestRunner::setPrinter", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\TestRunner", "fromLink": "PHPUnit/TextUI/TestRunner.html", "link": "PHPUnit/TextUI/TestRunner.html#method_runFailed", "name": "PHPUnit\\TextUI\\TestRunner::runFailed", "doc": "&quot;Override to define how to handle a failed loading of\na test suite.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\TestRunner", "fromLink": "PHPUnit/TextUI/TestRunner.html", "link": "PHPUnit/TextUI/TestRunner.html#method_write", "name": "PHPUnit\\TextUI\\TestRunner::write", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\TestRunner", "fromLink": "PHPUnit/TextUI/TestRunner.html", "link": "PHPUnit/TextUI/TestRunner.html#method_getLoader", "name": "PHPUnit\\TextUI\\TestRunner::getLoader", "doc": "&quot;Returns the loader to be used.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\TextUI\\TestRunner", "fromLink": "PHPUnit/TextUI/TestRunner.html", "link": "PHPUnit/TextUI/TestRunner.html#method_handleConfiguration", "name": "PHPUnit\\TextUI\\TestRunner::handleConfiguration", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/Blacklist.html", "name": "PHPUnit\\Util\\Blacklist", "doc": "&quot;Utility class for blacklisting PHPUnit&#039;s own source code files.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\Blacklist", "fromLink": "PHPUnit/Util/Blacklist.html", "link": "PHPUnit/Util/Blacklist.html#method_getBlacklistedDirectories", "name": "PHPUnit\\Util\\Blacklist::getBlacklistedDirectories", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Blacklist", "fromLink": "PHPUnit/Util/Blacklist.html", "link": "PHPUnit/Util/Blacklist.html#method_isBlacklisted", "name": "PHPUnit\\Util\\Blacklist::isBlacklisted", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/Configuration.html", "name": "PHPUnit\\Util\\Configuration", "doc": "&quot;Wrapper for the PHPUnit XML configuration file.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method___construct", "name": "PHPUnit\\Util\\Configuration::__construct", "doc": "&quot;Loads a PHPUnit configuration file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getInstance", "name": "PHPUnit\\Util\\Configuration::getInstance", "doc": "&quot;Returns a PHPUnit configuration object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getFilename", "name": "PHPUnit\\Util\\Configuration::getFilename", "doc": "&quot;Returns the realpath to the configuration file.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getFilterConfiguration", "name": "PHPUnit\\Util\\Configuration::getFilterConfiguration", "doc": "&quot;Returns the configuration for SUT filtering.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getGroupConfiguration", "name": "PHPUnit\\Util\\Configuration::getGroupConfiguration", "doc": "&quot;Returns the configuration for groups.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getTestdoxGroupConfiguration", "name": "PHPUnit\\Util\\Configuration::getTestdoxGroupConfiguration", "doc": "&quot;Returns the configuration for testdox groups.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getListenerConfiguration", "name": "PHPUnit\\Util\\Configuration::getListenerConfiguration", "doc": "&quot;Returns the configuration for listeners.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getLoggingConfiguration", "name": "PHPUnit\\Util\\Configuration::getLoggingConfiguration", "doc": "&quot;Returns the logging configuration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getPHPConfiguration", "name": "PHPUnit\\Util\\Configuration::getPHPConfiguration", "doc": "&quot;Returns the PHP configuration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_handlePHPConfiguration", "name": "PHPUnit\\Util\\Configuration::handlePHPConfiguration", "doc": "&quot;Handles the PHP configuration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getPHPUnitConfiguration", "name": "PHPUnit\\Util\\Configuration::getPHPUnitConfiguration", "doc": "&quot;Returns the PHPUnit configuration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getTestSuiteConfiguration", "name": "PHPUnit\\Util\\Configuration::getTestSuiteConfiguration", "doc": "&quot;Returns the test suite configuration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getTestSuiteNames", "name": "PHPUnit\\Util\\Configuration::getTestSuiteNames", "doc": "&quot;Returns the test suite names from the configuration.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getTestSuite", "name": "PHPUnit\\Util\\Configuration::getTestSuite", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getBoolean", "name": "PHPUnit\\Util\\Configuration::getBoolean", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_getInteger", "name": "PHPUnit\\Util\\Configuration::getInteger", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_readFilterDirectories", "name": "PHPUnit\\Util\\Configuration::readFilterDirectories", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_readFilterFiles", "name": "PHPUnit\\Util\\Configuration::readFilterFiles", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Configuration", "fromLink": "PHPUnit/Util/Configuration.html", "link": "PHPUnit/Util/Configuration.html#method_toAbsolutePath", "name": "PHPUnit\\Util\\Configuration::toAbsolutePath", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/ConfigurationGenerator.html", "name": "PHPUnit\\Util\\ConfigurationGenerator", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\ConfigurationGenerator", "fromLink": "PHPUnit/Util/ConfigurationGenerator.html", "link": "PHPUnit/Util/ConfigurationGenerator.html#method_generateDefaultConfiguration", "name": "PHPUnit\\Util\\ConfigurationGenerator::generateDefaultConfiguration", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/ErrorHandler.html", "name": "PHPUnit\\Util\\ErrorHandler", "doc": "&quot;Error handler that converts PHP errors and warnings to exceptions.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\ErrorHandler", "fromLink": "PHPUnit/Util/ErrorHandler.html", "link": "PHPUnit/Util/ErrorHandler.html#method_getErrorStack", "name": "PHPUnit\\Util\\ErrorHandler::getErrorStack", "doc": "&quot;Returns the error stack.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\ErrorHandler", "fromLink": "PHPUnit/Util/ErrorHandler.html", "link": "PHPUnit/Util/ErrorHandler.html#method_handleError", "name": "PHPUnit\\Util\\ErrorHandler::handleError", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\ErrorHandler", "fromLink": "PHPUnit/Util/ErrorHandler.html", "link": "PHPUnit/Util/ErrorHandler.html#method_handleErrorOnce", "name": "PHPUnit\\Util\\ErrorHandler::handleErrorOnce", "doc": "&quot;Registers an error handler and returns a function that will restore\nthe previous handler when invoked&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/Fileloader.html", "name": "PHPUnit\\Util\\Fileloader", "doc": "&quot;Utility methods to load PHP sourcefiles.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\Fileloader", "fromLink": "PHPUnit/Util/Fileloader.html", "link": "PHPUnit/Util/Fileloader.html#method_checkAndLoad", "name": "PHPUnit\\Util\\Fileloader::checkAndLoad", "doc": "&quot;Checks if a PHP sourcefile is readable.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Fileloader", "fromLink": "PHPUnit/Util/Fileloader.html", "link": "PHPUnit/Util/Fileloader.html#method_load", "name": "PHPUnit\\Util\\Fileloader::load", "doc": "&quot;Loads a PHP sourcefile.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/Filesystem.html", "name": "PHPUnit\\Util\\Filesystem", "doc": "&quot;Filesystem helpers.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\Filesystem", "fromLink": "PHPUnit/Util/Filesystem.html", "link": "PHPUnit/Util/Filesystem.html#method_classNameToFilename", "name": "PHPUnit\\Util\\Filesystem::classNameToFilename", "doc": "&quot;Maps class names to source file names:\n  - PEAR CS:   Foo&lt;em&gt;Bar&lt;\/em&gt;Baz -&gt; Foo\/Bar\/Baz.php\n  - Namespace: Foo\\Bar\\Baz -&gt; Foo\/Bar\/Baz.php&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/Filter.html", "name": "PHPUnit\\Util\\Filter", "doc": "&quot;Utility class for code filtering.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\Filter", "fromLink": "PHPUnit/Util/Filter.html", "link": "PHPUnit/Util/Filter.html#method_getFilteredStacktrace", "name": "PHPUnit\\Util\\Filter::getFilteredStacktrace", "doc": "&quot;Filters stack frames from PHPUnit classes.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/Getopt.html", "name": "PHPUnit\\Util\\Getopt", "doc": "&quot;Command-line options parsing class.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\Getopt", "fromLink": "PHPUnit/Util/Getopt.html", "link": "PHPUnit/Util/Getopt.html#method_getopt", "name": "PHPUnit\\Util\\Getopt::getopt", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Getopt", "fromLink": "PHPUnit/Util/Getopt.html", "link": "PHPUnit/Util/Getopt.html#method_parseShortOption", "name": "PHPUnit\\Util\\Getopt::parseShortOption", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Getopt", "fromLink": "PHPUnit/Util/Getopt.html", "link": "PHPUnit/Util/Getopt.html#method_parseLongOption", "name": "PHPUnit\\Util\\Getopt::parseLongOption", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/GlobalState.html", "name": "PHPUnit\\Util\\GlobalState", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\GlobalState", "fromLink": "PHPUnit/Util/GlobalState.html", "link": "PHPUnit/Util/GlobalState.html#method_getIncludedFilesAsString", "name": "PHPUnit\\Util\\GlobalState::getIncludedFilesAsString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\GlobalState", "fromLink": "PHPUnit/Util/GlobalState.html", "link": "PHPUnit/Util/GlobalState.html#method_processIncludedFilesAsString", "name": "PHPUnit\\Util\\GlobalState::processIncludedFilesAsString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\GlobalState", "fromLink": "PHPUnit/Util/GlobalState.html", "link": "PHPUnit/Util/GlobalState.html#method_getIniSettingsAsString", "name": "PHPUnit\\Util\\GlobalState::getIniSettingsAsString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\GlobalState", "fromLink": "PHPUnit/Util/GlobalState.html", "link": "PHPUnit/Util/GlobalState.html#method_getConstantsAsString", "name": "PHPUnit\\Util\\GlobalState::getConstantsAsString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\GlobalState", "fromLink": "PHPUnit/Util/GlobalState.html", "link": "PHPUnit/Util/GlobalState.html#method_getGlobalsAsString", "name": "PHPUnit\\Util\\GlobalState::getGlobalsAsString", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\GlobalState", "fromLink": "PHPUnit/Util/GlobalState.html", "link": "PHPUnit/Util/GlobalState.html#method_getSuperGlobalArrays", "name": "PHPUnit\\Util\\GlobalState::getSuperGlobalArrays", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\GlobalState", "fromLink": "PHPUnit/Util/GlobalState.html", "link": "PHPUnit/Util/GlobalState.html#method_exportVariable", "name": "PHPUnit\\Util\\GlobalState::exportVariable", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\GlobalState", "fromLink": "PHPUnit/Util/GlobalState.html", "link": "PHPUnit/Util/GlobalState.html#method_arrayOnlyContainsScalars", "name": "PHPUnit\\Util\\GlobalState::arrayOnlyContainsScalars", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/InvalidArgumentHelper.html", "name": "PHPUnit\\Util\\InvalidArgumentHelper", "doc": "&quot;Factory for PHPUnit&lt;em&gt;Framework&lt;\/em&gt;Exception objects that are used to describe\ninvalid arguments passed to a function or method.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\InvalidArgumentHelper", "fromLink": "PHPUnit/Util/InvalidArgumentHelper.html", "link": "PHPUnit/Util/InvalidArgumentHelper.html#method_factory", "name": "PHPUnit\\Util\\InvalidArgumentHelper::factory", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util\\Log", "fromLink": "PHPUnit/Util/Log.html", "link": "PHPUnit/Util/Log/JUnit.html", "name": "PHPUnit\\Util\\Log\\JUnit", "doc": "&quot;A TestListener that generates a logfile of the test execution in XML markup.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method___construct", "name": "PHPUnit\\Util\\Log\\JUnit::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method_flush", "name": "PHPUnit\\Util\\Log\\JUnit::flush", "doc": "&quot;Flush buffer and close output.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method_addError", "name": "PHPUnit\\Util\\Log\\JUnit::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method_addWarning", "name": "PHPUnit\\Util\\Log\\JUnit::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method_addFailure", "name": "PHPUnit\\Util\\Log\\JUnit::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method_addIncompleteTest", "name": "PHPUnit\\Util\\Log\\JUnit::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method_addRiskyTest", "name": "PHPUnit\\Util\\Log\\JUnit::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method_addSkippedTest", "name": "PHPUnit\\Util\\Log\\JUnit::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method_startTestSuite", "name": "PHPUnit\\Util\\Log\\JUnit::startTestSuite", "doc": "&quot;A testsuite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method_endTestSuite", "name": "PHPUnit\\Util\\Log\\JUnit::endTestSuite", "doc": "&quot;A testsuite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method_startTest", "name": "PHPUnit\\Util\\Log\\JUnit::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method_endTest", "name": "PHPUnit\\Util\\Log\\JUnit::endTest", "doc": "&quot;A test ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method_getXML", "name": "PHPUnit\\Util\\Log\\JUnit::getXML", "doc": "&quot;Returns the XML as a string.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\JUnit", "fromLink": "PHPUnit/Util/Log/JUnit.html", "link": "PHPUnit/Util/Log/JUnit.html#method_setWriteDocument", "name": "PHPUnit\\Util\\Log\\JUnit::setWriteDocument", "doc": "&quot;Enables or disables the writing of the document\nin flush().&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util\\Log", "fromLink": "PHPUnit/Util/Log.html", "link": "PHPUnit/Util/Log/TeamCity.html", "name": "PHPUnit\\Util\\Log\\TeamCity", "doc": "&quot;A TestListener that generates a logfile of the test execution using the\nTeamCity format (for use with PhpStorm, for instance).&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\TeamCity", "fromLink": "PHPUnit/Util/Log/TeamCity.html", "link": "PHPUnit/Util/Log/TeamCity.html#method_writeProgress", "name": "PHPUnit\\Util\\Log\\TeamCity::writeProgress", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\TeamCity", "fromLink": "PHPUnit/Util/Log/TeamCity.html", "link": "PHPUnit/Util/Log/TeamCity.html#method_printResult", "name": "PHPUnit\\Util\\Log\\TeamCity::printResult", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\TeamCity", "fromLink": "PHPUnit/Util/Log/TeamCity.html", "link": "PHPUnit/Util/Log/TeamCity.html#method_addError", "name": "PHPUnit\\Util\\Log\\TeamCity::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\TeamCity", "fromLink": "PHPUnit/Util/Log/TeamCity.html", "link": "PHPUnit/Util/Log/TeamCity.html#method_addWarning", "name": "PHPUnit\\Util\\Log\\TeamCity::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\TeamCity", "fromLink": "PHPUnit/Util/Log/TeamCity.html", "link": "PHPUnit/Util/Log/TeamCity.html#method_addFailure", "name": "PHPUnit\\Util\\Log\\TeamCity::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\TeamCity", "fromLink": "PHPUnit/Util/Log/TeamCity.html", "link": "PHPUnit/Util/Log/TeamCity.html#method_addIncompleteTest", "name": "PHPUnit\\Util\\Log\\TeamCity::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\TeamCity", "fromLink": "PHPUnit/Util/Log/TeamCity.html", "link": "PHPUnit/Util/Log/TeamCity.html#method_addRiskyTest", "name": "PHPUnit\\Util\\Log\\TeamCity::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\TeamCity", "fromLink": "PHPUnit/Util/Log/TeamCity.html", "link": "PHPUnit/Util/Log/TeamCity.html#method_addSkippedTest", "name": "PHPUnit\\Util\\Log\\TeamCity::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\TeamCity", "fromLink": "PHPUnit/Util/Log/TeamCity.html", "link": "PHPUnit/Util/Log/TeamCity.html#method_printIgnoredTest", "name": "PHPUnit\\Util\\Log\\TeamCity::printIgnoredTest", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\TeamCity", "fromLink": "PHPUnit/Util/Log/TeamCity.html", "link": "PHPUnit/Util/Log/TeamCity.html#method_startTestSuite", "name": "PHPUnit\\Util\\Log\\TeamCity::startTestSuite", "doc": "&quot;A testsuite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\TeamCity", "fromLink": "PHPUnit/Util/Log/TeamCity.html", "link": "PHPUnit/Util/Log/TeamCity.html#method_endTestSuite", "name": "PHPUnit\\Util\\Log\\TeamCity::endTestSuite", "doc": "&quot;A testsuite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\TeamCity", "fromLink": "PHPUnit/Util/Log/TeamCity.html", "link": "PHPUnit/Util/Log/TeamCity.html#method_startTest", "name": "PHPUnit\\Util\\Log\\TeamCity::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Log\\TeamCity", "fromLink": "PHPUnit/Util/Log/TeamCity.html", "link": "PHPUnit/Util/Log/TeamCity.html#method_endTest", "name": "PHPUnit\\Util\\Log\\TeamCity::endTest", "doc": "&quot;A test ended.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util\\PHP", "fromLink": "PHPUnit/Util/PHP.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "doc": "&quot;Utility methods for PHP sub-processes.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method___construct", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::__construct", "doc": "&quot;Creates internal Runtime instance.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_setUseStderrRedirection", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::setUseStderrRedirection", "doc": "&quot;Defines if should use STDERR redirection or not.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_useStderrRedirection", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::useStderrRedirection", "doc": "&quot;Returns TRUE if uses STDERR redirection or FALSE if not.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_setStdin", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::setStdin", "doc": "&quot;Sets the input string to be sent via STDIN&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_getStdin", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::getStdin", "doc": "&quot;Returns the input string to be sent via STDIN&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_setArgs", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::setArgs", "doc": "&quot;Sets the string of arguments to pass to the php job&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_getArgs", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::getArgs", "doc": "&quot;Returns the string of arguments to pass to the php job&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_setEnv", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::setEnv", "doc": "&quot;Sets the array of environment variables to start the child process with&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_getEnv", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::getEnv", "doc": "&quot;Returns the array of environment variables to start the child process with&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_setTimeout", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::setTimeout", "doc": "&quot;Sets the amount of seconds to wait before timing out&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_getTimeout", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::getTimeout", "doc": "&quot;Returns the amount of seconds to wait before timing out&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_factory", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::factory", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_runTestJob", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::runTestJob", "doc": "&quot;Runs a single test in a separate PHP process.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_getCommand", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::getCommand", "doc": "&quot;Returns the command based into the configurations.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_runJob", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::runJob", "doc": "&quot;Runs a single job (PHP code) using a separate PHP process.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\AbstractPhpProcess", "fromLink": "PHPUnit/Util/PHP/AbstractPhpProcess.html", "link": "PHPUnit/Util/PHP/AbstractPhpProcess.html#method_settingsToParameters", "name": "PHPUnit\\Util\\PHP\\AbstractPhpProcess::settingsToParameters", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util\\PHP", "fromLink": "PHPUnit/Util/PHP.html", "link": "PHPUnit/Util/PHP/DefaultPhpProcess.html", "name": "PHPUnit\\Util\\PHP\\DefaultPhpProcess", "doc": "&quot;Default utility for PHP sub-processes.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\DefaultPhpProcess", "fromLink": "PHPUnit/Util/PHP/DefaultPhpProcess.html", "link": "PHPUnit/Util/PHP/DefaultPhpProcess.html#method_runJob", "name": "PHPUnit\\Util\\PHP\\DefaultPhpProcess::runJob", "doc": "&quot;Runs a single job (PHP code) using a separate PHP process.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\DefaultPhpProcess", "fromLink": "PHPUnit/Util/PHP/DefaultPhpProcess.html", "link": "PHPUnit/Util/PHP/DefaultPhpProcess.html#method_getHandles", "name": "PHPUnit\\Util\\PHP\\DefaultPhpProcess::getHandles", "doc": "&quot;Returns an array of file handles to be used in place of pipes&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\DefaultPhpProcess", "fromLink": "PHPUnit/Util/PHP/DefaultPhpProcess.html", "link": "PHPUnit/Util/PHP/DefaultPhpProcess.html#method_runProcess", "name": "PHPUnit\\Util\\PHP\\DefaultPhpProcess::runProcess", "doc": "&quot;Handles creating the child process and returning the STDOUT and STDERR&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\DefaultPhpProcess", "fromLink": "PHPUnit/Util/PHP/DefaultPhpProcess.html", "link": "PHPUnit/Util/PHP/DefaultPhpProcess.html#method_process", "name": "PHPUnit\\Util\\PHP\\DefaultPhpProcess::process", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\DefaultPhpProcess", "fromLink": "PHPUnit/Util/PHP/DefaultPhpProcess.html", "link": "PHPUnit/Util/PHP/DefaultPhpProcess.html#method_cleanup", "name": "PHPUnit\\Util\\PHP\\DefaultPhpProcess::cleanup", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util\\PHP", "fromLink": "PHPUnit/Util/PHP.html", "link": "PHPUnit/Util/PHP/WindowsPhpProcess.html", "name": "PHPUnit\\Util\\PHP\\WindowsPhpProcess", "doc": "&quot;Windows utility for PHP sub-processes.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\WindowsPhpProcess", "fromLink": "PHPUnit/Util/PHP/WindowsPhpProcess.html", "link": "PHPUnit/Util/PHP/WindowsPhpProcess.html#method_getHandles", "name": "PHPUnit\\Util\\PHP\\WindowsPhpProcess::getHandles", "doc": "&quot;Returns an array of file handles to be used in place of pipes&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\PHP\\WindowsPhpProcess", "fromLink": "PHPUnit/Util/PHP/WindowsPhpProcess.html", "link": "PHPUnit/Util/PHP/WindowsPhpProcess.html#method_getCommand", "name": "PHPUnit\\Util\\PHP\\WindowsPhpProcess::getCommand", "doc": "&quot;Returns the command based into the configurations.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/Printer.html", "name": "PHPUnit\\Util\\Printer", "doc": "&quot;Utility class that can print to STDOUT or write to a file.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\Printer", "fromLink": "PHPUnit/Util/Printer.html", "link": "PHPUnit/Util/Printer.html#method___construct", "name": "PHPUnit\\Util\\Printer::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Printer", "fromLink": "PHPUnit/Util/Printer.html", "link": "PHPUnit/Util/Printer.html#method_flush", "name": "PHPUnit\\Util\\Printer::flush", "doc": "&quot;Flush buffer and close output if it&#039;s not to a PHP stream&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Printer", "fromLink": "PHPUnit/Util/Printer.html", "link": "PHPUnit/Util/Printer.html#method_incrementalFlush", "name": "PHPUnit\\Util\\Printer::incrementalFlush", "doc": "&quot;Performs a safe, incremental flush.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Printer", "fromLink": "PHPUnit/Util/Printer.html", "link": "PHPUnit/Util/Printer.html#method_write", "name": "PHPUnit\\Util\\Printer::write", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Printer", "fromLink": "PHPUnit/Util/Printer.html", "link": "PHPUnit/Util/Printer.html#method_getAutoFlush", "name": "PHPUnit\\Util\\Printer::getAutoFlush", "doc": "&quot;Check auto-flush mode.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Printer", "fromLink": "PHPUnit/Util/Printer.html", "link": "PHPUnit/Util/Printer.html#method_setAutoFlush", "name": "PHPUnit\\Util\\Printer::setAutoFlush", "doc": "&quot;Set auto-flushing mode.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/RegularExpression.html", "name": "PHPUnit\\Util\\RegularExpression", "doc": "&quot;Error handler that converts PHP errors and warnings to exceptions.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\RegularExpression", "fromLink": "PHPUnit/Util/RegularExpression.html", "link": "PHPUnit/Util/RegularExpression.html#method_safeMatch", "name": "PHPUnit\\Util\\RegularExpression::safeMatch", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/Test.html", "name": "PHPUnit\\Util\\Test", "doc": "&quot;Test helpers.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_describe", "name": "PHPUnit\\Util\\Test::describe", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getLinesToBeCovered", "name": "PHPUnit\\Util\\Test::getLinesToBeCovered", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getLinesToBeUsed", "name": "PHPUnit\\Util\\Test::getLinesToBeUsed", "doc": "&quot;Returns lines of code specified with the @uses annotation.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getRequirements", "name": "PHPUnit\\Util\\Test::getRequirements", "doc": "&quot;Returns the requirements for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getMissingRequirements", "name": "PHPUnit\\Util\\Test::getMissingRequirements", "doc": "&quot;Returns the missing requirements for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getExpectedException", "name": "PHPUnit\\Util\\Test::getExpectedException", "doc": "&quot;Returns the expected exception for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getProvidedData", "name": "PHPUnit\\Util\\Test::getProvidedData", "doc": "&quot;Returns the provided data for a method.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getDataFromTestWithAnnotation", "name": "PHPUnit\\Util\\Test::getDataFromTestWithAnnotation", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_parseTestMethodAnnotations", "name": "PHPUnit\\Util\\Test::parseTestMethodAnnotations", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getInlineAnnotations", "name": "PHPUnit\\Util\\Test::getInlineAnnotations", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getBackupSettings", "name": "PHPUnit\\Util\\Test::getBackupSettings", "doc": "&quot;Returns the backup settings for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getDependencies", "name": "PHPUnit\\Util\\Test::getDependencies", "doc": "&quot;Returns the dependencies for a test class or method.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getErrorHandlerSettings", "name": "PHPUnit\\Util\\Test::getErrorHandlerSettings", "doc": "&quot;Returns the error handler settings for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getGroups", "name": "PHPUnit\\Util\\Test::getGroups", "doc": "&quot;Returns the groups for a test class or method.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getSize", "name": "PHPUnit\\Util\\Test::getSize", "doc": "&quot;Returns the size of the test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getProcessIsolationSettings", "name": "PHPUnit\\Util\\Test::getProcessIsolationSettings", "doc": "&quot;Returns the process isolation settings for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getPreserveGlobalStateSettings", "name": "PHPUnit\\Util\\Test::getPreserveGlobalStateSettings", "doc": "&quot;Returns the preserve global state settings for a test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Test", "fromLink": "PHPUnit/Util/Test.html", "link": "PHPUnit/Util/Test.html#method_getHookMethods", "name": "PHPUnit\\Util\\Test::getHookMethods", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util\\TestDox", "fromLink": "PHPUnit/Util/TestDox.html", "link": "PHPUnit/Util/TestDox/HtmlResultPrinter.html", "name": "PHPUnit\\Util\\TestDox\\HtmlResultPrinter", "doc": "&quot;Prints TestDox documentation in HTML format.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\HtmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/HtmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/HtmlResultPrinter.html#method_startRun", "name": "PHPUnit\\Util\\TestDox\\HtmlResultPrinter::startRun", "doc": "&quot;Handler for &#039;start run&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\HtmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/HtmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/HtmlResultPrinter.html#method_startClass", "name": "PHPUnit\\Util\\TestDox\\HtmlResultPrinter::startClass", "doc": "&quot;Handler for &#039;start class&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\HtmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/HtmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/HtmlResultPrinter.html#method_onTest", "name": "PHPUnit\\Util\\TestDox\\HtmlResultPrinter::onTest", "doc": "&quot;Handler for &#039;on test&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\HtmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/HtmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/HtmlResultPrinter.html#method_endClass", "name": "PHPUnit\\Util\\TestDox\\HtmlResultPrinter::endClass", "doc": "&quot;Handler for &#039;end class&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\HtmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/HtmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/HtmlResultPrinter.html#method_endRun", "name": "PHPUnit\\Util\\TestDox\\HtmlResultPrinter::endRun", "doc": "&quot;Handler for &#039;end run&#039; event.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util\\TestDox", "fromLink": "PHPUnit/Util/TestDox.html", "link": "PHPUnit/Util/TestDox/NamePrettifier.html", "name": "PHPUnit\\Util\\TestDox\\NamePrettifier", "doc": "&quot;Prettifies class and method names for use in TestDox documentation.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\NamePrettifier", "fromLink": "PHPUnit/Util/TestDox/NamePrettifier.html", "link": "PHPUnit/Util/TestDox/NamePrettifier.html#method_prettifyTestClass", "name": "PHPUnit\\Util\\TestDox\\NamePrettifier::prettifyTestClass", "doc": "&quot;Prettifies the name of a test class.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\NamePrettifier", "fromLink": "PHPUnit/Util/TestDox/NamePrettifier.html", "link": "PHPUnit/Util/TestDox/NamePrettifier.html#method_prettifyTestMethod", "name": "PHPUnit\\Util\\TestDox\\NamePrettifier::prettifyTestMethod", "doc": "&quot;Prettifies the name of a test method.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\NamePrettifier", "fromLink": "PHPUnit/Util/TestDox/NamePrettifier.html", "link": "PHPUnit/Util/TestDox/NamePrettifier.html#method_setPrefix", "name": "PHPUnit\\Util\\TestDox\\NamePrettifier::setPrefix", "doc": "&quot;Sets the prefix of test names.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\NamePrettifier", "fromLink": "PHPUnit/Util/TestDox/NamePrettifier.html", "link": "PHPUnit/Util/TestDox/NamePrettifier.html#method_setSuffix", "name": "PHPUnit\\Util\\TestDox\\NamePrettifier::setSuffix", "doc": "&quot;Sets the suffix of test names.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util\\TestDox", "fromLink": "PHPUnit/Util/TestDox.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter", "doc": "&quot;Base class for printers of TestDox documentation.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method___construct", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_flush", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::flush", "doc": "&quot;Flush buffer and close output.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_addError", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_addWarning", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_addFailure", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_addIncompleteTest", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_addRiskyTest", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_addSkippedTest", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_startTestSuite", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::startTestSuite", "doc": "&quot;A testsuite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_endTestSuite", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::endTestSuite", "doc": "&quot;A testsuite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_startTest", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_endTest", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::endTest", "doc": "&quot;A test ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_doEndClass", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::doEndClass", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_startRun", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::startRun", "doc": "&quot;Handler for &#039;start run&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_startClass", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::startClass", "doc": "&quot;Handler for &#039;start class&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_onTest", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::onTest", "doc": "&quot;Handler for &#039;on test&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_endClass", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::endClass", "doc": "&quot;Handler for &#039;end class&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\ResultPrinter", "fromLink": "PHPUnit/Util/TestDox/ResultPrinter.html", "link": "PHPUnit/Util/TestDox/ResultPrinter.html#method_endRun", "name": "PHPUnit\\Util\\TestDox\\ResultPrinter::endRun", "doc": "&quot;Handler for &#039;end run&#039; event.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util\\TestDox", "fromLink": "PHPUnit/Util/TestDox.html", "link": "PHPUnit/Util/TestDox/TextResultPrinter.html", "name": "PHPUnit\\Util\\TestDox\\TextResultPrinter", "doc": "&quot;Prints TestDox documentation in text format.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\TextResultPrinter", "fromLink": "PHPUnit/Util/TestDox/TextResultPrinter.html", "link": "PHPUnit/Util/TestDox/TextResultPrinter.html#method_startClass", "name": "PHPUnit\\Util\\TestDox\\TextResultPrinter::startClass", "doc": "&quot;Handler for &#039;start class&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\TextResultPrinter", "fromLink": "PHPUnit/Util/TestDox/TextResultPrinter.html", "link": "PHPUnit/Util/TestDox/TextResultPrinter.html#method_onTest", "name": "PHPUnit\\Util\\TestDox\\TextResultPrinter::onTest", "doc": "&quot;Handler for &#039;on test&#039; event.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\TextResultPrinter", "fromLink": "PHPUnit/Util/TestDox/TextResultPrinter.html", "link": "PHPUnit/Util/TestDox/TextResultPrinter.html#method_endClass", "name": "PHPUnit\\Util\\TestDox\\TextResultPrinter::endClass", "doc": "&quot;Handler for &#039;end class&#039; event.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util\\TestDox", "fromLink": "PHPUnit/Util/TestDox.html", "link": "PHPUnit/Util/TestDox/XmlResultPrinter.html", "name": "PHPUnit\\Util\\TestDox\\XmlResultPrinter", "doc": "&quot;&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\XmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/XmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/XmlResultPrinter.html#method___construct", "name": "PHPUnit\\Util\\TestDox\\XmlResultPrinter::__construct", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\XmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/XmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/XmlResultPrinter.html#method_flush", "name": "PHPUnit\\Util\\TestDox\\XmlResultPrinter::flush", "doc": "&quot;Flush buffer and close output.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\XmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/XmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/XmlResultPrinter.html#method_addError", "name": "PHPUnit\\Util\\TestDox\\XmlResultPrinter::addError", "doc": "&quot;An error occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\XmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/XmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/XmlResultPrinter.html#method_addWarning", "name": "PHPUnit\\Util\\TestDox\\XmlResultPrinter::addWarning", "doc": "&quot;A warning occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\XmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/XmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/XmlResultPrinter.html#method_addFailure", "name": "PHPUnit\\Util\\TestDox\\XmlResultPrinter::addFailure", "doc": "&quot;A failure occurred.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\XmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/XmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/XmlResultPrinter.html#method_addIncompleteTest", "name": "PHPUnit\\Util\\TestDox\\XmlResultPrinter::addIncompleteTest", "doc": "&quot;Incomplete test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\XmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/XmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/XmlResultPrinter.html#method_addRiskyTest", "name": "PHPUnit\\Util\\TestDox\\XmlResultPrinter::addRiskyTest", "doc": "&quot;Risky test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\XmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/XmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/XmlResultPrinter.html#method_addSkippedTest", "name": "PHPUnit\\Util\\TestDox\\XmlResultPrinter::addSkippedTest", "doc": "&quot;Skipped test.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\XmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/XmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/XmlResultPrinter.html#method_startTestSuite", "name": "PHPUnit\\Util\\TestDox\\XmlResultPrinter::startTestSuite", "doc": "&quot;A test suite started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\XmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/XmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/XmlResultPrinter.html#method_endTestSuite", "name": "PHPUnit\\Util\\TestDox\\XmlResultPrinter::endTestSuite", "doc": "&quot;A test suite ended.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\XmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/XmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/XmlResultPrinter.html#method_startTest", "name": "PHPUnit\\Util\\TestDox\\XmlResultPrinter::startTest", "doc": "&quot;A test started.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\TestDox\\XmlResultPrinter", "fromLink": "PHPUnit/Util/TestDox/XmlResultPrinter.html", "link": "PHPUnit/Util/TestDox/XmlResultPrinter.html#method_endTest", "name": "PHPUnit\\Util\\TestDox\\XmlResultPrinter::endTest", "doc": "&quot;A test ended.&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/Type.html", "name": "PHPUnit\\Util\\Type", "doc": "&quot;Utility class for textual type (and value) representation.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\Type", "fromLink": "PHPUnit/Util/Type.html", "link": "PHPUnit/Util/Type.html#method_isType", "name": "PHPUnit\\Util\\Type::isType", "doc": "&quot;&quot;"},
            
            {"type": "Class", "fromName": "PHPUnit\\Util", "fromLink": "PHPUnit/Util.html", "link": "PHPUnit/Util/Xml.html", "name": "PHPUnit\\Util\\Xml", "doc": "&quot;XML helpers.&quot;"},
                                                        {"type": "Method", "fromName": "PHPUnit\\Util\\Xml", "fromLink": "PHPUnit/Util/Xml.html", "link": "PHPUnit/Util/Xml.html#method_load", "name": "PHPUnit\\Util\\Xml::load", "doc": "&quot;Load an $actual document into a DOMDocument.  This is called\nfrom the selector assertions.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Xml", "fromLink": "PHPUnit/Util/Xml.html", "link": "PHPUnit/Util/Xml.html#method_loadFile", "name": "PHPUnit\\Util\\Xml::loadFile", "doc": "&quot;Loads an XML (or HTML) file into a DOMDocument object.&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Xml", "fromLink": "PHPUnit/Util/Xml.html", "link": "PHPUnit/Util/Xml.html#method_removeCharacterDataNodes", "name": "PHPUnit\\Util\\Xml::removeCharacterDataNodes", "doc": "&quot;&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Xml", "fromLink": "PHPUnit/Util/Xml.html", "link": "PHPUnit/Util/Xml.html#method_prepareString", "name": "PHPUnit\\Util\\Xml::prepareString", "doc": "&quot;Escapes a string for the use in XML documents\nAny Unicode character is allowed, excluding the surrogate blocks, FFFE,\nand FFFF (not even as character reference).&quot;"},
                    {"type": "Method", "fromName": "PHPUnit\\Util\\Xml", "fromLink": "PHPUnit/Util/Xml.html", "link": "PHPUnit/Util/Xml.html#method_xmlToVariable", "name": "PHPUnit\\Util\\Xml::xmlToVariable", "doc": "&quot;\&quot;Convert\&quot; a DOMElement object into a PHP variable.&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


